"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getOraclePda = exports.getFeeTierPda = exports.getTickArrayPda = exports.getPositionMetadataPda = exports.METADATA_PROGRAM_ADDRESS = exports.getPositionPda = exports.getWhirlpoolVaultBPda = exports.getWhirlpoolVaultAPda = exports.getWhirlpoolPda = void 0;
const web3_js_1 = require("@solana/web3.js");
const find_program_address_1 = require("../find-program-address");
const anchor_1 = require("@project-serum/anchor");
const PDA_WHIRLPOOL_SEED = "whirlpool";
const PDA_VAULT_A_SEED = "token_vault_a";
const PDA_VAULT_B_SEED = "token_vault_b";
const PDA_POSITION_SEED = "position";
const PDA_METADATA_SEED = "metadata";
const PDA_TICK_ARRAY_SEED = "tick_array";
const PDA_FEE_TIER_SEED = "fee_tier";
const PDA_ORACLE_SEED = "oracle";
function getWhirlpoolPda(programId, whirlpoolConfigKey, tokenMintAKey, tokenMintBKey, tickSpacing) {
    return (0, find_program_address_1.findProgramAddress)([
        Buffer.from(PDA_WHIRLPOOL_SEED),
        whirlpoolConfigKey.toBuffer(),
        tokenMintAKey.toBuffer(),
        tokenMintBKey.toBuffer(),
        new anchor_1.BN(tickSpacing).toArrayLike(Buffer, "le", 2),
    ], programId);
}
exports.getWhirlpoolPda = getWhirlpoolPda;
function getWhirlpoolVaultAPda(programId, whirlpoolKey, tokenMintAKey) {
    return (0, find_program_address_1.findProgramAddress)([Buffer.from(PDA_VAULT_A_SEED), whirlpoolKey.toBuffer(), tokenMintAKey.toBuffer()], programId);
}
exports.getWhirlpoolVaultAPda = getWhirlpoolVaultAPda;
function getWhirlpoolVaultBPda(programId, whirlpoolKey, tokenMintBKey) {
    return (0, find_program_address_1.findProgramAddress)([Buffer.from(PDA_VAULT_B_SEED), whirlpoolKey.toBuffer(), tokenMintBKey.toBuffer()], programId);
}
exports.getWhirlpoolVaultBPda = getWhirlpoolVaultBPda;
function getPositionPda(programId, positionMintKey) {
    return (0, find_program_address_1.findProgramAddress)([Buffer.from(PDA_POSITION_SEED), positionMintKey.toBuffer()], programId);
}
exports.getPositionPda = getPositionPda;
exports.METADATA_PROGRAM_ADDRESS = new web3_js_1.PublicKey("metaqbxxUerdq28cj1RbAWkYQm3ybzjb6a8bt518x1s");
function getPositionMetadataPda(programId, positionMintKey) {
    return (0, find_program_address_1.findProgramAddress)([
        Buffer.from(PDA_METADATA_SEED),
        exports.METADATA_PROGRAM_ADDRESS.toBuffer(),
        positionMintKey.toBuffer(),
    ], exports.METADATA_PROGRAM_ADDRESS);
}
exports.getPositionMetadataPda = getPositionMetadataPda;
function getTickArrayPda(programId, whirlpoolAddress, startTick) {
    return (0, find_program_address_1.findProgramAddress)([
        Buffer.from(PDA_TICK_ARRAY_SEED),
        whirlpoolAddress.toBuffer(),
        Buffer.from(startTick.toString()),
    ], programId);
}
exports.getTickArrayPda = getTickArrayPda;
function getFeeTierPda(programId, whirlpoolsConfigAddress, tickSpacing) {
    return (0, find_program_address_1.findProgramAddress)([
        Buffer.from(PDA_FEE_TIER_SEED),
        whirlpoolsConfigAddress.toBuffer(),
        new anchor_1.BN(tickSpacing).toArrayLike(Buffer, "le", 2),
    ], programId);
}
exports.getFeeTierPda = getFeeTierPda;
function getOraclePda(programId, whirlpoolAddress) {
    return (0, find_program_address_1.findProgramAddress)([Buffer.from(PDA_ORACLE_SEED), whirlpoolAddress.toBuffer()], programId);
}
exports.getOraclePda = getOraclePda;
