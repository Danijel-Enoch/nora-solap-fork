{
  "version": "1.0.0-beta.22",
  "license": "MIT",
  "source": "src/index.tsx",
  "main": "dist/index.js",
  "typings": "dist/index.d.ts",
  "files": [
    "dist"
  ],
  "engines": {
    "node": ">=10"
  },
  "peerDependencies": {
    "@project-serum/serum": ">=0.13.60",
    "@solana/web3.js": ">=1.15.0",
    "bn.js": ">=5.2.0",
    "react": ">=16"
  },
  "husky": {
    "hooks": {
      "pre-commit": "dts lint"
    }
  },
  "name": "@jup-ag/react-hook",
  "author": "zhengyutay",
  "module": "dist/use-jupiter.esm.js",
  "size-limit": [
    {
      "path": "dist/use-jupiter.cjs.production.min.js",
      "limit": "10 KB"
    },
    {
      "path": "dist/use-jupiter.esm.js",
      "limit": "10 KB"
    }
  ],
  "devDependencies": {
    "@size-limit/preset-small-lib": "~6.0.4",
    "@types/react": "^17.0.22",
    "@types/react-dom": "~17.0.11",
    "@types/jest": "27.0.2",
    "husky": "~7.0.4",
    "react": "~17.0.2",
    "react-dom": "~17.0.2",
    "size-limit": "~6.0.4",
    "dts-cli": "1.4.0",
    "tslib": "^2.3.1",
    "typescript": "4.6.3",
    "@solana/web3.js": "~1.39.1",
    "@solana/wallet-adapter-base": "~0.9.5",
    "@types/node": "^16",
    "jest-environment-jsdom": "~27.5.1",
    "@testing-library/react": "~12.1.4",
    "@testing-library/jest-dom": "~5.16.2",
    "@types/testing-library__jest-dom": "~5.14.3"
  },
  "dependencies": {
    "@jup-ag/core": "1.0.0-beta.22"
  },
  "jest": {
    "testEnvironment": "jsdom"
  },
  "browserslist": [
    "last 2 Chrome versions"
  ],
  "scripts": {
    "start": "dts watch --noClean",
    "build": "dts build",
    "test": "dts test --passWithNoTests",
    "lint": "dts lint",
    "size": "size-limit",
    "analyze": "size-limit --why"
  },
  "readme": "# @jup-ag/react-hook\n\nThe react hook to connect integrate Jupiter.\n\n# Installation\n\nYarn\n```\nyarn add @jup-ag/react-hook\n```\n\nNPM\n```\nnpm install @jup-ag/react-hook\n```\n\n## Usage\nAt your App shell:\n```tsx\nimport { JupiterProvider } from '@jup-ag/react-hook';\nimport { Connection } from '@solana/web3.js';\n\nconst connection = new Connection('https://solana-api.projectserum.com');\n\nconst App = ({ children }) => {\n  const wallet = useWallet() // user wallet\n  return (\n    <JupiterProivder connection={connection} cluster=\"mainnet-beta\" userPublicKey={wallet.publicKey}>\n      {children}\n    </JupiterProvider>\n  )\n}\n```\n\n```tsx\nimport { useJupiter } from '@jup-ag/raect-hook';\n\nconst SwapForm = () => {\n  const jupiter = useJupiter({\n    amount, // integer amount in term of input mint\n    inputMint,\n    outputMint,\n    slippage,\n    debounceTime, // debounce time before refresh\n  })\n\n  const {\n    allTokenMints, // all the token mints that is possible to be input\n    routeMap, // routeMap, same as the one in @jup-ag/core\n    exchange, // exchange \n    refresh, // function to refresh rates\n    lastRefreshTimestamp: lastRefreshTimestamp.current, // timestamp when the data was last returned\n    loading, // loading states\n    routes, // all the routes from inputMint to outputMint\n    error,\n  } = jupiter\n}\n```\n\n## Example repo\nhttps://github.com/ZhengYuTay/create-dapp-solana-nextjs\n"
}