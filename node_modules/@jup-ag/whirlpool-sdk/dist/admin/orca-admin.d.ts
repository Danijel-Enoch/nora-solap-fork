import { PublicKey } from "@solana/web3.js";
import { InitPoolTxParam, CollectProtocolFeesTxParam, SetFeeAuthorityTxParam, SetCollectProtocolFeesAuthorityTxParam, InitRewardTxParam, SetRewardAuthorityTxParam, SetRewardEmissionsTxParam, SetRewardAuthorityBySuperAuthorityTxParam, SetRewardEmissionsBySuperAuthorityTxParam, SetFeeRateTxParam, SetProtocolFeeRateTxParam } from "./public/types";
import { OrcaDAL } from "../dal/orca-dal";
import { TransactionBuilder } from "@orca-so/whirlpool-client-sdk";
export declare class OrcaAdmin {
    private readonly dal;
    constructor(dal: OrcaDAL);
    getInitPoolTx(param: InitPoolTxParam): {
        tx: TransactionBuilder;
        address: PublicKey;
    };
    /*** Fee ***/
    getCollectProtocolFeesTx(param: CollectProtocolFeesTxParam): Promise<TransactionBuilder>;
    getSetFeeAuthorityTx(param: SetFeeAuthorityTxParam): TransactionBuilder;
    getSetFeeRateTx(param: SetFeeRateTxParam): Promise<TransactionBuilder>;
    getSetProtocolFeeRateTx(param: SetProtocolFeeRateTxParam): Promise<TransactionBuilder>;
    getSetCollectProtocolFeesAuthorityTx(param: SetCollectProtocolFeesAuthorityTxParam): TransactionBuilder;
    /*** Reward ***/
    getInitRewardTx(param: InitRewardTxParam): {
        tx: TransactionBuilder;
        rewardVault: PublicKey;
    };
    getSetRewardAuthorityTx(param: SetRewardAuthorityTxParam): TransactionBuilder;
    getSetRewardEmissionsTx(param: SetRewardEmissionsTxParam): Promise<TransactionBuilder>;
    getSetRewardAuthorityBySuperAuthorityTx(param: SetRewardAuthorityBySuperAuthorityTxParam): TransactionBuilder;
    getSetRewardEmissionsBySuperAuthorityTx(param: SetRewardEmissionsBySuperAuthorityTxParam): TransactionBuilder;
}
