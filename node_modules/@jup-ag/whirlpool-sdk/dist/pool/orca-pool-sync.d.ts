/**
 * A sync attempt at getSwapQuote
 */
import { parseTickArray, parseWhirlpool, TickArrayData, WhirlpoolData } from "@orca-so/whirlpool-client-sdk";
import { u64 } from "@solana/spl-token";
import { PublicKey } from "@solana/web3.js";
import BN from "bn.js";
import { Percentage } from "../utils/public";
export { parseWhirlpool, parseTickArray, WhirlpoolData, TickArrayData };
declare type SwapQuoteParam = {
    poolAddress: PublicKey;
    whirlpool: WhirlpoolData;
    tickArrays: Map<string, TickArrayData>;
    tokenMint: PublicKey;
    tokenAmount: u64;
    isInput: boolean;
    slippageTolerance?: Percentage;
};
export declare function getSwapQuote(param: SwapQuoteParam): {
    otherAmountThreshold: BN;
    sqrtPriceLimitX64: BN;
    amountIn: BN;
    amountOut: BN;
    aToB: boolean;
    fixedInput: boolean;
};
/** Provides 3 tick arrays each side given current tick index */
export declare function getTickArrayPks(poolAddress: PublicKey, whirlpool: WhirlpoolData): PublicKey[];
export declare function getTickArrayPublicKeysForSwap(tickCurrentIndex: number, targetSqrtPriceX64: BN, tickSpacing: number, poolAddress: PublicKey, tickArrays: Map<string, TickArrayData>, programId: PublicKey, aToB: boolean): [PublicKey, PublicKey, PublicKey];
export declare function getDefaultSqrtPriceLimit(aToB: boolean): BN;
