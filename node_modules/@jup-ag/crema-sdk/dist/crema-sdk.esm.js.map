{"version":3,"file":"crema-sdk.esm.js","sources":["../node_modules/regenerator-runtime/runtime.js","../src/util/decimalExt.ts","../src/util/layout.ts","../src/util/transaction.ts","../src/util/token.ts","../src/instructions/instruction.ts","../src/instructions/addUserPosition.ts","../src/instructions/claim.ts","../src/instructions/depositAllTokenTypes.ts","../src/instructions/initialize.ts","../src/instructions/managerClaim.ts","../src/instructions/swap.ts","../src/instructions/withdrawAllTokenTypes.ts","../src/instructions/simulateSwap.ts","../src/state/tick.ts","../src/state/positions.ts","../src/state/tokenSwap.ts","../src/math/tick.ts","../src/math/liquity.ts","../src/tokenSwap.ts"],"sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","import \"decimal.js\";\nimport BN from \"bn.js\";\nimport invariant from \"tiny-invariant\";\nimport Decimal from \"decimal.js\";\n\nDecimal.config({\n  precision: 64,\n  rounding: Decimal.ROUND_DOWN,\n  toExpNeg: -64,\n  toExpPos: 64,\n});\n\nconst TEN = new Decimal(10);\nconst P64 = new Decimal(2).pow(64);\nconst MAX_INT64 = P64.div(2).sub(1);\nconst MIN_INT64 = P64.div(2).neg();\nconst MAX_UINT64 = P64.sub(1);\nconst MAX_INT128 = P64.pow(63).sub(1);\nconst MIN_INT128 = MAX_INT128.neg();\nconst MAX_UINT128 = P64.pow(64).sub(1);\nconst MAX_PRECISION = 40;\n\nexport class DecimalExt {\n  /**\n   * New a Decimal from a int64 buffer\n   * @param buffer The buffer\n   * @param precision The pricision\n   * @returns The Decimal value, the result will be div 10^precision\n   */\n  static from64Buffer(buffer: Buffer, precision: number = 0): Decimal {\n    invariant(buffer.length === 8, `Invalid buffer length: ${buffer.length}`);\n    invariant(\n      Math.abs(precision) < MAX_PRECISION,\n      `Invalid precision: ${precision}`\n    );\n\n    if (buffer[7] >= 0x80) {\n      let ss = [];\n      for (let v of buffer) {\n        ss.push(`00${Math.abs(~v & 0xff).toString(16)}`.slice(-2));\n      }\n      let bn = new BN(ss.join(\"\"), 16, \"le\").add(new BN(1)).neg();\n      return new Decimal(bn.toString()).div(TEN.pow(precision));\n    }\n    return new Decimal(new BN(buffer, \"le\").toString()).div(TEN.pow(precision));\n  }\n\n  /**\n   * New a Decimal from a uint64 buffer\n   * @param buffer The buffer\n   * @param precision The precision\n   * @returns The Decimal value, the result will be div 10^precision\n   */\n  static fromU64Buffer(buffer: Buffer, precision: number = 0): Decimal {\n    invariant(buffer.length === 8, `Invalid buffer length: ${buffer.length}`);\n    invariant(\n      Math.abs(precision) < MAX_PRECISION,\n      `Invalid precision: ${precision}`\n    );\n    return new Decimal(new BN(buffer, 16, \"le\").toString()).div(\n      TEN.pow(precision)\n    );\n  }\n\n  /**\n   * New a Decimal from a int128 buffer\n   * @param buffer The buffer\n   * @param precision The pricision\n   * @returns The Decimal value, the result will be div 10^precision\n   */\n  static from128Buffer(buffer: Buffer, precision: number = 0): Decimal {\n    invariant(buffer.length === 16, `Invalid buffer length: ${buffer.length}`);\n    invariant(\n      Math.abs(precision) < MAX_PRECISION,\n      `Invalid precision: ${precision}`\n    );\n\n    if (buffer[15] >= 0x80) {\n      let ss = [];\n      for (let v of buffer) {\n        ss.push(`00${Math.abs(~v & 0xff).toString(16)}`.slice(-2));\n      }\n      let bn = new BN(ss.join(\"\"), 16, \"le\").add(new BN(1)).neg();\n      return new Decimal(bn.toString()).div(TEN.pow(precision));\n    }\n    return new Decimal(new BN(buffer, \"le\").toString()).div(TEN.pow(precision));\n  }\n\n  /**\n   * New a Decimal from a uint128 buffer\n   * @param buffer The buffer\n   * @param precision The precision\n   * @returns The Decimal value, the result will be div 10^precision\n   */\n  static fromU128Buffer(buffer: Buffer, precision: number = 0): Decimal {\n    invariant(buffer.length === 16, `Invalid buffer length: ${buffer.length}`);\n    invariant(\n      Math.abs(precision) < MAX_PRECISION,\n      `Invalid precision: ${precision}`\n    );\n    return new Decimal(new BN(buffer, \"le\").toString()).div(TEN.pow(precision));\n  }\n\n  /**\n   * Convert a Decimal value to int64 buffer\n   * @param v The Decimal value\n   * @param precision The precision\n   * @returns The buffer, the result will be mul 10^precision\n   */\n  static to64Buffer(v: Decimal, precision: number = 0): Buffer {\n    invariant(\n      Math.abs(precision) < MAX_PRECISION,\n      `Invalid precision: ${precision}`\n    );\n    v = v.mul(TEN.pow(precision)).round();\n    invariant(\n      v.greaterThanOrEqualTo(MIN_INT64) && v.lessThanOrEqualTo(MAX_INT64),\n      `Invalid v: ${v.toString()} to int128 buffer with precision: ${precision}`\n    );\n    let bn = new BN(v.toString());\n    if (bn.isNeg()) {\n      let buffer = bn.add(new BN(1)).toBuffer(\"le\", 8);\n      buffer.forEach(function(item, index, input) {\n        input[index] = ~item & 0xff;\n      });\n      return buffer;\n    } else {\n      return bn.toBuffer(\"le\", 8);\n    }\n  }\n\n  /**\n   * Convert a Decimal value to uint64 buffer\n   * @param v The Decimal value\n   * @param precision The precision\n   * @returns The buffer, the result will be mul 10^precision\n   */\n  static toU64Buffer(v: Decimal, precision: number = 0): Buffer {\n    invariant(\n      Math.abs(precision) < MAX_PRECISION,\n      `Invalid precision: ${precision}`\n    );\n    v = v.mul(TEN.pow(precision)).round();\n    invariant(\n      v.greaterThanOrEqualTo(0) && v.lessThanOrEqualTo(MAX_UINT64),\n      `Invalid v: ${v.toString()} to uint64 buffer with precision: ${precision}`\n    );\n    return new BN(v.toString()).toBuffer(\"le\", 8);\n  }\n\n  /**\n   * Convert a Decimal value to int128 buffer\n   * @param v The Decimal value\n   * @param precision The precision\n   * @returns The buffer, the result will be mul 10^precision\n   */\n  static to128Buffer(v: Decimal, precision: number = 0): Buffer {\n    invariant(\n      Math.abs(precision) < MAX_PRECISION,\n      `Invalid precision: ${precision}`\n    );\n    v = v.mul(TEN.pow(precision)).round();\n    invariant(\n      v.greaterThanOrEqualTo(MIN_INT128) && v.lessThanOrEqualTo(MAX_INT128),\n      `Invalid v: ${v.toString()} to int128 buffer with precision: ${precision}`\n    );\n    let bn = new BN(v.toString());\n    if (bn.isNeg()) {\n      let buffer = bn.add(new BN(1)).toBuffer(\"le\", 16);\n      buffer.forEach(function(item, index, input) {\n        input[index] = ~item & 0xff;\n      });\n      return buffer;\n    } else {\n      return bn.toBuffer(\"le\", 16);\n    }\n  }\n\n  /**\n   * Convert a Decimal value to uint128 buffer\n   * @param v The Decimal value\n   * @param precision The precision\n   * @returns The buffer, the result will be mul 10^precision\n   */\n  static toU128Buffer(v: Decimal, precision: number = 0): Buffer {\n    invariant(\n      Math.abs(precision) < MAX_PRECISION,\n      `Invalid precision: ${precision}`\n    );\n    v = v.mul(TEN.pow(precision)).round();\n    invariant(\n      v.greaterThanOrEqualTo(0) && v.lessThanOrEqualTo(MAX_UINT128),\n      `Invalid v: ${v.toString()} to int128 buffer with precision: ${precision}`\n    );\n    return new BN(v.toString()).toBuffer(\"le\", 16);\n  }\n}\n","import { blob, Layout, Blob } from \"@solana/buffer-layout\";\nimport { PublicKey, AccountInfo } from \"@solana/web3.js\";\nimport Decimal from \"decimal.js\";\nimport { DecimalExt } from \"./decimalExt\";\n\nexport type Parser<T> = (\n  pubkey: PublicKey,\n  info: AccountInfo<Buffer>\n) =>\n  | {\n      pubkey: PublicKey;\n      info: AccountInfo<Buffer>;\n      data: T;\n    }\n  | undefined;\n\n/** @internal */\nexport interface EncodeDecode<T> {\n  decode: (buffer: Buffer, offset?: number) => T;\n  encode: (src: T, buffer: Buffer, offset?: number) => number;\n}\n\n/** @internal */\nexport const encodeDecode = <T>(layout: Layout<T>): EncodeDecode<T> => {\n  const decode = layout.decode.bind(layout);\n  const encode = layout.encode.bind(layout);\n  return { decode, encode };\n};\n\nexport const publicKey = (property = \"publicKey\"): Layout<PublicKey> => {\n  const layout = blob(32, property);\n  const { encode, decode } = encodeDecode(layout);\n\n  const publicKeyLayout = (layout as Layout<unknown>) as Layout<PublicKey>;\n\n  publicKeyLayout.decode = (buffer: Buffer, offset: number) => {\n    const src = decode(buffer, offset);\n    return new PublicKey(src);\n  };\n\n  publicKeyLayout.encode = (\n    publicKey: PublicKey,\n    buffer: Buffer,\n    offset: number\n  ) => {\n    const src = publicKey.toBuffer();\n    return encode(src, buffer, offset);\n  };\n\n  return publicKeyLayout;\n};\n\nexport const uint64 = (property: string = \"uint128\"): Blob => {\n  return blob(8, property);\n};\n\nexport const int64 = (property: string = \"uint128\"): Blob => {\n  return blob(8, property);\n};\n\nexport const int128 = (property: string = \"uint128\"): Blob => {\n  return blob(16, property);\n};\n\nexport const uint128 = (property: string = \"uint128\"): Blob => {\n  return blob(16, property);\n};\n\nexport const decimal64 = (\n  property: string = \"uint64\",\n  precision: number = 0\n): Layout<Decimal> => {\n  const layout = blob(8, property);\n  //const { encode, decode } = encodeDecode(layout);\n  const decimal64Layout = (layout as Layout<unknown>) as Layout<Decimal>;\n\n  const _decode = layout.decode.bind(layout);\n  const _encode = layout.encode.bind(layout);\n\n  decimal64Layout.decode = (buffer: Buffer, offset: number) => {\n    const src = Buffer.from(_decode(buffer, offset));\n    return DecimalExt.from64Buffer(src, precision);\n  };\n\n  decimal64Layout.encode = (\n    decimal: Decimal,\n    buffer: Buffer,\n    offset: number\n  ) => {\n    const src = DecimalExt.to64Buffer(decimal, precision);\n    return _encode(src, buffer, offset);\n  };\n\n  return decimal64Layout;\n};\n\nexport const decimalU64 = (\n  property: string = \"uint64\",\n  precision: number = 0\n): Layout<Decimal> => {\n  const layout = blob(8, property);\n  //const { encode, decode } = encodeDecode(layout)\n  const _decode = layout.decode.bind(layout);\n  const _encode = layout.encode.bind(layout);\n  const decimalU64Layout = (layout as Layout<unknown>) as Layout<Decimal>;\n\n  decimalU64Layout.decode = (buffer: Buffer, offset: number) => {\n    const src = Buffer.from(_decode(buffer, offset));\n    return DecimalExt.fromU64Buffer(src, precision);\n  };\n\n  decimalU64Layout.encode = (\n    decimal: Decimal,\n    buffer: Buffer,\n    offset: number\n  ) => {\n    const src = DecimalExt.toU64Buffer(decimal, precision);\n    return _encode(src, buffer, offset);\n  };\n\n  return decimalU64Layout;\n};\n\nexport const decimal128 = (\n  property: string = \"uint64\",\n  precision: number = 0\n): Layout<Decimal> => {\n  const layout = blob(16, property);\n  //const { encode, decode } = encodeDecode(layout);\n  const _decode = layout.decode.bind(layout);\n  const _encode = layout.encode.bind(layout);\n  const decimal128Layout = (layout as Layout<unknown>) as Layout<Decimal>;\n\n  decimal128Layout.decode = (buffer: Buffer, offset: number) => {\n    const src = Buffer.from(_decode(buffer, offset));\n    return DecimalExt.from128Buffer(src, precision);\n  };\n\n  decimal128Layout.encode = (\n    decimal: Decimal,\n    buffer: Buffer,\n    offset: number\n  ) => {\n    const src = DecimalExt.to128Buffer(decimal, precision);\n    return _encode(src, buffer, offset);\n  };\n\n  return decimal128Layout;\n};\n\nexport const decimalU128 = (\n  property: string = \"uint64\",\n  precision: number = 0\n): Layout<Decimal> => {\n  const layout = blob(16, property);\n  //const { encode, decode } = encodeDecode(layout);\n  const _decode = layout.decode.bind(layout);\n  const _encode = layout.encode.bind(layout);\n  const decimalU128Layout = (layout as Layout<unknown>) as Layout<Decimal>;\n\n  decimalU128Layout.decode = (buffer: Buffer, offset: number) => {\n    const src = Buffer.from(_decode(buffer, offset));\n    let val = DecimalExt.fromU128Buffer(src, precision);\n    return val;\n  };\n\n  decimalU128Layout.encode = (\n    decimal: Decimal,\n    buffer: Buffer,\n    offset: number\n  ) => {\n    const src = DecimalExt.toU128Buffer(decimal, precision);\n    return _encode(src, buffer, offset);\n  };\n\n  return decimalU128Layout;\n};\n","import { sendAndConfirmTransaction as realSendAndConfirmTransaction } from \"@solana/web3.js\";\nimport {\n  Connection,\n  Transaction,\n  Signer,\n  TransactionSignature,\n} from \"@solana/web3.js\";\n\n/**\n * Send and confirm trnasaction with default option\n * @param conn The connection to use\n * @param transaction The transaction\n * @param signers The signers array\n * @returns\n */\nexport async function sendAndConfirmTransaction(\n  conn: Connection,\n  transaction: Transaction,\n  ...signers: Signer[]\n): Promise<TransactionSignature> {\n  return realSendAndConfirmTransaction(conn, transaction, signers, {\n    skipPreflight: false,\n    commitment: \"recent\",\n    preflightCommitment: \"recent\",\n  });\n}\n","import {\n  u64,\n  ASSOCIATED_TOKEN_PROGRAM_ID,\n  TOKEN_PROGRAM_ID,\n  Token,\n  AccountInfo,\n  AccountLayout,\n} from \"@solana/spl-token\";\nimport {\n  PublicKey,\n  TransactionInstruction,\n  Connection,\n  AccountInfo as BaseAccountInfo,\n} from \"@solana/web3.js\";\nimport invariant from \"tiny-invariant\";\n\n/**\n * Get a authority token account address\n * @param tokenMint The mint of token\n * @param owner The owner associated token address\n * @returns\n */\nexport async function getAssociatedTokenAddress(\n  tokenMint: PublicKey,\n  owner: PublicKey\n): Promise<PublicKey> {\n  return await Token.getAssociatedTokenAddress(\n    ASSOCIATED_TOKEN_PROGRAM_ID,\n    TOKEN_PROGRAM_ID,\n    tokenMint,\n    owner,\n    true\n  );\n}\n\n/**\n * Get a create associated token account instruction\n * @param tokenMint The mint of token\n * @param owner The owner associated token address\n * @param authority The authority token account address\n * @param payer The pays for transaction\n * @returns\n */\nexport function createAssociatedTokenAccountInstruction(\n  tokenMint: PublicKey,\n  associatedAccount: PublicKey,\n  owner: PublicKey,\n  payer: PublicKey\n): TransactionInstruction {\n  return Token.createAssociatedTokenAccountInstruction(\n    ASSOCIATED_TOKEN_PROGRAM_ID,\n    TOKEN_PROGRAM_ID,\n    tokenMint,\n    associatedAccount,\n    owner,\n    payer\n  );\n}\n\n/**\n * Get the token account info by address\n * @param conn The connection to use\n * @param address The token account address\n * @returns\n */\nexport async function getTokenAccount(\n  conn: Connection,\n  address: PublicKey\n): Promise<AccountInfo> {\n  let account = await conn.getAccountInfo(address);\n  invariant(\n    account?.data != null,\n    `The token account:${address.toBase58()} data is null`\n  );\n  let accountInfo = parseTokenAccount(account);\n  accountInfo.address = address;\n  return accountInfo;\n}\n\n/**\n * Get the token accounts by owner\n * @param conn The connection to use\n * @param owner The owner address\n * @returns The token accounts\n */\nexport async function getTokenAccounts(\n  conn: Connection,\n  owner: PublicKey\n): Promise<AccountInfo[]> {\n  let accounts = await conn.getTokenAccountsByOwner(owner, {\n    programId: TOKEN_PROGRAM_ID,\n  });\n  const accountInfos: AccountInfo[] = [];\n  for (let i = 0; i < accounts.value.length; i++) {\n    let { pubkey, account } = accounts.value[i];\n    invariant(\n      account?.data != null,\n      `The token account:${pubkey.toBase58()} data is null`\n    );\n    let accountInfo = parseTokenAccount(account);\n    accountInfo.address = pubkey;\n    accountInfos.push(accountInfo);\n  }\n  return accountInfos;\n}\n\nexport function parseTokenAccountData(data: Buffer): AccountInfo {\n  let accountInfo = AccountLayout.decode(data);\n  accountInfo.mint = new PublicKey(accountInfo.mint);\n  accountInfo.owner = new PublicKey(accountInfo.owner);\n  accountInfo.amount = u64.fromBuffer(accountInfo.amount);\n\n  if (accountInfo.delegateOption === 0) {\n    accountInfo.delegate = null;\n    accountInfo.delegatedAmount = new u64(0);\n  } else {\n    accountInfo.delegate = new PublicKey(accountInfo.delegate);\n    accountInfo.delegatedAmount = u64.fromBuffer(accountInfo.delegatedAmount);\n  }\n\n  accountInfo.isInitialized = accountInfo.state !== 0;\n  accountInfo.isFrozen = accountInfo.state === 2;\n\n  if (accountInfo.isNativeOption === 1) {\n    accountInfo.rentExemptReserve = u64.fromBuffer(accountInfo.isNative);\n    accountInfo.isNative = true;\n  } else {\n    accountInfo.rentExemptReserve = null;\n    accountInfo.isNative = false;\n  }\n\n  if (accountInfo.closeAuthorityOption === 0) {\n    accountInfo.closeAuthority = null;\n  } else {\n    accountInfo.closeAuthority = new PublicKey(accountInfo.closeAuthority);\n  }\n\n  return accountInfo;\n}\n\nexport function parseTokenAccount(\n  account: BaseAccountInfo<Buffer>\n): AccountInfo {\n  invariant(account?.data != null, `The account data is null`);\n  let accountInfo = AccountLayout.decode(account?.data);\n  accountInfo.mint = new PublicKey(accountInfo.mint);\n  accountInfo.owner = new PublicKey(accountInfo.owner);\n  accountInfo.amount = u64.fromBuffer(accountInfo.amount);\n\n  if (accountInfo.delegateOption === 0) {\n    accountInfo.delegate = null;\n    accountInfo.delegatedAmount = new u64(0);\n  } else {\n    accountInfo.delegate = new PublicKey(accountInfo.delegate);\n    accountInfo.delegatedAmount = u64.fromBuffer(accountInfo.delegatedAmount);\n  }\n\n  accountInfo.isInitialized = accountInfo.state !== 0;\n  accountInfo.isFrozen = accountInfo.state === 2;\n\n  if (accountInfo.isNativeOption === 1) {\n    accountInfo.rentExemptReserve = u64.fromBuffer(accountInfo.isNative);\n    accountInfo.isNative = true;\n  } else {\n    accountInfo.rentExemptReserve = null;\n    accountInfo.isNative = false;\n  }\n\n  if (accountInfo.closeAuthorityOption === 0) {\n    accountInfo.closeAuthority = null;\n  } else {\n    accountInfo.closeAuthority = new PublicKey(accountInfo.closeAuthority);\n  }\n\n  return accountInfo;\n}\n","/** @internal */\nexport enum TokenSwapInstruction {\n  Initialize = 0,\n  Swap = 1,\n  DepositAllTokenTypes = 2,\n  WithdrawAllTokenTypes = 3,\n  Claim = 4,\n  ManagerClaim = 5,\n  AddUserPosition = 6,\n  UpdateFee = 7,\n  SimulateSwap = 8,\n}\n","import { TOKEN_PROGRAM_ID } from \"@solana/spl-token\";\nimport { PublicKey, TransactionInstruction } from \"@solana/web3.js\";\nimport { struct, u8 } from \"@solana/buffer-layout\";\nimport { TokenSwapInstruction } from \"./instruction\";\n\ninterface Data {\n  instruction: number;\n}\n\nconst DataLayout = struct<Data>([u8(\"instruction\")]);\n\nexport const addUserPositionInstruction = (\n  programId: PublicKey,\n  authority: PublicKey,\n  positionsKey: PublicKey\n): TransactionInstruction => {\n  let data = Buffer.alloc(DataLayout.span);\n  DataLayout.encode(\n    {\n      instruction: TokenSwapInstruction.AddUserPosition,\n    },\n    data\n  );\n  const keys = [\n    { pubkey: programId, isSigner: false, isWritable: false },\n    { pubkey: authority, isSigner: false, isWritable: false },\n    { pubkey: positionsKey, isSigner: false, isWritable: true },\n    { pubkey: TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n  ];\n\n  return new TransactionInstruction({\n    keys,\n    programId,\n    data,\n  });\n};\n","import { TOKEN_PROGRAM_ID } from \"@solana/spl-token\";\nimport { PublicKey, TransactionInstruction } from \"@solana/web3.js\";\nimport { struct, u8 } from \"@solana/buffer-layout\";\nimport Decimal from \"decimal.js\";\nimport { decimalU64 } from \"../util/layout\";\nimport { TokenSwapInstruction } from \"./instruction\";\n\ninterface Data {\n    instruction: number;\n    positionIndex: Decimal;\n}\n\nconst DataLayout = struct<Data>([\n    u8(\"instruction\"),\n    decimalU64(\"positionIndex\"),\n]);\n\nexport const claimInstruction = (\n    programId: PublicKey,\n    tokenSwapKey: PublicKey,\n    authority: PublicKey,\n    userTransferAuthority: PublicKey,\n    swapTokenA: PublicKey,\n    swapTokenB: PublicKey,\n    userTokenA: PublicKey,\n    userTokenB: PublicKey,\n    nftMint: PublicKey,\n    nftUser: PublicKey,\n    ticksKey: PublicKey,\n    positionsKey: PublicKey,\n    positionIndex: Decimal\n): TransactionInstruction => {\n    let data = Buffer.alloc(DataLayout.span);\n    DataLayout.encode(\n        {\n            instruction: TokenSwapInstruction.Claim,\n            positionIndex,\n        },\n        data\n    );\n    const keys = [\n        { pubkey: tokenSwapKey, isSigner: false, isWritable: false },\n        { pubkey: authority, isSigner: false, isWritable: false },\n        { pubkey: userTransferAuthority, isSigner: true, isWritable: false },\n        { pubkey: nftMint, isSigner: false, isWritable: false },\n        { pubkey: nftUser, isSigner: false, isWritable: false },\n        { pubkey: swapTokenA, isSigner: false, isWritable: true },\n        { pubkey: swapTokenB, isSigner: false, isWritable: true },\n        { pubkey: userTokenA, isSigner: false, isWritable: true },\n        { pubkey: userTokenB, isSigner: false, isWritable: true },\n        { pubkey: ticksKey, isSigner: false, isWritable: false },\n        { pubkey: positionsKey, isSigner: false, isWritable: true },\n        { pubkey: TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n    ];\n\n    return new TransactionInstruction({\n        keys,\n        programId,\n        data,\n    });\n};\n","import { TOKEN_PROGRAM_ID } from \"@solana/spl-token\";\nimport { PublicKey, TransactionInstruction } from \"@solana/web3.js\";\nimport { struct, u8, s32 } from \"@solana/buffer-layout\";\nimport Decimal from \"decimal.js\";\nimport { decimalU64, decimalU128 } from \"../util/layout\";\nimport { TokenSwapInstruction } from \"./instruction\";\n\ninterface Data {\n  instruction: number;\n  isNewPosition: number;\n  liquityAmount: Decimal;\n  tickLower: number;\n  tickUpper: number;\n  maximumTokenA: Decimal;\n  maximumTokenB: Decimal;\n  positionIndex: Decimal;\n}\n\nconst DataLayout = struct<Data>([\n  u8(\"instruction\"),\n  u8(\"isNewPosition\"),\n  decimalU128(\"liquityAmount\"),\n  s32(\"tickLower\"),\n  s32(\"tickUpper\"),\n  decimalU64(\"maximumTokenA\"),\n  decimalU64(\"maximumTokenB\"),\n  decimalU64(\"positionIndex\"),\n]);\n\nexport const depositAllTokenTypesInstruction = (\n  programId: PublicKey,\n  tokenSwapKey: PublicKey,\n  authority: PublicKey,\n  userTransferAuthority: PublicKey,\n  userTokenA: PublicKey,\n  userTokenB: PublicKey,\n  swapTokenA: PublicKey,\n  swapTokenB: PublicKey,\n  nftMint: PublicKey,\n  nftUser: PublicKey,\n  ticksKey: PublicKey,\n  positionsKey: PublicKey,\n  isNewPosition: number,\n  tickLower: number,\n  tickUpper: number,\n  liquityAmount: Decimal,\n  maximumTokenA: Decimal,\n  maximumTokenB: Decimal,\n  positionIndex: Decimal\n): TransactionInstruction => {\n  let data = Buffer.alloc(DataLayout.span);\n  DataLayout.encode(\n    {\n      instruction: TokenSwapInstruction.DepositAllTokenTypes,\n      isNewPosition,\n      liquityAmount,\n      tickLower,\n      tickUpper,\n      maximumTokenA,\n      maximumTokenB,\n      positionIndex,\n    },\n    data\n  );\n  const keys = [\n    { pubkey: tokenSwapKey, isSigner: false, isWritable: true },\n    { pubkey: authority, isSigner: false, isWritable: false },\n    { pubkey: userTransferAuthority, isSigner: true, isWritable: false },\n    { pubkey: userTokenA, isSigner: false, isWritable: true },\n    { pubkey: userTokenB, isSigner: false, isWritable: true },\n    { pubkey: swapTokenA, isSigner: false, isWritable: true },\n    { pubkey: swapTokenB, isSigner: false, isWritable: true },\n    { pubkey: nftMint, isSigner: false, isWritable: true },\n    { pubkey: nftUser, isSigner: false, isWritable: true },\n    { pubkey: ticksKey, isSigner: false, isWritable: true },\n    { pubkey: positionsKey, isSigner: false, isWritable: true },\n    { pubkey: TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n  ];\n\n  return new TransactionInstruction({\n    keys,\n    programId,\n    data,\n  });\n};\n","import { TOKEN_PROGRAM_ID } from \"@solana/spl-token\";\nimport { PublicKey, TransactionInstruction } from \"@solana/web3.js\";\nimport { struct, u8, u32 } from \"@solana/buffer-layout\";\nimport Decimal from \"decimal.js\";\nimport { decimalU128, decimalU64 } from \"../util/layout\";\nimport { TokenSwapInstruction } from \"./instruction\";\n\ninterface Data {\n  instruction: number;\n  nonce: number;\n  curveType: number;\n  fee: Decimal;\n  managerFee: Decimal;\n  tickSpace: number;\n  currentSqrtPrice: Decimal;\n  currentLiquity: Decimal;\n  feeGrowthGlobal0: Decimal;\n  feeGrowthGlobal1: Decimal;\n  managerFeeA: Decimal;\n  managerFeeB: Decimal;\n}\n\nconst DataLayout = struct<Data>([\n  u8(\"instruction\"),\n  u8(\"nonce\"),\n  u8(\"curveType\"),\n  decimalU64(\"fee\", 12),\n  decimalU64(\"managerFee\", 12),\n  u32(\"tickSpace\"),\n  decimalU128(\"currentSqrtPrice\", 12),\n  decimalU128(\"currentLiquity\"),\n  decimalU128(\"feeGrowthGlobal0\"),\n  decimalU128(\"feeGrowthGlobal1\"),\n  decimalU128(\"managerFeeA\"),\n  decimalU128(\"managerFeeB\"),\n]);\n\nexport const initializeInstruction = (\n  programId: PublicKey,\n  tokenSwapKey: PublicKey,\n  authority: PublicKey,\n  manager: PublicKey,\n  managerTokenA: PublicKey,\n  managerTokenB: PublicKey,\n  swapTokenA: PublicKey,\n  swapTokenB: PublicKey,\n  ticksKey: PublicKey,\n  positionsKey: PublicKey,\n  nonce: number,\n  curveType: number,\n  fee: Decimal,\n  managerFee: Decimal,\n  tickSpace: number,\n  currentSqrtPrice: Decimal\n): TransactionInstruction => {\n  let data = Buffer.alloc(DataLayout.span);\n  DataLayout.encode(\n    {\n      instruction: TokenSwapInstruction.Initialize,\n      nonce,\n      curveType,\n      fee,\n      managerFee,\n      tickSpace,\n      currentSqrtPrice,\n      currentLiquity: new Decimal(0),\n      feeGrowthGlobal0: new Decimal(0),\n      feeGrowthGlobal1: new Decimal(0),\n      managerFeeA: new Decimal(0),\n      managerFeeB: new Decimal(0),\n    },\n    data\n  );\n\n  const keys = [\n    { pubkey: tokenSwapKey, isSigner: false, isWritable: true },\n    { pubkey: authority, isSigner: false, isWritable: false },\n    { pubkey: manager, isSigner: false, isWritable: false },\n    { pubkey: managerTokenA, isSigner: false, isWritable: false },\n    { pubkey: managerTokenB, isSigner: false, isWritable: false },\n    { pubkey: swapTokenA, isSigner: false, isWritable: false },\n    { pubkey: swapTokenB, isSigner: false, isWritable: false },\n    { pubkey: ticksKey, isSigner: false, isWritable: true },\n    { pubkey: positionsKey, isSigner: false, isWritable: true },\n    { pubkey: TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n  ];\n\n  return new TransactionInstruction({\n    keys,\n    programId,\n    data,\n  });\n};\n","import { TOKEN_PROGRAM_ID } from \"@solana/spl-token\";\nimport { PublicKey, TransactionInstruction } from \"@solana/web3.js\";\nimport { struct, u8 } from \"@solana/buffer-layout\";\nimport { TokenSwapInstruction } from \"./instruction\";\n\ninterface Data {\n  instruction: number;\n}\n\nconst DataLayout = struct<Data>([u8(\"instruction\")]);\n\nexport const managerClaimInstruction = (\n  programId: PublicKey,\n  tokenSwapKey: PublicKey,\n  authority: PublicKey,\n  userTransferAuthority: PublicKey,\n  swapTokenA: PublicKey,\n  swapTokenB: PublicKey,\n  userTokenA: PublicKey,\n  userTokenB: PublicKey\n): TransactionInstruction => {\n  let data = Buffer.alloc(DataLayout.span);\n  DataLayout.encode(\n    {\n      instruction: TokenSwapInstruction.ManagerClaim,\n    },\n    data\n  );\n  const keys = [\n    { pubkey: tokenSwapKey, isSigner: false, isWritable: true },\n    { pubkey: authority, isSigner: false, isWritable: false },\n    { pubkey: userTransferAuthority, isSigner: true, isWritable: false },\n    { pubkey: swapTokenA, isSigner: false, isWritable: true },\n    { pubkey: swapTokenB, isSigner: false, isWritable: true },\n    { pubkey: userTokenA, isSigner: false, isWritable: true },\n    { pubkey: userTokenB, isSigner: false, isWritable: true },\n    { pubkey: TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n  ];\n\n  return new TransactionInstruction({\n    keys,\n    programId,\n    data,\n  });\n};\n","import { TOKEN_PROGRAM_ID } from \"@solana/spl-token\";\nimport { PublicKey, TransactionInstruction } from \"@solana/web3.js\";\nimport { struct, u8 } from \"@solana/buffer-layout\";\nimport Decimal from \"decimal.js\";\nimport { decimalU64 } from \"../util/layout\";\nimport { TokenSwapInstruction } from \"./instruction\";\n\ninterface Data {\n  instruction: number;\n  amountIn: Decimal;\n  minimumAmountOut: Decimal;\n}\n\nconst DataLayout = struct<Data>([\n  u8(\"instruction\"),\n  decimalU64(\"amountIn\"),\n  decimalU64(\"minimumAmountOut\"),\n]);\n\nexport const swapInstruction = (\n  programId: PublicKey,\n  tokenSwapKey: PublicKey,\n  authority: PublicKey,\n  userTransferAuthority: PublicKey,\n  userSource: PublicKey,\n  userDestination: PublicKey,\n  swapSource: PublicKey,\n  swapDestination: PublicKey,\n  ticksKey: PublicKey,\n  amountIn: Decimal,\n  minimumAmountOut: Decimal\n): TransactionInstruction => {\n  let data = Buffer.alloc(DataLayout.span);\n  DataLayout.encode(\n    {\n      instruction: TokenSwapInstruction.Swap,\n      amountIn,\n      minimumAmountOut,\n    },\n    data\n  );\n  const keys = [\n    { pubkey: tokenSwapKey, isSigner: false, isWritable: true },\n    { pubkey: authority, isSigner: false, isWritable: false },\n    { pubkey: userTransferAuthority, isSigner: true, isWritable: false },\n    { pubkey: userSource, isSigner: false, isWritable: true },\n    { pubkey: userDestination, isSigner: false, isWritable: true },\n    { pubkey: swapSource, isSigner: false, isWritable: true },\n    { pubkey: swapDestination, isSigner: false, isWritable: true },\n    { pubkey: ticksKey, isSigner: false, isWritable: true },\n    { pubkey: TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n  ];\n  return new TransactionInstruction({\n    keys,\n    programId,\n    data,\n  });\n};\n","import { TOKEN_PROGRAM_ID } from \"@solana/spl-token\";\nimport { TransactionInstruction, PublicKey } from \"@solana/web3.js\";\nimport { struct, u8 } from \"@solana/buffer-layout\";\nimport Decimal from \"decimal.js\";\nimport { decimalU64 } from \"../util/layout\";\nimport { TokenSwapInstruction } from \"./instruction\";\n\ninterface Data {\n  instruction: number;\n  liquityAmount: Decimal;\n  minimumTokenA: Decimal;\n  minimumTokenB: Decimal;\n  positionIndex: Decimal;\n}\n\nconst DataLayout = struct<Data>([\n  u8(\"instruction\"),\n  decimalU64(\"liquityAmount\"),\n  decimalU64(\"minimumTokenA\"),\n  decimalU64(\"minimumTokenB\"),\n  decimalU64(\"positionIndex\"),\n]);\n\nexport const withdrawAllTokenTypesInstruction = (\n  programId: PublicKey,\n  tokenSwapKey: PublicKey,\n  authority: PublicKey,\n  userTransferAuthority: PublicKey,\n  swapTokenA: PublicKey,\n  swapTokenB: PublicKey,\n  userTokenA: PublicKey,\n  userTokenB: PublicKey,\n  nftMint: PublicKey,\n  nftUser: PublicKey,\n  ticksKey: PublicKey,\n  positionsKey: PublicKey,\n  liquityAmount: Decimal,\n  minimumTokenA: Decimal,\n  minimumTokenB: Decimal,\n  positionIndex: Decimal\n): TransactionInstruction => {\n  let data = Buffer.alloc(DataLayout.span);\n  DataLayout.encode(\n    {\n      instruction: TokenSwapInstruction.WithdrawAllTokenTypes,\n      liquityAmount,\n      minimumTokenA,\n      minimumTokenB,\n      positionIndex,\n    },\n    data\n  );\n  const keys = [\n    { pubkey: tokenSwapKey, isSigner: false, isWritable: true },\n    { pubkey: authority, isSigner: false, isWritable: false },\n    { pubkey: userTransferAuthority, isSigner: true, isWritable: false },\n    { pubkey: nftMint, isSigner: false, isWritable: true },\n    { pubkey: nftUser, isSigner: false, isWritable: true },\n    { pubkey: swapTokenA, isSigner: false, isWritable: true },\n    { pubkey: swapTokenB, isSigner: false, isWritable: true },\n    { pubkey: userTokenA, isSigner: false, isWritable: true },\n    { pubkey: userTokenB, isSigner: false, isWritable: true },\n    { pubkey: ticksKey, isSigner: false, isWritable: true },\n    { pubkey: positionsKey, isSigner: false, isWritable: true },\n    { pubkey: TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n  ];\n  return new TransactionInstruction({\n    keys,\n    programId,\n    data,\n  });\n};\n","import { PublicKey, TransactionInstruction } from \"@solana/web3.js\";\nimport { struct, u8 } from \"@solana/buffer-layout\";\nimport Decimal from \"decimal.js\";\nimport { decimalU64 } from \"../util/layout\";\nimport { TokenSwapInstruction } from \"./instruction\";\n\ninterface Data {\n  instruction: number;\n  amountIn: Decimal;\n  // minimumAmountOut: Decimal,\n  direction: number;\n}\n\nconst DataLayout = struct<Data>([\n  u8(\"instruction\"),\n  decimalU64(\"amountIn\"),\n  // decimalU64(\"minimumAmountOut\"),\n  u8(\"direction\"),\n]);\n\nexport const simulateSwapInstruction = (\n  programId: PublicKey,\n  tokenSwapKey: PublicKey,\n  ticksKey: PublicKey,\n  amountIn: Decimal,\n  // minimumAmountOut: Decimal,\n  direction: number\n): TransactionInstruction => {\n  let data = Buffer.alloc(DataLayout.span);\n  DataLayout.encode(\n    {\n      instruction: TokenSwapInstruction.SimulateSwap,\n      amountIn,\n      // minimumAmountOut,\n      direction,\n    },\n    data\n  );\n  const keys = [\n    { pubkey: tokenSwapKey, isSigner: false, isWritable: true },\n    { pubkey: ticksKey, isSigner: false, isWritable: true },\n  ];\n  return new TransactionInstruction({\n    keys,\n    programId,\n    data,\n  });\n};\n","import { struct, s32, u8, blob, seq } from \"@solana/buffer-layout\";\nimport { decimal128, decimalU128, Parser, publicKey } from \"../util/layout\";\nimport Decimal from \"decimal.js\";\nimport { AccountInfo, PublicKey } from \"@solana/web3.js\";\n\n// mainnet-beta\nexport const TICKS_ACCOUNT_SIZE = 504000;\n\n// devnet\n// export const TICKS_ACCOUNT_SIZE = 840000;\n\nexport interface Tick {\n  tick: number;\n  tickPrice: Decimal;\n  liquityGross: Decimal;\n  liquityNet: Decimal;\n  feeGrowthOutside0: Decimal;\n  feeGrowthOutside1: Decimal;\n}\n\nexport interface TicksAccount {\n  swapVersion: number;\n  tokenSwapKey: PublicKey;\n  accountType: number;\n  len: number;\n  ticks: Tick[];\n}\n\n/* @internal */\nexport interface TicksAccountDataFlat {\n  swapVersion: number;\n  tokenSwapKey: PublicKey;\n  accountType: number;\n  len: number;\n  dataFlat: Uint8Array;\n}\n\nexport const TickLayout = struct<Tick>(\n  [\n    s32(\"tick\"),\n    decimalU128(\"tickPrice\", 12),\n    decimalU128(\"liquityGross\"),\n    decimal128(\"liquityNet\"),\n    decimalU128(\"feeGrowthOutside0\", 16),\n    decimalU128(\"feeGrowthOutside1\", 16),\n  ],\n  \"tickInfo\"\n);\n\nexport const TicksAccountLayout = struct<TicksAccountDataFlat>(\n  [\n    u8(\"swapVersion\"),\n    publicKey(\"tokenSwapKey\"),\n    u8(\"accountType\"),\n    s32(\"len\"),\n    blob(TICKS_ACCOUNT_SIZE - 38, \"dataFlat\"),\n  ],\n  \"ticksAccount\"\n);\n\nexport const isTicksAccount = (info: AccountInfo<Buffer>): boolean => {\n  return info.data.length === TICKS_ACCOUNT_SIZE;\n};\n\nexport const parseTicksAccount: Parser<TicksAccount> = (\n  pubkey: PublicKey,\n  info: AccountInfo<Buffer>\n) => {\n  if (!isTicksAccount(info)) return;\n\n  const buffer = Buffer.from(info.data);\n  const {\n    swapVersion,\n    tokenSwapKey,\n    accountType,\n    len,\n    dataFlat,\n  } = TicksAccountLayout.decode(buffer);\n\n  const tickSpan = len * TickLayout.span;\n  const ticksBuffer = dataFlat.slice(0, tickSpan);\n  const ticks = seq(TickLayout, len).decode(ticksBuffer);\n\n  const ticksAccount: TicksAccount = {\n    swapVersion,\n    tokenSwapKey,\n    accountType,\n    len,\n    ticks,\n  };\n\n  return {\n    pubkey,\n    info,\n    data: ticksAccount,\n  };\n};\n","import { publicKey, decimalU128, Parser } from \"../util/layout\";\nimport { struct, s32, u8, blob, seq } from \"@solana/buffer-layout\";\nimport Decimal from \"decimal.js\";\nimport { AccountInfo, PublicKey } from \"@solana/web3.js\";\n\nexport const POSITIONS_ACCOUNT_SIZE = 360000;\n\nexport interface Position {\n  nftTokenId: PublicKey;\n  lowerTick: number;\n  upperTick: number;\n  liquity: Decimal;\n  feeGrowthInsideALast: Decimal;\n  feeGrowthInsideBLast: Decimal;\n  tokenAFee: Decimal;\n  tokenBFee: Decimal;\n}\n\nexport interface PositionsAccount {\n  swapVersion: number;\n  tokenSwapKey: PublicKey;\n  accountType: number;\n  len: number;\n  positions: Position[];\n}\n\n/* @internal */\nexport interface PositionsAccountDataFlat {\n  swapVersion: number;\n  tokenSwapKey: PublicKey;\n  accountType: number;\n  len: number;\n  dataFlat: Uint8Array;\n}\n\nexport const PositionLayout = struct<Position>(\n  [\n    publicKey(\"nftTokenId\"),\n    s32(\"lowerTick\"),\n    s32(\"upperTick\"),\n    decimalU128(\"liquity\"),\n    decimalU128(\"feeGrowthInsideALast\", 16),\n    decimalU128(\"feeGrowthInsideBLast\", 16),\n    decimalU128(\"tokenAFee\", 16),\n    decimalU128(\"tokenBFee\", 16),\n  ],\n  \"position\"\n);\n\nexport const PositionsAccountLayout = struct<PositionsAccountDataFlat>(\n  [\n    u8(\"swapVersion\"),\n    publicKey(\"tokenSwapKey\"),\n    u8(\"accountType\"),\n    s32(\"len\"),\n    blob(POSITIONS_ACCOUNT_SIZE - 38, \"dataFlat\"),\n  ],\n  \"positionsAccount\"\n);\n\nexport const MAX_ACCOUNT_POSITION_LENGTH = Math.floor(\n  (POSITIONS_ACCOUNT_SIZE - 38) / PositionLayout.span\n);\n\nexport const isPositionsAccount = (info: AccountInfo<Buffer>): boolean => {\n  return info.data.length === POSITIONS_ACCOUNT_SIZE;\n};\n\nexport const parsePositionsAccount: Parser<PositionsAccount> = (\n  pubkey: PublicKey,\n  info: AccountInfo<Buffer>\n) => {\n  if (!isPositionsAccount(info)) return;\n\n  const buffer = Buffer.from(info.data);\n  const {\n    swapVersion,\n    tokenSwapKey,\n    accountType,\n    len,\n    dataFlat,\n  } = PositionsAccountLayout.decode(buffer);\n\n  const positionSpan = len * PositionLayout.span;\n  const positionsBuffer = dataFlat.slice(0, positionSpan);\n  const positions = seq(PositionLayout, len).decode(positionsBuffer);\n\n  const positionsAccount: PositionsAccount = {\n    swapVersion,\n    tokenSwapKey,\n    accountType,\n    len,\n    positions,\n  };\n\n  return {\n    pubkey,\n    info,\n    data: positionsAccount,\n  };\n};\n","import { decimalU128, decimalU64, Parser, publicKey } from \"../util/layout\";\nimport { u8, u32, struct } from \"@solana/buffer-layout\";\nimport { AccountInfo, PublicKey } from \"@solana/web3.js\";\nimport Decimal from \"decimal.js\";\n\nexport interface TokenSwapAccount {\n  tokenSwapKey: PublicKey;\n  accountType: number;\n  version: number;\n  isInitialized: number;\n  nonce: number;\n  tokenProgramId: PublicKey;\n  manager: PublicKey;\n  managerTokenA: PublicKey;\n  managerTokenB: PublicKey;\n  swapTokenA: PublicKey;\n  swapTokenB: PublicKey;\n  tokenAMint: PublicKey;\n  tokenBMint: PublicKey;\n  ticksKey: PublicKey;\n  positionsKey: PublicKey;\n  curveType: number;\n  fee: Decimal;\n  managerFee: Decimal;\n  tickSpace: number;\n  currentSqrtPrice: Decimal;\n  currentLiquity: Decimal;\n  feeGrowthGlobal0: Decimal;\n  feeGrowthGlobal1: Decimal;\n  managerFeeA: Decimal;\n  managerFeeB: Decimal;\n}\n\nexport const TokenSwapAccountLayout = struct<TokenSwapAccount>(\n  [\n    publicKey(\"tokenSwapKey\"),\n    u8(\"accountType\"),\n    u8(\"version\"),\n    u8(\"isInitialized\"),\n    u8(\"nonce\"),\n    publicKey(\"tokenProgramId\"),\n    publicKey(\"manager\"),\n    publicKey(\"managerTokenA\"),\n    publicKey(\"managerTokenB\"),\n    publicKey(\"swapTokenA\"),\n    publicKey(\"swapTokenB\"),\n    publicKey(\"tokenAMint\"),\n    publicKey(\"tokenBMint\"),\n    publicKey(\"ticksKey\"),\n    publicKey(\"positionsKey\"),\n    u8(\"curveType\"),\n    decimalU64(\"fee\", 12),\n    decimalU64(\"managerFee\", 12),\n    u32(\"tickSpace\"),\n    decimalU128(\"currentSqrtPrice\", 12),\n    decimalU128(\"currentLiquity\"),\n    decimalU128(\"feeGrowthGlobal0\", 16),\n    decimalU128(\"feeGrowthGlobal1\", 16),\n    decimalU128(\"managerFeeA\"),\n    decimalU128(\"managerFeeB\"),\n  ],\n  \"tokenSwapAccount\"\n);\n\nexport const TOKEN_SWAP_ACCOUNT_SIZE = TokenSwapAccountLayout.span;\n\nexport const isTokenSwapAccount = (info: AccountInfo<Buffer>): boolean => {\n  return info.data.length === TOKEN_SWAP_ACCOUNT_SIZE;\n};\n\nexport const parseTokenSwapAccount: Parser<TokenSwapAccount> = (\n  pubkey: PublicKey,\n  info: AccountInfo<Buffer>\n) => {\n  if (!isTokenSwapAccount(info)) {\n    return;\n  }\n\n  const buffer = Buffer.from(info.data);\n  const tokenSwapAccount = TokenSwapAccountLayout.decode(buffer);\n\n  return {\n    pubkey,\n    info,\n    data: tokenSwapAccount,\n  };\n};\n","import { Decimal } from \"decimal.js\";\nimport invariant from \"tiny-invariant\";\nimport { Tick } from \"../state\";\n\n// The max ticker\nexport const MAX_TICK = 443632;\n// export const MAX_TICK = 552648\n\n// The min ticker\nexport const MIN_TICK = -MAX_TICK;\n\n// The price pieces\n// price = pow(PIECES, TICK)\nexport const PIECES = new Decimal(\"1.0001\");\nexport const PRICE_OFFSET = new Decimal(\"1e-12\");\nexport const MAX_PRICE = PIECES.pow(MAX_TICK);\nexport const MIN_PRICE = PIECES.pow(MIN_TICK);\nexport const MAX_SQRT_PRICE = PIECES.pow(MAX_TICK / 2);\nexport const MIN_SQRT_PRICE = PIECES.pow(MIN_TICK / 2);\n\n/**\n * Get the tick by sqrt price\n *\n * @param sqrtPrice the sqrt price\n * @return the tick\n */\nexport function sqrtPrice2Tick(sqrtPrice: Decimal): number {\n  invariant(\n    sqrtPrice.lessThan(MAX_SQRT_PRICE),\n    `Invalid sqrtPrice: ${sqrtPrice.toString()} Max: ${MAX_SQRT_PRICE}, too large`\n  );\n  invariant(\n    sqrtPrice.greaterThan(MIN_SQRT_PRICE),\n    `Invalid sqrtPrice: ${sqrtPrice.toString()}, Min: ${MIN_SQRT_PRICE}, too small`\n  );\n  return sqrtPrice\n    .pow(2)\n    .log(PIECES)\n    .toDP(0, Decimal.ROUND_HALF_UP)\n    .toNumber();\n}\n\n/**\n * Get the sqrt price by tick\n * @param tick the tick\n * @returns the sqrt price\n */\nexport function tick2SqrtPrice(tick: number): Decimal {\n  invariant(\n    tick >= MIN_TICK && tick <= MAX_TICK,\n    `Invalid tick: ${tick}, must be in range [${MIN_TICK}, ${MAX_TICK}]`\n  );\n  return PIECES.pow(tick / 2);\n}\n\n/**\n * Get the tick by price\n * @param price the price\n * @returns the tick\n */\nexport function price2Tick(price: Decimal): number {\n  invariant(\n    price.lessThan(MAX_PRICE),\n    `Invalid price:${price.toString()} Max: ${MAX_PRICE},  too large`\n  );\n  invariant(\n    price.greaterThan(MIN_PRICE),\n    `Invalid price:${price.toString()} Min: ${MIN_PRICE}, too small`\n  );\n  return price\n    .log(PIECES)\n    .toDP(0, Decimal.ROUND_HALF_UP)\n    .toNumber();\n}\n\n/**\n * Get the price by tick\n * @param tick the tick\n * @returns the price\n */\nexport function tick2Price(tick: number): Decimal {\n  invariant(\n    tick >= MIN_TICK && tick <= MAX_TICK,\n    `Invalid tick: ${tick}, must be in range [${MIN_TICK}, ${MAX_TICK}]`\n  );\n  return PIECES.pow(tick);\n}\n\n/**\n * Get the nearest valid tick\n * @deprecated please use {@link getNearestTickBySqrtPrice Or getNearestTickByPrice} instead\n * @param sqrtPrice the sqrt price\n * @param tickSpace the tick space\n * @param isLower is the tick is lowwer\n * @returns the tick or null\n */\nexport function getNearestTick(\n  sqrtPrice: Decimal,\n  tickSpace: number,\n  isLower: boolean\n): number | null {\n  return getNearestTickBySqrtPrice(sqrtPrice, tickSpace);\n}\n\n/**\n * Get the nearest valid tick for positions\n * @param sqrtPrice the sqrt price\n * @param tickSpace the tick space\n * @returns the tick or null(if the tick space <= 0)\n */\nexport function getNearestTickBySqrtPrice(\n  sqrtPrice: Decimal,\n  tickSpace: number\n): number {\n  invariant(\n    tickSpace > 0 && tickSpace % 1 === 0,\n    `Invalid tickSpace:${tickSpace}`\n  );\n  invariant(\n    sqrtPrice.lessThan(MAX_SQRT_PRICE),\n    `Invalid sqrtPrice: ${sqrtPrice.toString()} Max: ${MAX_SQRT_PRICE}, too large`\n  );\n  invariant(\n    sqrtPrice.greaterThan(MIN_SQRT_PRICE),\n    `Invalid sqrtPrice: ${sqrtPrice.toString()}, Min: ${MIN_SQRT_PRICE}, too small`\n  );\n  let t = sqrtPrice2Tick(sqrtPrice);\n  let m = (t - MIN_TICK) % tickSpace;\n  if (m > tickSpace / 2) {\n    return t - m + tickSpace;\n  }\n  return t - m;\n}\n\n/**\n * Get the nearest valid tick for positions\n * @param price the price\n * @param tickSpace the tick space\n * @returns the tick or null(if the tick space <= 0)\n */\nexport function getNearestTickByPrice(\n  price: Decimal,\n  tickSpace: number\n): number {\n  invariant(\n    tickSpace > 0 && tickSpace % 1 === 0,\n    `Invalid tickSpace:${tickSpace}`\n  );\n  invariant(\n    price.lessThan(MAX_PRICE),\n    `Invalid price:${price.toString()} Max: ${MAX_PRICE},  too large`\n  );\n  invariant(\n    price.greaterThan(MIN_PRICE),\n    `Invalid price:${price.toString()} Min: ${MIN_PRICE}, too small`\n  );\n  let t = price2Tick(price);\n  let m = (t - MIN_TICK) % tickSpace;\n  if (m > tickSpace / 2) {\n    return t - m + tickSpace;\n  }\n  return t - m;\n}\n\n/**\n *\n * @param ticks The tick array of token swap\n * @param currentSqrtPrice The current sqrt price of token swap\n * @param fee The fee rate of token swap\n * @param currentLiquity The current liquity of token swap\n * @param amountIn The amount in of token A\n * @returns amountOut:The amount out of token B, amountUsed:The used of amountIn, afterPrice:The price after calculate, afterLiquity: The liquity after calculate\n */\nexport function calculateSwapA2B(\n  ticks: Tick[],\n  currentSqrtPrice: Decimal,\n  fee: Decimal,\n  currentLiquity: Decimal,\n  amountIn: Decimal\n): {\n  amountOut: Decimal;\n  amountUsed: Decimal;\n  feeUsed: Decimal;\n  afterPrice: Decimal;\n  afterLiquity: Decimal;\n} {\n  invariant(amountIn.greaterThan(new Decimal(0)), \"invalid amount in\");\n  invariant(\n    currentLiquity.greaterThanOrEqualTo(new Decimal(0)),\n    \"invalid liquity\"\n  );\n  invariant(ticks.length > 0, \"the ticks is empty\");\n  //let currentTick = sqrtPrice2Tick(currentSqrtPrice);\n  invariant(currentSqrtPrice > ticks[0].tickPrice, \"out of ticks\");\n  let liquity = currentLiquity;\n  let out = new Decimal(0);\n  let remind = amountIn;\n  let remindWithFee = new Decimal(0);\n  let feeUsed = new Decimal(0);\n  let amountUsed = new Decimal(0);\n  for (let i = ticks.length - 1; i >= 0; i--) {\n    if (liquity.equals(new Decimal(0))) {\n      currentSqrtPrice = ticks[i].tickPrice.sub(PRICE_OFFSET);\n      liquity = liquity.sub(ticks[i].liquityNet);\n      //upperSqrtPrice = ticks[i].tickPrice;\n      continue;\n    }\n    if (currentSqrtPrice < ticks[i].tickPrice) {\n      continue;\n    }\n    let upperSqrtPrice = currentSqrtPrice;\n    let lowerSqrtPrice = ticks[i].tickPrice;\n    let maxAmountIn = maxAmountA(lowerSqrtPrice, currentSqrtPrice, liquity);\n    let fullStepFee = maxAmountIn.mul(fee).toDP(0, Decimal.ROUND_DOWN);\n    if (remind.lessThan(fullStepFee)) {\n      remindWithFee = remind;\n    } else {\n      remindWithFee = remind.sub(fullStepFee);\n    }\n\n    if (maxAmountIn.greaterThanOrEqualTo(remindWithFee)) {\n      remindWithFee = remind\n        .mul(new Decimal(1).sub(fee))\n        .toDP(0, Decimal.ROUND_UP);\n      let { amountOut, afterSqrtPrice } = swapA2B(\n        upperSqrtPrice,\n        liquity,\n        remindWithFee\n      );\n      amountUsed = amountUsed.add(remind);\n      feeUsed = feeUsed.add(remind.sub(remindWithFee));\n      return {\n        amountOut: out.add(amountOut),\n        amountUsed,\n        feeUsed,\n        afterPrice: afterSqrtPrice,\n        afterLiquity: liquity,\n      };\n    } else {\n      remind = remindWithFee.sub(maxAmountIn);\n      amountUsed = amountUsed.add(maxAmountIn).add(fullStepFee);\n      feeUsed = feeUsed.add(fullStepFee);\n      out = out.add(maxAmountB(lowerSqrtPrice, upperSqrtPrice, liquity));\n      liquity = liquity.sub(ticks[i].liquityNet);\n      currentSqrtPrice = ticks[i].tickPrice.sub(PRICE_OFFSET);\n      //upperSqrtPrice = ticks[i].tickPrice;\n    }\n  }\n  return {\n    amountOut: out,\n    amountUsed,\n    feeUsed,\n    afterPrice: currentSqrtPrice,\n    afterLiquity: liquity,\n  };\n}\n\n/**\n *\n * @param ticks The tick array of token swap\n * @param currentSqrtPrice The current sqrt price of token swap\n * @param fee The fee rate of token swap\n * @param currentLiquity The current liquity of token swap\n * @param amountIn The amount in of token B\n * @returns amountOut:The amount out of token B, amountUsed:The used of amountIn, afterPrice:The price after calculate, afterLiquity: The liquity after calculate\n */\nexport function calculateSwapB2A(\n  ticks: Tick[],\n  currentSqrtPrice: Decimal,\n  fee: Decimal,\n  currentLiquity: Decimal,\n  amountIn: Decimal\n): {\n  amountOut: Decimal;\n  amountUsed: Decimal;\n  feeUsed: Decimal;\n  afterPrice: Decimal;\n  afterLiquity: Decimal;\n} {\n  invariant(amountIn.greaterThan(new Decimal(0)), \"invalid amount in\");\n  invariant(\n    currentLiquity.greaterThanOrEqualTo(new Decimal(0)),\n    \"invalid liquity\"\n  );\n  invariant(ticks.length > 0, \"the ticks is empty\");\n  //let currentTick = sqrtPrice2Tick(currentSqrtPrice);\n  invariant(\n    currentSqrtPrice.lessThan(ticks[ticks.length - 1].tickPrice),\n    \"out of ticks\"\n  );\n  let liquity = currentLiquity;\n  let out = new Decimal(0);\n  let remind = amountIn;\n  let remindWithFee = new Decimal(0);\n  let amountUsed = new Decimal(0);\n  let feeUsed = new Decimal(0);\n  for (let i = 0; i < ticks.length; i++) {\n    if (liquity.equals(new Decimal(0))) {\n      currentSqrtPrice = ticks[i].tickPrice.add(PRICE_OFFSET);\n      liquity = liquity.add(ticks[i].liquityNet);\n      continue;\n    }\n    if (currentSqrtPrice > ticks[i].tickPrice) {\n      continue;\n    }\n    let upperSqrtPrice = ticks[i].tickPrice;\n    let maxAmountIn = maxAmountB(currentSqrtPrice, upperSqrtPrice, liquity);\n    let fullStepFee = maxAmountIn.mul(fee).toDP(0, Decimal.ROUND_DOWN);\n    if (remind.lessThan(fullStepFee)) {\n      remindWithFee = remind;\n    } else {\n      remindWithFee = remind.sub(fullStepFee);\n    }\n    if (maxAmountIn.greaterThanOrEqualTo(remindWithFee)) {\n      remindWithFee = remind\n        .mul(new Decimal(1).sub(fee))\n        .toDP(0, Decimal.ROUND_UP);\n      let { amountOut, afterSqrtPrice } = swapB2A(\n        currentSqrtPrice,\n        liquity,\n        remindWithFee\n      );\n      amountUsed = amountUsed.add(remind);\n      feeUsed = feeUsed.add(remind.sub(remindWithFee));\n      return {\n        amountOut: out.add(amountOut),\n        feeUsed,\n        amountUsed,\n        afterPrice: afterSqrtPrice.pow(2),\n        afterLiquity: liquity,\n      };\n    } else {\n      remind = remindWithFee.sub(maxAmountIn);\n      amountUsed = amountUsed.add(maxAmountIn).add(fullStepFee);\n      feeUsed = feeUsed.add(fullStepFee);\n      out = out.add(maxAmountA(currentSqrtPrice, upperSqrtPrice, liquity));\n      liquity = liquity.add(ticks[i].liquityNet);\n      currentSqrtPrice = ticks[i].tickPrice.add(PRICE_OFFSET);\n    }\n  }\n  return {\n    amountOut: out,\n    amountUsed,\n    feeUsed,\n    afterPrice: currentSqrtPrice,\n    afterLiquity: liquity,\n  };\n}\n\n/** @internal */\nexport function maxAmountA(\n  lowerSqrtPrice: Decimal,\n  upperSqrtPrice: Decimal,\n  liquity: Decimal\n): Decimal {\n  return liquity\n    .div(lowerSqrtPrice)\n    .toDP(0, Decimal.ROUND_DOWN)\n    .sub(liquity.div(upperSqrtPrice).toDP(0, Decimal.ROUND_DOWN));\n}\n\n/** @internal */\nexport function maxAmountB(\n  lowerSqrtPrice: Decimal,\n  upperSqrtPrice: Decimal,\n  liquity: Decimal\n): Decimal {\n  return liquity\n    .mul(upperSqrtPrice.sub(lowerSqrtPrice))\n    .toDP(0, Decimal.ROUND_DOWN);\n}\n\n/** @internal */\nexport function swapA2B(\n  upperSqrtPrice: Decimal,\n  liquity: Decimal,\n  amountIn: Decimal\n): { amountOut: Decimal; afterSqrtPrice: Decimal } {\n  let afterSqrtPrice = liquity.div(amountIn.add(liquity.div(upperSqrtPrice)));\n  let delta_increase = amountIn.add(\n    liquity.div(upperSqrtPrice).toDP(0, Decimal.ROUND_DOWN)\n  );\n  let out = liquity\n    .mul(upperSqrtPrice)\n    .toDP(0, Decimal.ROUND_DOWN)\n    .sub(\n      liquity\n        .mul(liquity)\n        .div(delta_increase)\n        .toDP(0, Decimal.ROUND_DOWN)\n    );\n  return { amountOut: out, afterSqrtPrice };\n}\n\n/** @internal */\nexport function swapB2A(\n  lowerSqrtPrice: Decimal,\n  liquity: Decimal,\n  amountIn: Decimal\n): { amountOut: Decimal; afterSqrtPrice: Decimal } {\n  let afterSqrtPrice = amountIn.div(liquity).add(lowerSqrtPrice);\n  let delta_increase = amountIn.add(\n    liquity.mul(lowerSqrtPrice).toDP(0, Decimal.ROUND_DOWN)\n  );\n  let out = liquity\n    .div(lowerSqrtPrice)\n    .toDP(0, Decimal.ROUND_DOWN)\n    .sub(\n      liquity\n        .mul(liquity)\n        .div(delta_increase)\n        .toDP(0, Decimal.ROUND_DOWN)\n    );\n  return { amountOut: out, afterSqrtPrice };\n}\n","import Decimal from \"decimal.js\";\nimport { Tick } from \"../state\";\nimport invariant from \"tiny-invariant\";\nimport { tick2SqrtPrice } from \"./tick\";\n\n/**\n * Calculate liquity and another token amount when current tick is in [tickLower, tickUpper]\n * @param tickLower The tick lower\n * @param tickUpper The tick upper\n * @param currentSqrtPrice The current sqrt price\n * @param desiredAmountSrc The src token amount\n * @param direct 0(desiredAmountSrc is TokenA), 1(desiredAmountSrc is TokenB)\n * @returns The liquity and dst token amount\n */\nexport function calculateLiquity(\n  tickLower: number,\n  tickUpper: number,\n  desiredAmountSrc: Decimal,\n  currentSqrtPrice: Decimal,\n  direct: number\n): {\n  desiredAmountDst: Decimal;\n  deltaLiquity: Decimal;\n} {\n  invariant(tickLower < tickUpper, \"The tickLower must less than tickUpper\");\n  let lowerSqrtPrice = tick2SqrtPrice(tickLower);\n  let upperSqrtPrice = tick2SqrtPrice(tickUpper);\n  invariant(\n    currentSqrtPrice.greaterThanOrEqualTo(lowerSqrtPrice) &&\n      currentSqrtPrice.lessThanOrEqualTo(upperSqrtPrice),\n    \"The current price must in [lowerPrice,upperPrice]\"\n  );\n  let one = new Decimal(1);\n  if (direct === 0) {\n    let deltaLiquity = desiredAmountSrc.div(\n      one.div(currentSqrtPrice).sub(one.div(upperSqrtPrice))\n    );\n    let desiredAmountDst = deltaLiquity.mul(\n      currentSqrtPrice.sub(lowerSqrtPrice)\n    );\n    return { desiredAmountDst, deltaLiquity };\n  } else {\n    let deltaLiquity = desiredAmountSrc.div(\n      currentSqrtPrice.sub(lowerSqrtPrice)\n    );\n    let desiredAmountDst = deltaLiquity.mul(\n      one.div(currentSqrtPrice).sub(one.div(upperSqrtPrice))\n    );\n    return { desiredAmountDst, deltaLiquity };\n  }\n}\n\n/**\n * Calculate amount out of token A and token B by liquity\n * @param tickLower The tick lower\n * @param tickUpper The tick upper\n * @param currentSqrtPrice The current sqrt price\n * @param liquity The liquity amount\n * @returns The amount of token A and token B\n */\nexport function calculateTokenAmount(\n  tickLower: number,\n  tickUpper: number,\n  liquity: Decimal,\n  currentSqrtPrice: Decimal\n): {\n  amountA: Decimal;\n  amountB: Decimal;\n} {\n  let lowerSqrtPrice = tick2SqrtPrice(tickLower);\n  let upperSqrtPrice = tick2SqrtPrice(tickUpper);\n  if (currentSqrtPrice.lessThan(lowerSqrtPrice)) {\n    return {\n      amountA: liquity.div(lowerSqrtPrice).sub(liquity.div(upperSqrtPrice)),\n      amountB: new Decimal(0),\n    };\n  } else if (currentSqrtPrice.greaterThan(upperSqrtPrice)) {\n    return {\n      amountA: new Decimal(0),\n      amountB: liquity.mul(upperSqrtPrice).sub(liquity.mul(lowerSqrtPrice)),\n    };\n  } else {\n    return {\n      amountA: liquity.div(currentSqrtPrice).sub(liquity.div(upperSqrtPrice)),\n      amountB: liquity.mul(currentSqrtPrice).sub(liquity.mul(lowerSqrtPrice)),\n    };\n  }\n}\n\n/**\n * Calculate liquity when current tick is less than tickLower\n * @param tickLower The tick lower\n * @param tickUpper The tick upper\n * @param desiredAmountA The desired amount of token A\n * @returns the liquity\n */\nexport function calculateLiquityOnlyA(\n  tickLower: number,\n  tickUpper: number,\n  desiredAmountA: Decimal\n): Decimal {\n  invariant(tickLower < tickUpper, \"The tickLower must less than tickUpper\");\n  let lowerSqrtPrice = tick2SqrtPrice(tickLower);\n  let upperSqrtPrice = tick2SqrtPrice(tickUpper);\n  let one = new Decimal(1);\n  return desiredAmountA.div(\n    one.div(lowerSqrtPrice).sub(one.div(upperSqrtPrice))\n  );\n}\n\n/**\n * Calculate liquity when current tick is less than tickLower\n * @param tickLower The tick lower\n * @param tickUpper The tick upper\n * @param desiredAmountA The desired amount of token B\n * @returns The liquity\n */\nexport function calculateLiquityOnlyB(\n  tickLower: number,\n  tickUpper: number,\n  desiredAmountB: Decimal\n): Decimal {\n  invariant(tickLower < tickUpper, \"The tickLower must less than tickUpper\");\n  let lowerSqrtPrice = tick2SqrtPrice(tickLower);\n  let upperSqrtPrice = tick2SqrtPrice(tickUpper);\n  return desiredAmountB.div(upperSqrtPrice.sub(lowerSqrtPrice));\n}\n\nexport interface Liquity {\n  lowerTick: number;\n  upperTick: number;\n  amount: Decimal;\n}\n/**\n * Calculate the liquitys table\n * @param ticks The tick array of token swap\n * @returns The min, max of liquity, and liquitys array\n */\nexport function calculateLiquityTable(\n  ticks: Tick[]\n): {\n  maxLiquity: Decimal;\n  minLiquity: Decimal;\n  liquitys: Liquity[];\n} {\n  let minLiquity = new Decimal(0);\n  let maxLiquity = new Decimal(0);\n  const liquitys: Liquity[] = [];\n  let liquity: Liquity = {\n    lowerTick: 0,\n    upperTick: 0,\n    amount: new Decimal(0),\n  };\n  for (let i = 0; i < ticks.length; i++) {\n    if (liquity.amount.equals(0)) {\n      liquity.lowerTick = ticks[i].tick;\n      liquity.amount = ticks[i].liquityNet;\n      continue;\n    }\n    liquity.upperTick = ticks[i].tick;\n    minLiquity =\n      liquity.amount.lessThan(minLiquity) || minLiquity.equals(0)\n        ? liquity.amount\n        : minLiquity;\n    maxLiquity = liquity.amount.greaterThan(maxLiquity)\n      ? liquity.amount\n      : maxLiquity;\n    liquitys.push({\n      lowerTick: liquity.lowerTick,\n      upperTick: liquity.upperTick,\n      amount: liquity.amount,\n    });\n    liquity.amount = liquity.amount.add(ticks[i].liquityNet);\n    liquity.lowerTick = ticks[i].tick;\n  }\n  return { maxLiquity, minLiquity, liquitys };\n}\n","import Decimal from \"decimal.js\";\nimport invariant from \"tiny-invariant\";\nimport { sendAndConfirmTransaction } from \"./util\";\nimport { TransactionSignature } from \"@solana/web3.js\";\nimport { MintLayout, Token, TOKEN_PROGRAM_ID } from \"@solana/spl-token\";\nimport {\n  addUserPositionInstruction,\n  claimInstruction,\n  depositAllTokenTypesInstruction,\n  initializeInstruction,\n  managerClaimInstruction,\n  swapInstruction,\n  withdrawAllTokenTypesInstruction,\n  simulateSwapInstruction,\n} from \"./instructions\";\nimport {\n  TICKS_ACCOUNT_SIZE,\n  POSITIONS_ACCOUNT_SIZE,\n  TOKEN_SWAP_ACCOUNT_SIZE,\n  MAX_ACCOUNT_POSITION_LENGTH,\n} from \"./state\";\nimport {\n  Connection,\n  PublicKey,\n  Signer,\n  Keypair,\n  GetProgramAccountsConfig,\n  Transaction,\n  SystemProgram,\n} from \"@solana/web3.js\";\nimport {\n  isPositionsAccount,\n  isTicksAccount,\n  isTokenSwapAccount,\n  parsePositionsAccount,\n  parseTicksAccount,\n  parseTokenSwapAccount,\n  Tick,\n  TokenSwapAccount,\n} from \"./state\";\nimport {\n  createAssociatedTokenAccountInstruction,\n  getAssociatedTokenAddress,\n  getTokenAccounts,\n} from \"./util/token\";\nimport {\n  sqrtPrice2Tick,\n  calculateLiquity,\n  calculateLiquityOnlyA,\n  calculateLiquityOnlyB,\n  getNearestTickByPrice,\n  calculateTokenAmount,\n  calculateSwapA2B,\n  calculateSwapB2A,\n} from \"./math\";\n\nexport const INIT_KEY = new PublicKey(\"11111111111111111111111111111111\");\n\nexport interface PositionInfo {\n  positionsKey: PublicKey;\n  index: Decimal;\n  positionId: PublicKey;\n  lowerTick: number;\n  upperTick: number;\n  liquity: Decimal;\n  feeGrowthInsideALast: Decimal;\n  feeGrowthInsideBLast: Decimal;\n  tokenAFee: Decimal;\n  tokenBFee: Decimal;\n}\n\nDecimal.config({\n  precision: 64,\n  rounding: Decimal.ROUND_HALF_DOWN,\n  toExpNeg: -64,\n  toExpPos: 64,\n});\n\n/**\n * The token swap class\n */\nexport class TokenSwap {\n  private conn: Connection;\n  private programId: PublicKey = INIT_KEY;\n  private tokenSwapKey: PublicKey = INIT_KEY;\n  public payer: Signer | null;\n  public authority: PublicKey = INIT_KEY;\n  public isLoaded: boolean = false;\n  public currentTick: number = 0;\n  public tokenSwapInfo: TokenSwapAccount = {\n    tokenSwapKey: INIT_KEY,\n    accountType: 0,\n    version: 0,\n    isInitialized: 0,\n    nonce: 0,\n    tokenProgramId: TOKEN_PROGRAM_ID,\n    manager: INIT_KEY,\n    managerTokenA: INIT_KEY,\n    managerTokenB: INIT_KEY,\n    swapTokenA: INIT_KEY,\n    swapTokenB: INIT_KEY,\n    tokenAMint: INIT_KEY,\n    tokenBMint: INIT_KEY,\n    ticksKey: INIT_KEY,\n    positionsKey: INIT_KEY,\n    curveType: 0,\n    fee: new Decimal(0),\n    managerFee: new Decimal(0),\n    tickSpace: 0,\n    currentSqrtPrice: new Decimal(0),\n    currentLiquity: new Decimal(0),\n    feeGrowthGlobal0: new Decimal(0),\n    feeGrowthGlobal1: new Decimal(0),\n    managerFeeA: new Decimal(0),\n    managerFeeB: new Decimal(0),\n  };\n  public ticks: Tick[] = [];\n  public positions: Map<string, PositionInfo>;\n  public positionsKeys: Map<PublicKey, number>;\n\n  /**\n   * The constructor of TokenSwap\n   * @param conn The connection to use\n   * @param programId The token swap program id\n   * @param tokenSwapKey The token swap key\n   * @param payer The default pays for the transaction\n   */\n  constructor(\n    conn: Connection,\n    programId: PublicKey,\n    tokenSwapKey: PublicKey,\n    payer: Signer | null\n  ) {\n    this.conn = conn;\n    this.tokenSwapKey = tokenSwapKey;\n    this.programId = programId;\n    this.payer = payer;\n    this.positions = new Map();\n    this.positionsKeys = new Map();\n  }\n\n  /**\n   * Set the default payer\n   * @returns\n   */\n  setDefaultPayer(payer: Signer) {\n    this.payer = payer;\n  }\n\n  /**\n   * Load the token swap info\n   */\n  async load(): Promise<TokenSwap> {\n    let config: GetProgramAccountsConfig = {\n      encoding: \"base64\",\n      filters: [\n        {\n          memcmp: {\n            offset: 1,\n            bytes: this.tokenSwapKey.toBase58(),\n          },\n        },\n      ],\n    };\n    let accounts = await this.conn.getProgramAccounts(this.programId, config);\n    accounts.map((item) => {\n      if (isTokenSwapAccount(item.account)) {\n        let info = parseTokenSwapAccount(item.pubkey, item.account);\n        invariant(\n          info?.data !== undefined,\n          \"The token swap account parse failed\"\n        );\n        this.tokenSwapInfo = info.data;\n      } else if (isTicksAccount(item.account)) {\n        let info = parseTicksAccount(item.pubkey, item.account);\n        invariant(info?.data !== undefined, \"The tick account parse failed\");\n        this.ticks = info.data.ticks;\n      } else if (isPositionsAccount(item.account)) {\n        let info = parsePositionsAccount(item.pubkey, item.account);\n        invariant(\n          info?.data !== undefined,\n          \"The position account data parse failed\"\n        );\n        this.positionsKeys.set(item.pubkey, info.data.positions.length);\n        for (let i = 0; i < info.data.positions.length; i++) {\n          let p = info.data.positions[i];\n          this.positions.set(p.nftTokenId.toBase58(), {\n            positionsKey: item.pubkey,\n            index: new Decimal(i),\n            positionId: p.nftTokenId,\n            lowerTick: p.lowerTick,\n            upperTick: p.upperTick,\n            liquity: p.liquity,\n            feeGrowthInsideALast: p.feeGrowthInsideALast,\n            feeGrowthInsideBLast: p.feeGrowthInsideBLast,\n            tokenAFee: p.tokenAFee,\n            tokenBFee: p.tokenBFee,\n          });\n        }\n      } else {\n        console.log(\n          \"the account:%s length:%d unkown\",\n          item.pubkey.toString(),\n          item.account.data.length\n        );\n      }\n    });\n    if (this.authority.toString() === INIT_KEY.toString()) {\n      const [authority] = await PublicKey.findProgramAddress(\n        [this.tokenSwapKey.toBuffer()],\n        this.programId\n      );\n      this.authority = authority;\n    }\n    this.isLoaded = true;\n    this.currentTick = sqrtPrice2Tick(this.tokenSwapInfo.currentSqrtPrice);\n    return this;\n  }\n\n  /**\n   * Create a new token swap\n   * @param conn The connection to use\n   * @param programId The token swap program id\n   * @param payer Pays for the transaction\n   * @param tokenAMint The token A mint\n   * @param tokenBMint The token B mint\n   * @param manager The manager\n   * @param fee The fee of token swap\n   * @param managerFee The manager(protocol) fee of token swap\n   * @param tickSpace The tick space\n   * @param initializePrice The initilized price of token swap\n   * @param payer The pays for the transaction\n   */\n  static async createTokenSwap(\n    conn: Connection,\n    programId: PublicKey,\n    tokenAMint: PublicKey,\n    tokenBMint: PublicKey,\n    manager: PublicKey,\n    fee: Decimal,\n    managerFee: Decimal,\n    tickSpace: number,\n    initializePrice: Decimal,\n    payer: Signer,\n    isDebug: boolean = false\n  ): Promise<TokenSwap> {\n    // generate account create instruction that token swap need\n    const tokenSwapAccount = Keypair.generate();\n    const ticksAccount = Keypair.generate();\n    const positionsAccount = Keypair.generate();\n    const [authority, nonce] = await PublicKey.findProgramAddress(\n      [tokenSwapAccount.publicKey.toBuffer()],\n      programId\n    );\n    const ticksAccountLamports = await conn.getMinimumBalanceForRentExemption(\n      TICKS_ACCOUNT_SIZE\n    );\n    const positionsAccountLarports = await conn.getMinimumBalanceForRentExemption(\n      POSITIONS_ACCOUNT_SIZE\n    );\n    const tokenSwapAccountLamports = await conn.getMinimumBalanceForRentExemption(\n      TOKEN_SWAP_ACCOUNT_SIZE\n    );\n    let transaction = new Transaction().add(\n      SystemProgram.createAccount({\n        fromPubkey: payer.publicKey,\n        newAccountPubkey: tokenSwapAccount.publicKey,\n        lamports: tokenSwapAccountLamports,\n        space: TOKEN_SWAP_ACCOUNT_SIZE,\n        programId: programId,\n      }),\n      SystemProgram.createAccount({\n        fromPubkey: payer.publicKey,\n        newAccountPubkey: ticksAccount.publicKey,\n        lamports: ticksAccountLamports,\n        space: TICKS_ACCOUNT_SIZE,\n        programId: programId,\n      }),\n      SystemProgram.createAccount({\n        fromPubkey: payer.publicKey,\n        newAccountPubkey: positionsAccount.publicKey,\n        lamports: positionsAccountLarports,\n        space: POSITIONS_ACCOUNT_SIZE,\n        programId: programId,\n      })\n    );\n\n    // generate create token swap authority token account instruction\n    let swapTokenA = await getAssociatedTokenAddress(tokenAMint, authority);\n    let swapTokenB = await getAssociatedTokenAddress(tokenBMint, authority);\n    transaction.add(\n      createAssociatedTokenAccountInstruction(\n        tokenAMint,\n        swapTokenA,\n        authority,\n        payer.publicKey\n      ),\n      createAssociatedTokenAccountInstruction(\n        tokenBMint,\n        swapTokenB,\n        authority,\n        payer.publicKey\n      )\n    );\n\n    // generate token swap initialize instruction\n    const currentSqrtPrice = initializePrice.sqrt();\n    const tokenA = new Token(conn, tokenAMint, TOKEN_PROGRAM_ID, payer);\n    const tokenB = new Token(conn, tokenBMint, TOKEN_PROGRAM_ID, payer);\n    const managerTokenA = await tokenA.getOrCreateAssociatedAccountInfo(\n      manager\n    );\n    const managerTokenB = await tokenB.getOrCreateAssociatedAccountInfo(\n      manager\n    );\n\n    const curveType = 0;\n    transaction.add(\n      initializeInstruction(\n        programId,\n        tokenSwapAccount.publicKey,\n        authority,\n        manager,\n        managerTokenA.address,\n        managerTokenB.address,\n        swapTokenA,\n        swapTokenB,\n        ticksAccount.publicKey,\n        positionsAccount.publicKey,\n        nonce,\n        curveType,\n        fee,\n        managerFee,\n        tickSpace,\n        currentSqrtPrice\n      )\n    );\n\n    // send and confirm transaction\n    const tx = await sendAndConfirmTransaction(\n      conn,\n      transaction,\n      payer,\n      tokenSwapAccount,\n      ticksAccount,\n      positionsAccount\n    );\n    if (isDebug) {\n      console.log(tx);\n    }\n\n    return await new TokenSwap(\n      conn,\n      programId,\n      tokenSwapAccount.publicKey,\n      payer\n    ).load();\n  }\n\n  /**\n   *\n   * @param userTokenA The user address of token A\n   * @param userTokenB The user address of token B\n   * @param lowerTick The lower tick\n   * @param upperTick The upper tick\n   * @param liquity The liquity amount\n   * @param maximumAmountA The maximum amount of Token A\n   * @param maximumAmountB The maximum amount of Token B\n   * @param userTransferAuthroity The pays for the transaction\n   * @returns\n   */\n  async mintPosition(\n    userTokenA: PublicKey,\n    userTokenB: PublicKey,\n    lowerTick: number,\n    upperTick: number,\n    liquity: Decimal,\n    maximumAmountA: Decimal,\n    maximumAmountB: Decimal,\n    userTransferAuthroity: Signer,\n    payer: Signer | null = null\n  ): Promise<TransactionSignature | null> {\n    if (this.isLoaded) {\n      await this.load();\n    }\n    invariant(\n      lowerTick < upperTick,\n      \"The lowerTick must be less than upperTick\"\n    );\n    payer = payer != null ? payer : this.payer;\n    invariant(payer != null, \"The payer is null\");\n\n    // Generate create position nft token instructions\n    const nftMintAccount = Keypair.generate();\n    const nftUser = await getAssociatedTokenAddress(\n      nftMintAccount.publicKey,\n      payer.publicKey\n    );\n    const accountLamports = await Token.getMinBalanceRentForExemptAccount(\n      this.conn\n    );\n    const positionsKey = this.choosePosition();\n    invariant(positionsKey != null, \"The position account space is full\");\n    let transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: payer.publicKey,\n        newAccountPubkey: nftMintAccount.publicKey,\n        lamports: accountLamports,\n        space: MintLayout.span,\n        programId: TOKEN_PROGRAM_ID,\n      }),\n      Token.createInitMintInstruction(\n        TOKEN_PROGRAM_ID,\n        nftMintAccount.publicKey,\n        0,\n        this.authority,\n        null\n      ),\n      createAssociatedTokenAccountInstruction(\n        nftMintAccount.publicKey,\n        nftUser,\n        payer.publicKey,\n        payer.publicKey\n      )\n    );\n\n    // Generate mint positon instruction\n    transaction.add(\n      depositAllTokenTypesInstruction(\n        this.programId,\n        this.tokenSwapKey,\n        this.authority,\n        userTransferAuthroity.publicKey,\n        userTokenA,\n        userTokenB,\n        this.tokenSwapInfo.swapTokenA,\n        this.tokenSwapInfo.swapTokenB,\n        nftMintAccount.publicKey,\n        nftUser,\n        this.tokenSwapInfo.ticksKey,\n        positionsKey,\n        0,\n        lowerTick,\n        upperTick,\n        liquity,\n        maximumAmountA,\n        maximumAmountB,\n        new Decimal(0)\n      )\n    );\n\n    // send and confirm transaction\n    return await sendAndConfirmTransaction(\n      this.conn,\n      transaction,\n      payer,\n      userTransferAuthroity,\n      nftMintAccount\n    );\n  }\n\n  /**\n   * Increase liquity on a exist position\n   * @param positionId The position id (nft mint address)\n   * @param userTokenA The user address of token A\n   * @param userTokenB The user address of token B\n   * @param lowerTick The lower tick\n   * @param upperTick The upper tick\n   * @param liquity The liquity amount\n   * @param maximumAmountA The maximum of token A\n   * @param maximumAmountB The maximum of token B\n   * @returns\n   */\n  async increaseLiquity(\n    positionId: PublicKey,\n    userTokenA: PublicKey,\n    userTokenB: PublicKey,\n    liquity: Decimal,\n    maximumAmountA: Decimal,\n    maximumAmountB: Decimal,\n    payer: Signer | null = null\n  ): Promise<TransactionSignature | null> {\n    if (!this.isLoaded) {\n      await this.load();\n    }\n    const positionInfo = this.getPositionInfo(positionId);\n    invariant(positionInfo != undefined, `Position:${positionId} not found`);\n    payer = payer != null ? payer : this.payer;\n    invariant(payer !== null, \"The payer is null\");\n\n    let nftToken = new Token(this.conn, positionId, TOKEN_PROGRAM_ID, payer);\n    let nftUser = await nftToken.getAccountInfo(\n      await getAssociatedTokenAddress(nftToken.publicKey, payer.publicKey)\n    );\n    invariant(\n      nftUser.amount.toNumber() === 1,\n      `You not hold this position:${nftToken.publicKey.toBase58()}`\n    );\n\n    // Generate mint positon instruction\n    let transaction = new Transaction();\n    transaction.add(\n      depositAllTokenTypesInstruction(\n        this.programId,\n        this.tokenSwapKey,\n        this.authority,\n        payer.publicKey,\n        userTokenA,\n        userTokenB,\n        this.tokenSwapInfo.swapTokenA,\n        this.tokenSwapInfo.swapTokenB,\n        positionId,\n        nftUser.address,\n        this.tokenSwapInfo.ticksKey,\n        positionInfo.positionsKey,\n        1,\n        positionInfo.lowerTick,\n        positionInfo.upperTick,\n        liquity,\n        maximumAmountA,\n        maximumAmountB,\n        positionInfo.index\n      )\n    );\n\n    // send and confirm transaction\n    return await sendAndConfirmTransaction(this.conn, transaction, payer);\n  }\n\n  /**\n   * Decrease liquity, after decrease if liquity amount is zero the position will be remove\n   * @param positionId The position id (nft mint address)\n   * @param userTokenA The user address of token A\n   * @param userTokenB The user address of token B\n   * @param liquity The liquity amount\n   * @param minimumAmountA The minimum amount of token A want recv\n   * @param minimumAmountB The minimum amount of token b want recv\n   * @param userAuthroity The pays for the transaction\n   * @returns\n   */\n  async decreaseLiquity(\n    positionId: PublicKey,\n    userTokenA: PublicKey,\n    userTokenB: PublicKey,\n    liquity: Decimal,\n    minimumAmountA: Decimal,\n    minimumAmountB: Decimal,\n    payer: Signer | null = null\n  ): Promise<TransactionSignature | null> {\n    if (!this.isLoaded) {\n      await this.load();\n    }\n    const positionInfo = this.getPositionInfo(positionId);\n    invariant(positionInfo != undefined, `Position:${positionId} not found`);\n    payer = payer != null ? payer : this.payer;\n    invariant(payer !== null, \"The payer is null\");\n    let nftToken = new Token(this.conn, positionId, TOKEN_PROGRAM_ID, payer);\n    let nftUser = await nftToken.getAccountInfo(\n      await getAssociatedTokenAddress(nftToken.publicKey, payer.publicKey)\n    );\n    invariant(\n      nftUser.amount.toNumber() === 1,\n      `You not hold this position:${nftToken.publicKey.toBase58()}`\n    );\n\n    // Create withdrawAllTokenTypes instruction\n    let transaction = new Transaction().add(\n      withdrawAllTokenTypesInstruction(\n        this.programId,\n        this.tokenSwapKey,\n        this.authority,\n        payer.publicKey,\n        this.tokenSwapInfo.swapTokenA,\n        this.tokenSwapInfo.swapTokenB,\n        userTokenA,\n        userTokenB,\n        positionId,\n        nftUser.address,\n        this.tokenSwapInfo.ticksKey,\n        positionInfo.positionsKey,\n        liquity,\n        minimumAmountA,\n        minimumAmountB,\n        positionInfo.index\n      )\n    );\n\n    // send and confirm transaction\n    return await sendAndConfirmTransaction(this.conn, transaction, payer);\n  }\n\n  /**\n   *\n   * @param userSource The token that user want swap out\n   * @param userDestination The token that user want swap in\n   * @param direct 0-A swap B, 1-B swap A\n   * @param amountIn The amount in\n   * @param minimumAmountOut The minimum amount out\n   * @param userTransactionAuthority Account delegated to transfer user's tokens\n   * @returns\n   */\n  async swap(\n    userSource: PublicKey,\n    userDestination: PublicKey,\n    direct: number,\n    amountIn: Decimal,\n    minimumAmountOut: Decimal,\n    userTransferAuthority: Signer,\n    payer: Signer | null = null\n  ): Promise<TransactionSignature | null> {\n    if (!this.isLoaded) {\n      await this.load();\n    }\n    payer = payer != null ? payer : this.payer;\n    invariant(payer !== null, \"The payer is null\");\n    let { swapSrc, swapDst } =\n      direct === 1\n        ? {\n            swapSrc: this.tokenSwapInfo.swapTokenA,\n            swapDst: this.tokenSwapInfo.swapTokenB,\n          }\n        : {\n            swapSrc: this.tokenSwapInfo.swapTokenB,\n            swapDst: this.tokenSwapInfo.swapTokenA,\n          };\n\n    let transaction = new Transaction().add(\n      swapInstruction(\n        this.programId,\n        this.tokenSwapKey,\n        this.authority,\n        userTransferAuthority.publicKey,\n        userSource,\n        userDestination,\n        swapSrc,\n        swapDst,\n        this.tokenSwapInfo.ticksKey,\n        amountIn,\n        minimumAmountOut\n      )\n    );\n\n    // send and confirm transaction\n    return await sendAndConfirmTransaction(\n      this.conn,\n      transaction,\n      payer,\n      userTransferAuthority\n    );\n  }\n\n  async simulateSwap(amountIn: Decimal, direction: number, payer: Signer) {\n    if (!this.isLoaded) {\n      await this.load();\n    }\n    let transaction = new Transaction().add(\n      simulateSwapInstruction(\n        this.programId,\n        this.tokenSwapKey,\n        this.tokenSwapInfo.ticksKey,\n        amountIn,\n        direction\n      )\n    );\n\n    let res = await this.conn.simulateTransaction(transaction, [payer]);\n    console.log(res);\n  }\n\n  /**\n   *\n   * Collect fee from specified position\n   * @param positionID The NFT token public key of position\n   * @param userTokenA The user address of token A\n   * @param userTokenB The user address of token B\n   * @param userAuthroity The pays for the transaction\n   * @returns\n   */\n  async collect(\n    positionId: PublicKey,\n    userTokenA: PublicKey,\n    userTokenB: PublicKey,\n    payer: Signer | null = null\n  ): Promise<TransactionSignature | null> {\n    if (!this.isLoaded) {\n      await this.load();\n    }\n    const positionInfo = this.getPositionInfo(positionId);\n    invariant(positionInfo != undefined, `Position:${positionId} not found`);\n    payer = payer != null ? payer : this.payer;\n    invariant(payer !== null, \"The payer is null\");\n    let nftToken = new Token(this.conn, positionId, TOKEN_PROGRAM_ID, payer);\n    let nftUser = await nftToken.getAccountInfo(\n      await getAssociatedTokenAddress(nftToken.publicKey, payer.publicKey)\n    );\n    invariant(\n      nftUser.amount.toNumber() === 1,\n      `You not hold this position:${nftToken.publicKey.toBase58()}`\n    );\n\n    let transaction = new Transaction().add(\n      claimInstruction(\n        this.programId,\n        this.tokenSwapKey,\n        this.authority,\n        payer.publicKey,\n        this.tokenSwapInfo.swapTokenB,\n        this.tokenSwapInfo.swapTokenB,\n        userTokenA,\n        userTokenB,\n        positionId,\n        nftUser.address,\n        this.tokenSwapInfo.ticksKey,\n        positionInfo.positionsKey,\n        positionInfo.index\n      )\n    );\n\n    // send and confirm transaction\n    return await sendAndConfirmTransaction(this.conn, transaction, payer);\n  }\n\n  /**\n   * Collect the manager fee\n   * @param userTokenA The manager address of token A\n   * @param userTokenB The manager address of token B\n   * @param userAuthroity The pays for the transaction\n   * @returns\n   */\n  async managerCollect(\n    userTokenA: PublicKey,\n    userTokenB: PublicKey,\n    payer: Signer | null = null\n  ): Promise<TransactionSignature | null> {\n    if (!this.isLoaded) {\n      await this.load();\n    }\n    payer = payer != null ? payer : this.payer;\n    invariant(payer !== null, \"The payer is null\");\n    let transaction = new Transaction().add(\n      managerClaimInstruction(\n        this.programId,\n        this.tokenSwapKey,\n        this.authority,\n        payer.publicKey,\n        this.tokenSwapInfo.swapTokenA,\n        this.tokenSwapInfo.swapTokenB,\n        userTokenA,\n        userTokenB\n      )\n    );\n\n    // send and confirm transaction\n    return await sendAndConfirmTransaction(this.conn, transaction, payer);\n  }\n\n  /**\n   * Add a positions account for token swap\n   * @param payer The pays for transaction\n   * @returns\n   */\n  async addPositionsAccount(\n    payer: Signer | null = null\n  ): Promise<TransactionSignature | null> {\n    if (!this.isLoaded) {\n      await this.load();\n    }\n    payer = payer != null ? payer : this.payer;\n    invariant(payer !== null, \"The payer is null\");\n    let positionsAccount = Keypair.generate();\n    let lamports = await this.conn.getMinimumBalanceForRentExemption(\n      POSITIONS_ACCOUNT_SIZE\n    );\n    let transaction = new Transaction().add(\n      SystemProgram.createAccount({\n        fromPubkey: payer.publicKey,\n        newAccountPubkey: positionsAccount.publicKey,\n        lamports,\n        space: POSITIONS_ACCOUNT_SIZE,\n        programId: this.programId,\n      }),\n      addUserPositionInstruction(\n        this.programId,\n        this.authority,\n        positionsAccount.publicKey\n      )\n    );\n\n    return await sendAndConfirmTransaction(\n      this.conn,\n      transaction,\n      payer,\n      positionsAccount\n    );\n  }\n\n  async approve(\n    userToken: PublicKey,\n    tokenMint: PublicKey,\n    amount: Decimal,\n    authority: Signer,\n    payer: Signer | null = null\n  ): Promise<void> {\n    payer = payer != null ? payer : this.payer;\n    invariant(payer !== null, \"The payer is null\");\n    let token = new Token(this.conn, tokenMint, TOKEN_PROGRAM_ID, payer);\n    await token.approve(\n      userToken,\n      authority.publicKey,\n      payer,\n      [],\n      amount.toNumber()\n    );\n  }\n\n  /**\n   * Get user's positions\n   * @param owner The owner of position\n   * @returns The positions list\n   */\n  async getUserPositions(\n    owner: PublicKey | undefined = undefined\n  ): Promise<PositionInfo[] | null> {\n    invariant(this.isLoaded, \"The token swap not load\");\n    owner = owner != undefined ? owner : this.payer?.publicKey;\n    invariant(owner !== undefined, \"The owner is undefined\");\n    let tokenAccounts = await getTokenAccounts(this.conn, owner);\n    let positions: PositionInfo[] = [];\n    for (let i = 0; i < tokenAccounts.length; i++) {\n      let position = this.positions.get(tokenAccounts[i].mint.toBase58());\n      if (position !== undefined) {\n        positions.push(position);\n      }\n    }\n    return positions;\n  }\n\n  /**\n   * Calculate the liquity and token A amount, when the token swap currentTick < upperTick\n   * @param tickLower The lower tick\n   * @param tickUpper the upper tick\n   * @param desiredAmountA The desired token A amount\n   * @returns\n   */\n  calculateLiquityByTokenA(\n    tickLower: number,\n    tickUpper: number,\n    desiredAmountA: Decimal\n  ): { desiredAmountB: Decimal; liquity: Decimal } {\n    invariant(this.isLoaded, \"The token swap not load\");\n    invariant(\n      this.currentTick <= tickUpper,\n      \"The current price must less than lower price\"\n    );\n    if (this.currentTick < tickLower) {\n      return {\n        desiredAmountB: new Decimal(0),\n        liquity: calculateLiquityOnlyA(tickLower, tickUpper, desiredAmountA),\n      };\n    } else {\n      let res = calculateLiquity(\n        tickLower,\n        tickUpper,\n        desiredAmountA,\n        this.tokenSwapInfo.currentSqrtPrice,\n        0\n      );\n      return {\n        desiredAmountB: res.desiredAmountDst,\n        liquity: res.deltaLiquity,\n      };\n    }\n  }\n\n  /**\n   * Calculate the liquity and token B amount, when the token swap currentTick < upperTick\n   * @param tickLower The lower tick\n   * @param tickUpper the upper tick\n   * @param desiredAmountA The desired token B amount\n   * @returns\n   */\n  calculateLiquityByTokenB(\n    tickLower: number,\n    tickUpper: number,\n    desiredAmountB: Decimal\n  ): { desiredAmountA: Decimal; liquity: Decimal } {\n    invariant(this.isLoaded, \"The token swap not load\");\n    invariant(\n      this.currentTick >= tickLower,\n      \"The current price must less than lower price\"\n    );\n    if (this.currentTick < tickUpper) {\n      return {\n        desiredAmountA: new Decimal(0),\n        liquity: calculateLiquityOnlyB(tickLower, tickUpper, desiredAmountB),\n      };\n    } else {\n      let res = calculateLiquity(\n        tickLower,\n        tickUpper,\n        desiredAmountB,\n        this.tokenSwapInfo.currentSqrtPrice,\n        1\n      );\n      return {\n        desiredAmountA: res.desiredAmountDst,\n        liquity: res.deltaLiquity,\n      };\n    }\n  }\n\n  /**\n   * Calculate the position current value\n   * @param positionId The position id\n   * @returns The amount of token A and token B\n   */\n  calculatePositionValue(\n    positionId: PublicKey\n  ): { liquity: Decimal; amountA: Decimal; amountB: Decimal } {\n    invariant(this.isLoaded, \"The token swap not load\");\n    const positionInfo = this.getPositionInfo(positionId);\n    invariant(\n      positionInfo !== undefined,\n      `The position:${positionId.toBase58()} not found`\n    );\n    let { amountA, amountB } = calculateTokenAmount(\n      positionInfo.lowerTick,\n      positionInfo.upperTick,\n      positionInfo.liquity,\n      this.tokenSwapInfo.currentSqrtPrice\n    );\n    return {\n      liquity: positionInfo.liquity,\n      amountA,\n      amountB,\n    };\n  }\n\n  /**\n   * prepare calculate collect amount of token A and B\n   * @param positionId The position id\n   * @returns the amount of token A and B\n   */\n  preCollect(positionId: PublicKey): { amountA: Decimal; amountB: Decimal } {\n    invariant(this.isLoaded, \"The token swap not load\");\n    const positionInfo = this.getPositionInfo(positionId);\n    invariant(\n      positionInfo !== undefined,\n      `The position:${positionId.toBase58()} not found`\n    );\n    let lowerTick: Tick | null = null;\n    let upperTick: Tick | null = null;\n    for (let i = 0; i < this.ticks.length; i++) {\n      if (this.ticks[i].tick == positionInfo.lowerTick) {\n        lowerTick = this.ticks[i];\n      }\n      if (this.ticks[i].tick == positionInfo.upperTick) {\n        upperTick = this.ticks[i];\n      }\n    }\n    invariant(\n      lowerTick !== null,\n      `The position lower tick:${positionInfo.lowerTick} not found`\n    );\n    invariant(\n      upperTick !== null,\n      `The position upper tick:${positionInfo.upperTick} not found`\n    );\n\n    let lowerFeeOutSideA = new Decimal(0);\n    let lowerFeeOutSideB = new Decimal(0);\n    let upperFeeOutSideA = new Decimal(0);\n    let upperFeeOutSideB = new Decimal(0);\n    let currentSqrtPrice = this.tokenSwapInfo.currentSqrtPrice;\n\n    if (lowerTick.tickPrice.lessThan(currentSqrtPrice)) {\n      lowerFeeOutSideA = lowerTick.feeGrowthOutside0;\n      lowerFeeOutSideB = lowerTick.feeGrowthOutside1;\n    } else {\n      lowerFeeOutSideA = this.tokenSwapInfo.feeGrowthGlobal0.sub(\n        lowerTick.feeGrowthOutside0\n      );\n      lowerFeeOutSideB = this.tokenSwapInfo.feeGrowthGlobal1.sub(\n        lowerTick.feeGrowthOutside1\n      );\n    }\n\n    if (upperTick.tickPrice.lessThan(currentSqrtPrice)) {\n      upperFeeOutSideA = this.tokenSwapInfo.feeGrowthGlobal0.sub(\n        upperTick.feeGrowthOutside0\n      );\n      upperFeeOutSideB = this.tokenSwapInfo.feeGrowthGlobal1.sub(\n        upperTick.feeGrowthOutside1\n      );\n    } else {\n      upperFeeOutSideA = upperTick.feeGrowthOutside0;\n      upperFeeOutSideB = upperTick.feeGrowthOutside1;\n    }\n\n    return {\n      amountA: this.tokenSwapInfo.feeGrowthGlobal0\n        .sub(lowerFeeOutSideA)\n        .sub(upperFeeOutSideA)\n        .sub(positionInfo.feeGrowthInsideALast)\n        .mul(positionInfo.liquity)\n        .add(positionInfo.tokenAFee),\n      amountB: this.tokenSwapInfo.feeGrowthGlobal1\n        .sub(lowerFeeOutSideB)\n        .sub(upperFeeOutSideB)\n        .sub(positionInfo.feeGrowthInsideBLast)\n        .mul(positionInfo.liquity)\n        .add(positionInfo.tokenBFee),\n    };\n  }\n\n  /**\n   * Prepare calculate A swap B\n   * @param amountIn The amount input of token A\n   * @returns amountOut:The amount out of token B, amountUsed:The used of amountIn, afterPrice:The price after calculate, afterLiquity: The liquity after calculate\n   */\n  preSwapA(\n    amountIn: Decimal\n  ): {\n    amountOut: Decimal;\n    amountUsed: Decimal;\n    feeUsed: Decimal;\n    afterLiquity: Decimal;\n    impactA: Decimal;\n    impactB: Decimal;\n    transactionPriceA: Decimal;\n    transactionPriceB: Decimal;\n    afterPriceA: Decimal;\n    afterPriceB: Decimal;\n  } {\n    invariant(this.isLoaded, \"The token swap not load\");\n    const res = calculateSwapA2B(\n      this.ticks,\n      this.tokenSwapInfo.currentSqrtPrice,\n      this.tokenSwapInfo.fee,\n      this.tokenSwapInfo.currentLiquity,\n      amountIn\n    );\n    let currentPriceA = this.tokenSwapInfo.currentSqrtPrice.pow(2);\n    let currentPriceB = new Decimal(1).div(currentPriceA);\n    let transactionPriceA = res.amountOut.div(res.amountUsed);\n    let transactionPriceB = res.amountUsed.div(res.amountOut);\n    let impactA = transactionPriceA\n      .sub(currentPriceA)\n      .div(currentPriceA)\n      .abs();\n    let impactB = transactionPriceB\n      .sub(currentPriceB)\n      .div(currentPriceB)\n      .abs();\n\n    let afterPriceA = res.afterPrice.pow(2);\n    let afterPriceB = new Decimal(1).div(afterPriceA);\n\n    return {\n      amountOut: res.amountOut,\n      amountUsed: res.amountUsed,\n      feeUsed: res.feeUsed,\n      afterPriceA,\n      afterPriceB,\n      afterLiquity: res.afterLiquity,\n      impactA,\n      impactB,\n      transactionPriceA,\n      transactionPriceB,\n    };\n  }\n\n  /**\n   * Prepare calculate B swap A\n   * @param amountIn The amount input of token B\n   * @returns amountOut:The amount out of token A, amountUsed:The used of amountIn, afterPrice:The price after calculate, afterLiquity: The liquity after calculate\n   */\n  preSwapB(\n    amountIn: Decimal\n  ): {\n    amountOut: Decimal;\n    amountUsed: Decimal;\n    feeUsed: Decimal;\n    afterLiquity: Decimal;\n    impactA: Decimal;\n    impactB: Decimal;\n    transactionPriceA: Decimal;\n    transactionPriceB: Decimal;\n    afterPriceA: Decimal;\n    afterPriceB: Decimal;\n  } {\n    invariant(this.isLoaded, \"The token swap not load\");\n    const res = calculateSwapB2A(\n      this.ticks,\n      this.tokenSwapInfo.currentSqrtPrice,\n      this.tokenSwapInfo.fee,\n      this.tokenSwapInfo.currentLiquity,\n      amountIn\n    );\n    let currentPriceA = this.tokenSwapInfo.currentSqrtPrice.pow(2);\n    let currentPriceB = new Decimal(1).div(currentPriceA);\n    let transactionPriceA = res.amountUsed.div(res.amountOut);\n    let transactionPriceB = res.amountOut.div(res.amountUsed);\n    let impactA = transactionPriceA\n      .sub(currentPriceA)\n      .div(currentPriceA)\n      .abs();\n    let impactB = transactionPriceB\n      .sub(currentPriceB)\n      .div(currentPriceB)\n      .abs();\n    let afterPriceA = res.afterPrice.pow(2);\n    let afterPriceB = new Decimal(1).div(afterPriceA);\n\n    return {\n      amountOut: res.amountOut,\n      amountUsed: res.amountUsed,\n      feeUsed: res.feeUsed,\n      afterLiquity: res.afterLiquity,\n      impactA,\n      impactB,\n      transactionPriceA,\n      transactionPriceB,\n      afterPriceA,\n      afterPriceB,\n    };\n  }\n\n  /**\n   * Get nearest tick by price\n   * @param price The price\n   * @returns The tick\n   */\n  getNearestTickByPrice(price: Decimal): number {\n    invariant(this.isLoaded, \"The token swap not load\");\n    return getNearestTickByPrice(price, this.tokenSwapInfo.tickSpace);\n  }\n\n  /* @internal */\n  getPositionInfo(positionId: PublicKey): PositionInfo | undefined {\n    invariant(this.isLoaded, \"The token swap not load\");\n    return this.positions.get(positionId.toBase58());\n  }\n\n  /* @internal */\n  choosePosition(): PublicKey | null {\n    invariant(this.isLoaded, \"The token swap not load\");\n    for (let [key, val] of this.positionsKeys) {\n      if (val < MAX_ACCOUNT_POSITION_LENGTH) {\n        return key;\n      }\n    }\n    return null;\n  }\n\n  /* for debug */\n  log() {\n    let payer = this.payer !== null ? this.payer.publicKey.toBase58() : \"null\";\n    console.log(\n      JSON.stringify(\n        {\n          programId: this.programId.toString(),\n          tokenSwapKey: this.tokenSwapKey.toString(),\n          payer: payer,\n          authority: this.authority.toString(),\n          currentTick: this.currentTick,\n          currentPrice: this.tokenSwapInfo.currentSqrtPrice.pow(2).toString(),\n          tokenSwapInfo: {\n            accountType: this.tokenSwapInfo.accountType,\n            version: this.tokenSwapInfo.version,\n            isInitialized: this.tokenSwapInfo.isInitialized,\n            nonce: this.tokenSwapInfo.nonce,\n            manager: this.tokenSwapInfo.manager.toString(),\n            managerTokenA: this.tokenSwapInfo.managerTokenA.toString(),\n            managerTokenB: this.tokenSwapInfo.managerTokenB.toString(),\n            swapTokenA: this.tokenSwapInfo.swapTokenA.toString(),\n            swapTokenB: this.tokenSwapInfo.swapTokenB.toString(),\n            tokenAMint: this.tokenSwapInfo.tokenAMint.toString(),\n            tokenBMint: this.tokenSwapInfo.tokenBMint.toString(),\n            ticksKey: this.tokenSwapInfo.ticksKey.toString(),\n            positionsKey: this.tokenSwapInfo.positionsKey.toString(),\n            curveType: this.tokenSwapInfo.curveType,\n            fee: this.tokenSwapInfo.fee,\n            managerFee: this.tokenSwapInfo.managerFee,\n            tickSpace: this.tokenSwapInfo.tickSpace,\n            currentSqrtPrice: this.tokenSwapInfo.currentSqrtPrice,\n            currentLiquity: this.tokenSwapInfo.currentLiquity,\n            feeGrowthGlobal0: this.tokenSwapInfo.feeGrowthGlobal0,\n            feeGrowthGlobal1: this.tokenSwapInfo.feeGrowthGlobal1,\n            managerFeeA: this.tokenSwapInfo.managerFeeA,\n            managerFeeB: this.tokenSwapInfo.managerFeeB,\n          },\n          positions: Object.fromEntries(this.positions),\n          positionsKeys: Object.fromEntries(this.positionsKeys),\n          ticks: this.ticks,\n        },\n        null,\n        4\n      )\n    );\n  }\n}\n"],"names":["undefined","Decimal","config","precision","rounding","ROUND_DOWN","toExpNeg","toExpPos","TEN","P64","pow","MAX_INT64","div","sub","MIN_INT64","neg","MAX_UINT64","MAX_INT128","MIN_INT128","MAX_UINT128","MAX_PRECISION","DecimalExt","from64Buffer","buffer","length","invariant","Math","abs","ss","v","push","toString","slice","bn","BN","join","add","fromU64Buffer","from128Buffer","fromU128Buffer","to64Buffer","mul","round","greaterThanOrEqualTo","lessThanOrEqualTo","isNeg","toBuffer","forEach","item","index","input","toU64Buffer","to128Buffer","toU128Buffer","encodeDecode","layout","decode","bind","encode","publicKey","property","blob","publicKeyLayout","offset","src","PublicKey","uint64","int64","int128","uint128","decimal64","decimal64Layout","_decode","_encode","Buffer","from","decimal","decimalU64","decimalU64Layout","decimal128","decimal128Layout","decimalU128","decimalU128Layout","val","sendAndConfirmTransaction","conn","transaction","signers","realSendAndConfirmTransaction","skipPreflight","commitment","preflightCommitment","getAssociatedTokenAddress","tokenMint","owner","Token","ASSOCIATED_TOKEN_PROGRAM_ID","TOKEN_PROGRAM_ID","createAssociatedTokenAccountInstruction","associatedAccount","payer","getTokenAccount","address","getAccountInfo","account","data","toBase58","accountInfo","parseTokenAccount","getTokenAccounts","getTokenAccountsByOwner","programId","accounts","accountInfos","i","value","pubkey","parseTokenAccountData","AccountLayout","mint","amount","u64","fromBuffer","delegateOption","delegate","delegatedAmount","isInitialized","state","isFrozen","isNativeOption","rentExemptReserve","isNative","closeAuthorityOption","closeAuthority","TokenSwapInstruction","DataLayout","struct","u8","addUserPositionInstruction","authority","positionsKey","alloc","span","instruction","AddUserPosition","keys","isSigner","isWritable","TransactionInstruction","claimInstruction","tokenSwapKey","userTransferAuthority","swapTokenA","swapTokenB","userTokenA","userTokenB","nftMint","nftUser","ticksKey","positionIndex","Claim","s32","depositAllTokenTypesInstruction","isNewPosition","tickLower","tickUpper","liquityAmount","maximumTokenA","maximumTokenB","DepositAllTokenTypes","u32","initializeInstruction","manager","managerTokenA","managerTokenB","nonce","curveType","fee","managerFee","tickSpace","currentSqrtPrice","Initialize","currentLiquity","feeGrowthGlobal0","feeGrowthGlobal1","managerFeeA","managerFeeB","managerClaimInstruction","ManagerClaim","swapInstruction","userSource","userDestination","swapSource","swapDestination","amountIn","minimumAmountOut","Swap","withdrawAllTokenTypesInstruction","minimumTokenA","minimumTokenB","WithdrawAllTokenTypes","simulateSwapInstruction","direction","SimulateSwap","TICKS_ACCOUNT_SIZE","TickLayout","TicksAccountLayout","isTicksAccount","info","parseTicksAccount","swapVersion","accountType","len","dataFlat","tickSpan","ticksBuffer","ticks","seq","ticksAccount","POSITIONS_ACCOUNT_SIZE","PositionLayout","PositionsAccountLayout","MAX_ACCOUNT_POSITION_LENGTH","floor","isPositionsAccount","parsePositionsAccount","positionSpan","positionsBuffer","positions","positionsAccount","TokenSwapAccountLayout","TOKEN_SWAP_ACCOUNT_SIZE","isTokenSwapAccount","parseTokenSwapAccount","tokenSwapAccount","MAX_TICK","MIN_TICK","PIECES","PRICE_OFFSET","MAX_PRICE","MIN_PRICE","MAX_SQRT_PRICE","MIN_SQRT_PRICE","sqrtPrice2Tick","sqrtPrice","lessThan","greaterThan","log","toDP","ROUND_HALF_UP","toNumber","tick2SqrtPrice","tick","price2Tick","price","tick2Price","getNearestTick","isLower","getNearestTickBySqrtPrice","t","m","getNearestTickByPrice","calculateSwapA2B","tickPrice","liquity","out","remind","remindWithFee","feeUsed","amountUsed","equals","liquityNet","upperSqrtPrice","lowerSqrtPrice","maxAmountIn","maxAmountA","fullStepFee","ROUND_UP","swapA2B","amountOut","afterSqrtPrice","afterPrice","afterLiquity","maxAmountB","calculateSwapB2A","swapB2A","delta_increase","calculateLiquity","desiredAmountSrc","direct","one","deltaLiquity","desiredAmountDst","calculateTokenAmount","amountA","amountB","calculateLiquityOnlyA","desiredAmountA","calculateLiquityOnlyB","desiredAmountB","calculateLiquityTable","minLiquity","maxLiquity","liquitys","lowerTick","upperTick","INIT_KEY","ROUND_HALF_DOWN","TokenSwap","version","tokenProgramId","tokenAMint","tokenBMint","Map","positionsKeys","setDefaultPayer","load","encoding","filters","memcmp","bytes","getProgramAccounts","map","tokenSwapInfo","set","p","nftTokenId","positionId","feeGrowthInsideALast","feeGrowthInsideBLast","tokenAFee","tokenBFee","console","findProgramAddress","isLoaded","currentTick","createTokenSwap","initializePrice","isDebug","Keypair","generate","getMinimumBalanceForRentExemption","ticksAccountLamports","positionsAccountLarports","tokenSwapAccountLamports","Transaction","SystemProgram","createAccount","fromPubkey","newAccountPubkey","lamports","space","sqrt","tokenA","tokenB","getOrCreateAssociatedAccountInfo","tx","mintPosition","maximumAmountA","maximumAmountB","userTransferAuthroity","nftMintAccount","getMinBalanceRentForExemptAccount","accountLamports","choosePosition","MintLayout","createInitMintInstruction","increaseLiquity","positionInfo","getPositionInfo","nftToken","decreaseLiquity","minimumAmountA","minimumAmountB","swap","swapSrc","swapDst","simulateSwap","simulateTransaction","res","collect","managerCollect","addPositionsAccount","approve","userToken","token","getUserPositions","tokenAccounts","position","get","calculateLiquityByTokenA","calculateLiquityByTokenB","calculatePositionValue","preCollect","lowerFeeOutSideA","lowerFeeOutSideB","upperFeeOutSideA","upperFeeOutSideB","feeGrowthOutside0","feeGrowthOutside1","preSwapA","currentPriceA","currentPriceB","transactionPriceA","transactionPriceB","impactA","impactB","afterPriceA","afterPriceB","preSwapB","key","JSON","stringify","currentPrice","Object","fromEntries"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,OAAO,IAAI,UAAU,OAAO,EAAE;AAElC;AACA,EAAE,IAAI,EAAE,GAAG,MAAM,CAAC,SAAS,CAAC;AAC5B,EAAE,IAAI,MAAM,GAAG,EAAE,CAAC,cAAc,CAAC;AACjC,EAAE,IAAIA,WAAS,CAAC;AAChB,EAAE,IAAI,OAAO,GAAG,OAAO,MAAM,KAAK,UAAU,GAAG,MAAM,GAAG,EAAE,CAAC;AAC3D,EAAE,IAAI,cAAc,GAAG,OAAO,CAAC,QAAQ,IAAI,YAAY,CAAC;AACxD,EAAE,IAAI,mBAAmB,GAAG,OAAO,CAAC,aAAa,IAAI,iBAAiB,CAAC;AACvE,EAAE,IAAI,iBAAiB,GAAG,OAAO,CAAC,WAAW,IAAI,eAAe,CAAC;AACjE;AACA,EAAE,SAAS,MAAM,CAAC,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE;AACnC,IAAI,MAAM,CAAC,cAAc,CAAC,GAAG,EAAE,GAAG,EAAE;AACpC,MAAM,KAAK,EAAE,KAAK;AAClB,MAAM,UAAU,EAAE,IAAI;AACtB,MAAM,YAAY,EAAE,IAAI;AACxB,MAAM,QAAQ,EAAE,IAAI;AACpB,KAAK,CAAC,CAAC;AACP,IAAI,OAAO,GAAG,CAAC,GAAG,CAAC,CAAC;AACpB,GAAG;AACH,EAAE,IAAI;AACN;AACA,IAAI,MAAM,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;AACnB,GAAG,CAAC,OAAO,GAAG,EAAE;AAChB,IAAI,MAAM,GAAG,SAAS,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE;AACvC,MAAM,OAAO,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;AAC9B,KAAK,CAAC;AACN,GAAG;AACH;AACA,EAAE,SAAS,IAAI,CAAC,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,WAAW,EAAE;AACrD;AACA,IAAI,IAAI,cAAc,GAAG,OAAO,IAAI,OAAO,CAAC,SAAS,YAAY,SAAS,GAAG,OAAO,GAAG,SAAS,CAAC;AACjG,IAAI,IAAI,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;AAC5D,IAAI,IAAI,OAAO,GAAG,IAAI,OAAO,CAAC,WAAW,IAAI,EAAE,CAAC,CAAC;AACjD;AACA;AACA;AACA,IAAI,SAAS,CAAC,OAAO,GAAG,gBAAgB,CAAC,OAAO,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;AACjE;AACA,IAAI,OAAO,SAAS,CAAC;AACrB,GAAG;AACH,EAAE,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,SAAS,QAAQ,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE;AAClC,IAAI,IAAI;AACR,MAAM,OAAO,EAAE,IAAI,EAAE,QAAQ,EAAE,GAAG,EAAE,EAAE,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC;AACxD,KAAK,CAAC,OAAO,GAAG,EAAE;AAClB,MAAM,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;AACzC,KAAK;AACL,GAAG;AACH;AACA,EAAE,IAAI,sBAAsB,GAAG,gBAAgB,CAAC;AAChD,EAAE,IAAI,sBAAsB,GAAG,gBAAgB,CAAC;AAChD,EAAE,IAAI,iBAAiB,GAAG,WAAW,CAAC;AACtC,EAAE,IAAI,iBAAiB,GAAG,WAAW,CAAC;AACtC;AACA;AACA;AACA,EAAE,IAAI,gBAAgB,GAAG,EAAE,CAAC;AAC5B;AACA;AACA;AACA;AACA;AACA,EAAE,SAAS,SAAS,GAAG,EAAE;AACzB,EAAE,SAAS,iBAAiB,GAAG,EAAE;AACjC,EAAE,SAAS,0BAA0B,GAAG,EAAE;AAC1C;AACA;AACA;AACA,EAAE,IAAI,iBAAiB,GAAG,EAAE,CAAC;AAC7B,EAAE,MAAM,CAAC,iBAAiB,EAAE,cAAc,EAAE,YAAY;AACxD,IAAI,OAAO,IAAI,CAAC;AAChB,GAAG,CAAC,CAAC;AACL;AACA,EAAE,IAAI,QAAQ,GAAG,MAAM,CAAC,cAAc,CAAC;AACvC,EAAE,IAAI,uBAAuB,GAAG,QAAQ,IAAI,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AAC3E,EAAE,IAAI,uBAAuB;AAC7B,MAAM,uBAAuB,KAAK,EAAE;AACpC,MAAM,MAAM,CAAC,IAAI,CAAC,uBAAuB,EAAE,cAAc,CAAC,EAAE;AAC5D;AACA;AACA,IAAI,iBAAiB,GAAG,uBAAuB,CAAC;AAChD,GAAG;AACH;AACA,EAAE,IAAI,EAAE,GAAG,0BAA0B,CAAC,SAAS;AAC/C,IAAI,SAAS,CAAC,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;AAC3D,EAAE,iBAAiB,CAAC,SAAS,GAAG,0BAA0B,CAAC;AAC3D,EAAE,MAAM,CAAC,EAAE,EAAE,aAAa,EAAE,0BAA0B,CAAC,CAAC;AACxD,EAAE,MAAM,CAAC,0BAA0B,EAAE,aAAa,EAAE,iBAAiB,CAAC,CAAC;AACvE,EAAE,iBAAiB,CAAC,WAAW,GAAG,MAAM;AACxC,IAAI,0BAA0B;AAC9B,IAAI,iBAAiB;AACrB,IAAI,mBAAmB;AACvB,GAAG,CAAC;AACJ;AACA;AACA;AACA,EAAE,SAAS,qBAAqB,CAAC,SAAS,EAAE;AAC5C,IAAI,CAAC,MAAM,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAC,OAAO,CAAC,SAAS,MAAM,EAAE;AACzD,MAAM,MAAM,CAAC,SAAS,EAAE,MAAM,EAAE,SAAS,GAAG,EAAE;AAC9C,QAAQ,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;AACzC,OAAO,CAAC,CAAC;AACT,KAAK,CAAC,CAAC;AACP,GAAG;AACH;AACA,EAAE,OAAO,CAAC,mBAAmB,GAAG,SAAS,MAAM,EAAE;AACjD,IAAI,IAAI,IAAI,GAAG,OAAO,MAAM,KAAK,UAAU,IAAI,MAAM,CAAC,WAAW,CAAC;AAClE,IAAI,OAAO,IAAI;AACf,QAAQ,IAAI,KAAK,iBAAiB;AAClC;AACA;AACA,QAAQ,CAAC,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,IAAI,MAAM,mBAAmB;AAC/D,QAAQ,KAAK,CAAC;AACd,GAAG,CAAC;AACJ;AACA,EAAE,OAAO,CAAC,IAAI,GAAG,SAAS,MAAM,EAAE;AAClC,IAAI,IAAI,MAAM,CAAC,cAAc,EAAE;AAC/B,MAAM,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,0BAA0B,CAAC,CAAC;AAChE,KAAK,MAAM;AACX,MAAM,MAAM,CAAC,SAAS,GAAG,0BAA0B,CAAC;AACpD,MAAM,MAAM,CAAC,MAAM,EAAE,iBAAiB,EAAE,mBAAmB,CAAC,CAAC;AAC7D,KAAK;AACL,IAAI,MAAM,CAAC,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;AACzC,IAAI,OAAO,MAAM,CAAC;AAClB,GAAG,CAAC;AACJ;AACA;AACA;AACA;AACA;AACA,EAAE,OAAO,CAAC,KAAK,GAAG,SAAS,GAAG,EAAE;AAChC,IAAI,OAAO,EAAE,OAAO,EAAE,GAAG,EAAE,CAAC;AAC5B,GAAG,CAAC;AACJ;AACA,EAAE,SAAS,aAAa,CAAC,SAAS,EAAE,WAAW,EAAE;AACjD,IAAI,SAAS,MAAM,CAAC,MAAM,EAAE,GAAG,EAAE,OAAO,EAAE,MAAM,EAAE;AAClD,MAAM,IAAI,MAAM,GAAG,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,SAAS,EAAE,GAAG,CAAC,CAAC;AAC/D,MAAM,IAAI,MAAM,CAAC,IAAI,KAAK,OAAO,EAAE;AACnC,QAAQ,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;AAC3B,OAAO,MAAM;AACb,QAAQ,IAAI,MAAM,GAAG,MAAM,CAAC,GAAG,CAAC;AAChC,QAAQ,IAAI,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;AACjC,QAAQ,IAAI,KAAK;AACjB,YAAY,OAAO,KAAK,KAAK,QAAQ;AACrC,YAAY,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,SAAS,CAAC,EAAE;AAC3C,UAAU,OAAO,WAAW,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,SAAS,KAAK,EAAE;AACzE,YAAY,MAAM,CAAC,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;AACnD,WAAW,EAAE,SAAS,GAAG,EAAE;AAC3B,YAAY,MAAM,CAAC,OAAO,EAAE,GAAG,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;AAClD,WAAW,CAAC,CAAC;AACb,SAAS;AACT;AACA,QAAQ,OAAO,WAAW,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,SAAS,SAAS,EAAE;AACnE;AACA;AACA;AACA,UAAU,MAAM,CAAC,KAAK,GAAG,SAAS,CAAC;AACnC,UAAU,OAAO,CAAC,MAAM,CAAC,CAAC;AAC1B,SAAS,EAAE,SAAS,KAAK,EAAE;AAC3B;AACA;AACA,UAAU,OAAO,MAAM,CAAC,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;AACzD,SAAS,CAAC,CAAC;AACX,OAAO;AACP,KAAK;AACL;AACA,IAAI,IAAI,eAAe,CAAC;AACxB;AACA,IAAI,SAAS,OAAO,CAAC,MAAM,EAAE,GAAG,EAAE;AAClC,MAAM,SAAS,0BAA0B,GAAG;AAC5C,QAAQ,OAAO,IAAI,WAAW,CAAC,SAAS,OAAO,EAAE,MAAM,EAAE;AACzD,UAAU,MAAM,CAAC,MAAM,EAAE,GAAG,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;AAC/C,SAAS,CAAC,CAAC;AACX,OAAO;AACP;AACA,MAAM,OAAO,eAAe;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,eAAe,GAAG,eAAe,CAAC,IAAI;AAC9C,UAAU,0BAA0B;AACpC;AACA;AACA,UAAU,0BAA0B;AACpC,SAAS,GAAG,0BAA0B,EAAE,CAAC;AACzC,KAAK;AACL;AACA;AACA;AACA,IAAI,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;AAC3B,GAAG;AACH;AACA,EAAE,qBAAqB,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;AACjD,EAAE,MAAM,CAAC,aAAa,CAAC,SAAS,EAAE,mBAAmB,EAAE,YAAY;AACnE,IAAI,OAAO,IAAI,CAAC;AAChB,GAAG,CAAC,CAAC;AACL,EAAE,OAAO,CAAC,aAAa,GAAG,aAAa,CAAC;AACxC;AACA;AACA;AACA;AACA,EAAE,OAAO,CAAC,KAAK,GAAG,SAAS,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,WAAW,EAAE,WAAW,EAAE;AAC7E,IAAI,IAAI,WAAW,KAAK,KAAK,CAAC,EAAE,WAAW,GAAG,OAAO,CAAC;AACtD;AACA,IAAI,IAAI,IAAI,GAAG,IAAI,aAAa;AAChC,MAAM,IAAI,CAAC,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,WAAW,CAAC;AAC/C,MAAM,WAAW;AACjB,KAAK,CAAC;AACN;AACA,IAAI,OAAO,OAAO,CAAC,mBAAmB,CAAC,OAAO,CAAC;AAC/C,QAAQ,IAAI;AACZ,QAAQ,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,SAAS,MAAM,EAAE;AAC1C,UAAU,OAAO,MAAM,CAAC,IAAI,GAAG,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;AAC1D,SAAS,CAAC,CAAC;AACX,GAAG,CAAC;AACJ;AACA,EAAE,SAAS,gBAAgB,CAAC,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE;AACpD,IAAI,IAAI,KAAK,GAAG,sBAAsB,CAAC;AACvC;AACA,IAAI,OAAO,SAAS,MAAM,CAAC,MAAM,EAAE,GAAG,EAAE;AACxC,MAAM,IAAI,KAAK,KAAK,iBAAiB,EAAE;AACvC,QAAQ,MAAM,IAAI,KAAK,CAAC,8BAA8B,CAAC,CAAC;AACxD,OAAO;AACP;AACA,MAAM,IAAI,KAAK,KAAK,iBAAiB,EAAE;AACvC,QAAQ,IAAI,MAAM,KAAK,OAAO,EAAE;AAChC,UAAU,MAAM,GAAG,CAAC;AACpB,SAAS;AACT;AACA;AACA;AACA,QAAQ,OAAO,UAAU,EAAE,CAAC;AAC5B,OAAO;AACP;AACA,MAAM,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC;AAC9B,MAAM,OAAO,CAAC,GAAG,GAAG,GAAG,CAAC;AACxB;AACA,MAAM,OAAO,IAAI,EAAE;AACnB,QAAQ,IAAI,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC;AACxC,QAAQ,IAAI,QAAQ,EAAE;AACtB,UAAU,IAAI,cAAc,GAAG,mBAAmB,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;AACtE,UAAU,IAAI,cAAc,EAAE;AAC9B,YAAY,IAAI,cAAc,KAAK,gBAAgB,EAAE,SAAS;AAC9D,YAAY,OAAO,cAAc,CAAC;AAClC,WAAW;AACX,SAAS;AACT;AACA,QAAQ,IAAI,OAAO,CAAC,MAAM,KAAK,MAAM,EAAE;AACvC;AACA;AACA,UAAU,OAAO,CAAC,IAAI,GAAG,OAAO,CAAC,KAAK,GAAG,OAAO,CAAC,GAAG,CAAC;AACrD;AACA,SAAS,MAAM,IAAI,OAAO,CAAC,MAAM,KAAK,OAAO,EAAE;AAC/C,UAAU,IAAI,KAAK,KAAK,sBAAsB,EAAE;AAChD,YAAY,KAAK,GAAG,iBAAiB,CAAC;AACtC,YAAY,MAAM,OAAO,CAAC,GAAG,CAAC;AAC9B,WAAW;AACX;AACA,UAAU,OAAO,CAAC,iBAAiB,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;AACjD;AACA,SAAS,MAAM,IAAI,OAAO,CAAC,MAAM,KAAK,QAAQ,EAAE;AAChD,UAAU,OAAO,CAAC,MAAM,CAAC,QAAQ,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC;AAChD,SAAS;AACT;AACA,QAAQ,KAAK,GAAG,iBAAiB,CAAC;AAClC;AACA,QAAQ,IAAI,MAAM,GAAG,QAAQ,CAAC,OAAO,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;AACtD,QAAQ,IAAI,MAAM,CAAC,IAAI,KAAK,QAAQ,EAAE;AACtC;AACA;AACA,UAAU,KAAK,GAAG,OAAO,CAAC,IAAI;AAC9B,cAAc,iBAAiB;AAC/B,cAAc,sBAAsB,CAAC;AACrC;AACA,UAAU,IAAI,MAAM,CAAC,GAAG,KAAK,gBAAgB,EAAE;AAC/C,YAAY,SAAS;AACrB,WAAW;AACX;AACA,UAAU,OAAO;AACjB,YAAY,KAAK,EAAE,MAAM,CAAC,GAAG;AAC7B,YAAY,IAAI,EAAE,OAAO,CAAC,IAAI;AAC9B,WAAW,CAAC;AACZ;AACA,SAAS,MAAM,IAAI,MAAM,CAAC,IAAI,KAAK,OAAO,EAAE;AAC5C,UAAU,KAAK,GAAG,iBAAiB,CAAC;AACpC;AACA;AACA,UAAU,OAAO,CAAC,MAAM,GAAG,OAAO,CAAC;AACnC,UAAU,OAAO,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC;AACnC,SAAS;AACT,OAAO;AACP,KAAK,CAAC;AACN,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,EAAE,SAAS,mBAAmB,CAAC,QAAQ,EAAE,OAAO,EAAE;AAClD,IAAI,IAAI,MAAM,GAAG,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;AACnD,IAAI,IAAI,MAAM,KAAKA,WAAS,EAAE;AAC9B;AACA;AACA,MAAM,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC;AAC9B;AACA,MAAM,IAAI,OAAO,CAAC,MAAM,KAAK,OAAO,EAAE;AACtC;AACA,QAAQ,IAAI,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE;AACzC;AACA;AACA,UAAU,OAAO,CAAC,MAAM,GAAG,QAAQ,CAAC;AACpC,UAAU,OAAO,CAAC,GAAG,GAAGA,WAAS,CAAC;AAClC,UAAU,mBAAmB,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;AACjD;AACA,UAAU,IAAI,OAAO,CAAC,MAAM,KAAK,OAAO,EAAE;AAC1C;AACA;AACA,YAAY,OAAO,gBAAgB,CAAC;AACpC,WAAW;AACX,SAAS;AACT;AACA,QAAQ,OAAO,CAAC,MAAM,GAAG,OAAO,CAAC;AACjC,QAAQ,OAAO,CAAC,GAAG,GAAG,IAAI,SAAS;AACnC,UAAU,gDAAgD,CAAC,CAAC;AAC5D,OAAO;AACP;AACA,MAAM,OAAO,gBAAgB,CAAC;AAC9B,KAAK;AACL;AACA,IAAI,IAAI,MAAM,GAAG,QAAQ,CAAC,MAAM,EAAE,QAAQ,CAAC,QAAQ,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC;AAClE;AACA,IAAI,IAAI,MAAM,CAAC,IAAI,KAAK,OAAO,EAAE;AACjC,MAAM,OAAO,CAAC,MAAM,GAAG,OAAO,CAAC;AAC/B,MAAM,OAAO,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC;AAC/B,MAAM,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC;AAC9B,MAAM,OAAO,gBAAgB,CAAC;AAC9B,KAAK;AACL;AACA,IAAI,IAAI,IAAI,GAAG,MAAM,CAAC,GAAG,CAAC;AAC1B;AACA,IAAI,IAAI,EAAE,IAAI,EAAE;AAChB,MAAM,OAAO,CAAC,MAAM,GAAG,OAAO,CAAC;AAC/B,MAAM,OAAO,CAAC,GAAG,GAAG,IAAI,SAAS,CAAC,kCAAkC,CAAC,CAAC;AACtE,MAAM,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC;AAC9B,MAAM,OAAO,gBAAgB,CAAC;AAC9B,KAAK;AACL;AACA,IAAI,IAAI,IAAI,CAAC,IAAI,EAAE;AACnB;AACA;AACA,MAAM,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC;AAChD;AACA;AACA,MAAM,OAAO,CAAC,IAAI,GAAG,QAAQ,CAAC,OAAO,CAAC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,IAAI,OAAO,CAAC,MAAM,KAAK,QAAQ,EAAE;AACvC,QAAQ,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC;AAChC,QAAQ,OAAO,CAAC,GAAG,GAAGA,WAAS,CAAC;AAChC,OAAO;AACP;AACA,KAAK,MAAM;AACX;AACA,MAAM,OAAO,IAAI,CAAC;AAClB,KAAK;AACL;AACA;AACA;AACA,IAAI,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC;AAC5B,IAAI,OAAO,gBAAgB,CAAC;AAC5B,GAAG;AACH;AACA;AACA;AACA,EAAE,qBAAqB,CAAC,EAAE,CAAC,CAAC;AAC5B;AACA,EAAE,MAAM,CAAC,EAAE,EAAE,iBAAiB,EAAE,WAAW,CAAC,CAAC;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,MAAM,CAAC,EAAE,EAAE,cAAc,EAAE,WAAW;AACxC,IAAI,OAAO,IAAI,CAAC;AAChB,GAAG,CAAC,CAAC;AACL;AACA,EAAE,MAAM,CAAC,EAAE,EAAE,UAAU,EAAE,WAAW;AACpC,IAAI,OAAO,oBAAoB,CAAC;AAChC,GAAG,CAAC,CAAC;AACL;AACA,EAAE,SAAS,YAAY,CAAC,IAAI,EAAE;AAC9B,IAAI,IAAI,KAAK,GAAG,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;AACpC;AACA,IAAI,IAAI,CAAC,IAAI,IAAI,EAAE;AACnB,MAAM,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/B,KAAK;AACL;AACA,IAAI,IAAI,CAAC,IAAI,IAAI,EAAE;AACnB,MAAM,KAAK,CAAC,UAAU,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;AACjC,MAAM,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/B,KAAK;AACL;AACA,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAChC,GAAG;AACH;AACA,EAAE,SAAS,aAAa,CAAC,KAAK,EAAE;AAChC,IAAI,IAAI,MAAM,GAAG,KAAK,CAAC,UAAU,IAAI,EAAE,CAAC;AACxC,IAAI,MAAM,CAAC,IAAI,GAAG,QAAQ,CAAC;AAC3B,IAAI,OAAO,MAAM,CAAC,GAAG,CAAC;AACtB,IAAI,KAAK,CAAC,UAAU,GAAG,MAAM,CAAC;AAC9B,GAAG;AACH;AACA,EAAE,SAAS,OAAO,CAAC,WAAW,EAAE;AAChC;AACA;AACA;AACA,IAAI,IAAI,CAAC,UAAU,GAAG,CAAC,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC;AAC3C,IAAI,WAAW,CAAC,OAAO,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;AAC5C,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;AACrB,GAAG;AACH;AACA,EAAE,OAAO,CAAC,IAAI,GAAG,SAAS,MAAM,EAAE;AAClC,IAAI,IAAI,IAAI,GAAG,EAAE,CAAC;AAClB,IAAI,KAAK,IAAI,GAAG,IAAI,MAAM,EAAE;AAC5B,MAAM,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACrB,KAAK;AACL,IAAI,IAAI,CAAC,OAAO,EAAE,CAAC;AACnB;AACA;AACA;AACA,IAAI,OAAO,SAAS,IAAI,GAAG;AAC3B,MAAM,OAAO,IAAI,CAAC,MAAM,EAAE;AAC1B,QAAQ,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAC7B,QAAQ,IAAI,GAAG,IAAI,MAAM,EAAE;AAC3B,UAAU,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC;AAC3B,UAAU,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;AAC5B,UAAU,OAAO,IAAI,CAAC;AACtB,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA,MAAM,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACvB,MAAM,OAAO,IAAI,CAAC;AAClB,KAAK,CAAC;AACN,GAAG,CAAC;AACJ;AACA,EAAE,SAAS,MAAM,CAAC,QAAQ,EAAE;AAC5B,IAAI,IAAI,QAAQ,EAAE;AAClB,MAAM,IAAI,cAAc,GAAG,QAAQ,CAAC,cAAc,CAAC,CAAC;AACpD,MAAM,IAAI,cAAc,EAAE;AAC1B,QAAQ,OAAO,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AAC7C,OAAO;AACP;AACA,MAAM,IAAI,OAAO,QAAQ,CAAC,IAAI,KAAK,UAAU,EAAE;AAC/C,QAAQ,OAAO,QAAQ,CAAC;AACxB,OAAO;AACP;AACA,MAAM,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;AACnC,QAAQ,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,GAAG,SAAS,IAAI,GAAG;AAC3C,UAAU,OAAO,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE;AACxC,YAAY,IAAI,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,EAAE;AAC1C,cAAc,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;AACvC,cAAc,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;AAChC,cAAc,OAAO,IAAI,CAAC;AAC1B,aAAa;AACb,WAAW;AACX;AACA,UAAU,IAAI,CAAC,KAAK,GAAGA,WAAS,CAAC;AACjC,UAAU,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AAC3B;AACA,UAAU,OAAO,IAAI,CAAC;AACtB,SAAS,CAAC;AACV;AACA,QAAQ,OAAO,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AAChC,OAAO;AACP,KAAK;AACL;AACA;AACA,IAAI,OAAO,EAAE,IAAI,EAAE,UAAU,EAAE,CAAC;AAChC,GAAG;AACH,EAAE,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC;AAC1B;AACA,EAAE,SAAS,UAAU,GAAG;AACxB,IAAI,OAAO,EAAE,KAAK,EAAEA,WAAS,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;AAC5C,GAAG;AACH;AACA,EAAE,OAAO,CAAC,SAAS,GAAG;AACtB,IAAI,WAAW,EAAE,OAAO;AACxB;AACA,IAAI,KAAK,EAAE,SAAS,aAAa,EAAE;AACnC,MAAM,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;AACpB,MAAM,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;AACpB;AACA;AACA,MAAM,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,GAAGA,WAAS,CAAC;AACzC,MAAM,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;AACxB,MAAM,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;AAC3B;AACA,MAAM,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AAC3B,MAAM,IAAI,CAAC,GAAG,GAAGA,WAAS,CAAC;AAC3B;AACA,MAAM,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;AAC7C;AACA,MAAM,IAAI,CAAC,aAAa,EAAE;AAC1B,QAAQ,KAAK,IAAI,IAAI,IAAI,IAAI,EAAE;AAC/B;AACA,UAAU,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG;AACpC,cAAc,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC;AACrC,cAAc,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE;AACtC,YAAY,IAAI,CAAC,IAAI,CAAC,GAAGA,WAAS,CAAC;AACnC,WAAW;AACX,SAAS;AACT,OAAO;AACP,KAAK;AACL;AACA,IAAI,IAAI,EAAE,WAAW;AACrB,MAAM,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACvB;AACA,MAAM,IAAI,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;AACzC,MAAM,IAAI,UAAU,GAAG,SAAS,CAAC,UAAU,CAAC;AAC5C,MAAM,IAAI,UAAU,CAAC,IAAI,KAAK,OAAO,EAAE;AACvC,QAAQ,MAAM,UAAU,CAAC,GAAG,CAAC;AAC7B,OAAO;AACP;AACA,MAAM,OAAO,IAAI,CAAC,IAAI,CAAC;AACvB,KAAK;AACL;AACA,IAAI,iBAAiB,EAAE,SAAS,SAAS,EAAE;AAC3C,MAAM,IAAI,IAAI,CAAC,IAAI,EAAE;AACrB,QAAQ,MAAM,SAAS,CAAC;AACxB,OAAO;AACP;AACA,MAAM,IAAI,OAAO,GAAG,IAAI,CAAC;AACzB,MAAM,SAAS,MAAM,CAAC,GAAG,EAAE,MAAM,EAAE;AACnC,QAAQ,MAAM,CAAC,IAAI,GAAG,OAAO,CAAC;AAC9B,QAAQ,MAAM,CAAC,GAAG,GAAG,SAAS,CAAC;AAC/B,QAAQ,OAAO,CAAC,IAAI,GAAG,GAAG,CAAC;AAC3B;AACA,QAAQ,IAAI,MAAM,EAAE;AACpB;AACA;AACA,UAAU,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC;AAClC,UAAU,OAAO,CAAC,GAAG,GAAGA,WAAS,CAAC;AAClC,SAAS;AACT;AACA,QAAQ,OAAO,CAAC,EAAE,MAAM,CAAC;AACzB,OAAO;AACP;AACA,MAAM,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,EAAE;AAC5D,QAAQ,IAAI,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;AACvC,QAAQ,IAAI,MAAM,GAAG,KAAK,CAAC,UAAU,CAAC;AACtC;AACA,QAAQ,IAAI,KAAK,CAAC,MAAM,KAAK,MAAM,EAAE;AACrC;AACA;AACA;AACA,UAAU,OAAO,MAAM,CAAC,KAAK,CAAC,CAAC;AAC/B,SAAS;AACT;AACA,QAAQ,IAAI,KAAK,CAAC,MAAM,IAAI,IAAI,CAAC,IAAI,EAAE;AACvC,UAAU,IAAI,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,UAAU,CAAC,CAAC;AACxD,UAAU,IAAI,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,YAAY,CAAC,CAAC;AAC5D;AACA,UAAU,IAAI,QAAQ,IAAI,UAAU,EAAE;AACtC,YAAY,IAAI,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,QAAQ,EAAE;AAC5C,cAAc,OAAO,MAAM,CAAC,KAAK,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;AAClD,aAAa,MAAM,IAAI,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,UAAU,EAAE;AACrD,cAAc,OAAO,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;AAC9C,aAAa;AACb;AACA,WAAW,MAAM,IAAI,QAAQ,EAAE;AAC/B,YAAY,IAAI,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,QAAQ,EAAE;AAC5C,cAAc,OAAO,MAAM,CAAC,KAAK,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;AAClD,aAAa;AACb;AACA,WAAW,MAAM,IAAI,UAAU,EAAE;AACjC,YAAY,IAAI,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,UAAU,EAAE;AAC9C,cAAc,OAAO,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;AAC9C,aAAa;AACb;AACA,WAAW,MAAM;AACjB,YAAY,MAAM,IAAI,KAAK,CAAC,wCAAwC,CAAC,CAAC;AACtE,WAAW;AACX,SAAS;AACT,OAAO;AACP,KAAK;AACL;AACA,IAAI,MAAM,EAAE,SAAS,IAAI,EAAE,GAAG,EAAE;AAChC,MAAM,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,EAAE;AAC5D,QAAQ,IAAI,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;AACvC,QAAQ,IAAI,KAAK,CAAC,MAAM,IAAI,IAAI,CAAC,IAAI;AACrC,YAAY,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,YAAY,CAAC;AAC5C,YAAY,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,UAAU,EAAE;AAC1C,UAAU,IAAI,YAAY,GAAG,KAAK,CAAC;AACnC,UAAU,MAAM;AAChB,SAAS;AACT,OAAO;AACP;AACA,MAAM,IAAI,YAAY;AACtB,WAAW,IAAI,KAAK,OAAO;AAC3B,WAAW,IAAI,KAAK,UAAU,CAAC;AAC/B,UAAU,YAAY,CAAC,MAAM,IAAI,GAAG;AACpC,UAAU,GAAG,IAAI,YAAY,CAAC,UAAU,EAAE;AAC1C;AACA;AACA,QAAQ,YAAY,GAAG,IAAI,CAAC;AAC5B,OAAO;AACP;AACA,MAAM,IAAI,MAAM,GAAG,YAAY,GAAG,YAAY,CAAC,UAAU,GAAG,EAAE,CAAC;AAC/D,MAAM,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC;AACzB,MAAM,MAAM,CAAC,GAAG,GAAG,GAAG,CAAC;AACvB;AACA,MAAM,IAAI,YAAY,EAAE;AACxB,QAAQ,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AAC7B,QAAQ,IAAI,CAAC,IAAI,GAAG,YAAY,CAAC,UAAU,CAAC;AAC5C,QAAQ,OAAO,gBAAgB,CAAC;AAChC,OAAO;AACP;AACA,MAAM,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;AACnC,KAAK;AACL;AACA,IAAI,QAAQ,EAAE,SAAS,MAAM,EAAE,QAAQ,EAAE;AACzC,MAAM,IAAI,MAAM,CAAC,IAAI,KAAK,OAAO,EAAE;AACnC,QAAQ,MAAM,MAAM,CAAC,GAAG,CAAC;AACzB,OAAO;AACP;AACA,MAAM,IAAI,MAAM,CAAC,IAAI,KAAK,OAAO;AACjC,UAAU,MAAM,CAAC,IAAI,KAAK,UAAU,EAAE;AACtC,QAAQ,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,GAAG,CAAC;AAC/B,OAAO,MAAM,IAAI,MAAM,CAAC,IAAI,KAAK,QAAQ,EAAE;AAC3C,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC;AAC1C,QAAQ,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC;AAC/B,QAAQ,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;AAC1B,OAAO,MAAM,IAAI,MAAM,CAAC,IAAI,KAAK,QAAQ,IAAI,QAAQ,EAAE;AACvD,QAAQ,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC;AAC7B,OAAO;AACP;AACA,MAAM,OAAO,gBAAgB,CAAC;AAC9B,KAAK;AACL;AACA,IAAI,MAAM,EAAE,SAAS,UAAU,EAAE;AACjC,MAAM,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,EAAE;AAC5D,QAAQ,IAAI,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;AACvC,QAAQ,IAAI,KAAK,CAAC,UAAU,KAAK,UAAU,EAAE;AAC7C,UAAU,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,UAAU,EAAE,KAAK,CAAC,QAAQ,CAAC,CAAC;AAC1D,UAAU,aAAa,CAAC,KAAK,CAAC,CAAC;AAC/B,UAAU,OAAO,gBAAgB,CAAC;AAClC,SAAS;AACT,OAAO;AACP,KAAK;AACL;AACA,IAAI,OAAO,EAAE,SAAS,MAAM,EAAE;AAC9B,MAAM,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,EAAE;AAC5D,QAAQ,IAAI,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;AACvC,QAAQ,IAAI,KAAK,CAAC,MAAM,KAAK,MAAM,EAAE;AACrC,UAAU,IAAI,MAAM,GAAG,KAAK,CAAC,UAAU,CAAC;AACxC,UAAU,IAAI,MAAM,CAAC,IAAI,KAAK,OAAO,EAAE;AACvC,YAAY,IAAI,MAAM,GAAG,MAAM,CAAC,GAAG,CAAC;AACpC,YAAY,aAAa,CAAC,KAAK,CAAC,CAAC;AACjC,WAAW;AACX,UAAU,OAAO,MAAM,CAAC;AACxB,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA,MAAM,MAAM,IAAI,KAAK,CAAC,uBAAuB,CAAC,CAAC;AAC/C,KAAK;AACL;AACA,IAAI,aAAa,EAAE,SAAS,QAAQ,EAAE,UAAU,EAAE,OAAO,EAAE;AAC3D,MAAM,IAAI,CAAC,QAAQ,GAAG;AACtB,QAAQ,QAAQ,EAAE,MAAM,CAAC,QAAQ,CAAC;AAClC,QAAQ,UAAU,EAAE,UAAU;AAC9B,QAAQ,OAAO,EAAE,OAAO;AACxB,OAAO,CAAC;AACR;AACA,MAAM,IAAI,IAAI,CAAC,MAAM,KAAK,MAAM,EAAE;AAClC;AACA;AACA,QAAQ,IAAI,CAAC,GAAG,GAAGA,WAAS,CAAC;AAC7B,OAAO;AACP;AACA,MAAM,OAAO,gBAAgB,CAAC;AAC9B,KAAK;AACL,GAAG,CAAC;AACJ;AACA;AACA;AACA;AACA;AACA,EAAE,OAAO,OAAO,CAAC;AACjB;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,GAA+B,MAAM,CAAC,OAAO,CAAK;AAClD,CAAC,CAAC,CAAC;AACH;AACA,IAAI;AACJ,EAAE,kBAAkB,GAAG,OAAO,CAAC;AAC/B,CAAC,CAAC,OAAO,oBAAoB,EAAE;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,IAAI,OAAO,UAAU,KAAK,QAAQ,EAAE;AACtC,IAAI,UAAU,CAAC,kBAAkB,GAAG,OAAO,CAAC;AAC5C,GAAG,MAAM;AACT,IAAI,QAAQ,CAAC,GAAG,EAAE,wBAAwB,CAAC,CAAC,OAAO,CAAC,CAAC;AACrD,GAAG;AACH;;;AC5uBAC,OAAO,CAACC,MAAR,CAAe;AACbC,EAAAA,SAAS,EAAE,EADE;AAEbC,EAAAA,QAAQ,EAAEH,OAAO,CAACI,UAFL;AAGbC,EAAAA,QAAQ,EAAE,CAAC,EAHE;AAIbC,EAAAA,QAAQ,EAAE;AAJG,CAAf;AAOA,IAAMC,GAAG,gBAAG,IAAIP,OAAJ,CAAY,EAAZ,CAAZ;AACA,IAAMQ,GAAG,gBAAG,IAAIR,OAAJ,CAAY,CAAZ,EAAeS,GAAf,CAAmB,EAAnB,CAAZ;AACA,IAAMC,SAAS,gBAAGF,GAAG,CAACG,GAAJ,CAAQ,CAAR,EAAWC,GAAX,CAAe,CAAf,CAAlB;AACA,IAAMC,SAAS,gBAAGL,GAAG,CAACG,GAAJ,CAAQ,CAAR,EAAWG,GAAX,EAAlB;AACA,IAAMC,UAAU,gBAAGP,GAAG,CAACI,GAAJ,CAAQ,CAAR,CAAnB;AACA,IAAMI,UAAU,gBAAGR,GAAG,CAACC,GAAJ,CAAQ,EAAR,EAAYG,GAAZ,CAAgB,CAAhB,CAAnB;AACA,IAAMK,UAAU,gBAAGD,UAAU,CAACF,GAAX,EAAnB;AACA,IAAMI,WAAW,gBAAGV,GAAG,CAACC,GAAJ,CAAQ,EAAR,EAAYG,GAAZ,CAAgB,CAAhB,CAApB;AACA,IAAMO,aAAa,GAAG,EAAtB;AAEA,IAAaC,UAAb;AAAA;;AACE;;;;;;AADF,aAOSC,YAPT,GAOE,sBAAoBC,MAApB,EAAoCpB,SAApC;QAAoCA;AAAAA,MAAAA,YAAoB;;;AACtD,MAAUoB,MAAM,CAACC,MAAP,KAAkB,CAA5B,4CAAAC,SAAS,oCAAgDF,MAAM,CAACC,MAAvD,CAAT,GAAAC,SAAS,OAAT;AACA,MACEC,IAAI,CAACC,GAAL,CAASxB,SAAT,IAAsBiB,aADxB,4CAAAK,SAAS,gCAEetB,SAFf,CAAT,GAAAsB,SAAS,OAAT;;AAKA,QAAIF,MAAM,CAAC,CAAD,CAAN,IAAa,IAAjB,EAAuB;AACrB,UAAIK,EAAE,GAAG,EAAT;;AACA,2DAAcL,MAAd,wCAAsB;AAAA,YAAbM,CAAa;AACpBD,QAAAA,EAAE,CAACE,IAAH,CAAQ,QAAKJ,IAAI,CAACC,GAAL,CAAS,CAACE,CAAD,GAAK,IAAd,EAAoBE,QAApB,CAA6B,EAA7B,CAAL,EAAwCC,KAAxC,CAA8C,CAAC,CAA/C,CAAR;AACD;;AACD,UAAIC,EAAE,GAAG,IAAIC,EAAJ,CAAON,EAAE,CAACO,IAAH,CAAQ,EAAR,CAAP,EAAoB,EAApB,EAAwB,IAAxB,EAA8BC,GAA9B,CAAkC,IAAIF,EAAJ,CAAO,CAAP,CAAlC,EAA6CnB,GAA7C,EAAT;AACA,aAAO,IAAId,OAAJ,CAAYgC,EAAE,CAACF,QAAH,EAAZ,EAA2BnB,GAA3B,CAA+BJ,GAAG,CAACE,GAAJ,CAAQP,SAAR,CAA/B,CAAP;AACD;;AACD,WAAO,IAAIF,OAAJ,CAAY,IAAIiC,EAAJ,CAAOX,MAAP,EAAe,IAAf,EAAqBQ,QAArB,EAAZ,EAA6CnB,GAA7C,CAAiDJ,GAAG,CAACE,GAAJ,CAAQP,SAAR,CAAjD,CAAP;AACD;AAED;;;;;;AAzBF;;AAAA,aA+BSkC,aA/BT,GA+BE,uBAAqBd,MAArB,EAAqCpB,SAArC;QAAqCA;AAAAA,MAAAA,YAAoB;;;AACvD,MAAUoB,MAAM,CAACC,MAAP,KAAkB,CAA5B,4CAAAC,SAAS,oCAAgDF,MAAM,CAACC,MAAvD,CAAT,GAAAC,SAAS,OAAT;AACA,MACEC,IAAI,CAACC,GAAL,CAASxB,SAAT,IAAsBiB,aADxB,4CAAAK,SAAS,gCAEetB,SAFf,CAAT,GAAAsB,SAAS,OAAT;AAIA,WAAO,IAAIxB,OAAJ,CAAY,IAAIiC,EAAJ,CAAOX,MAAP,EAAe,EAAf,EAAmB,IAAnB,EAAyBQ,QAAzB,EAAZ,EAAiDnB,GAAjD,CACLJ,GAAG,CAACE,GAAJ,CAAQP,SAAR,CADK,CAAP;AAGD;AAED;;;;;;AA1CF;;AAAA,aAgDSmC,aAhDT,GAgDE,uBAAqBf,MAArB,EAAqCpB,SAArC;QAAqCA;AAAAA,MAAAA,YAAoB;;;AACvD,MAAUoB,MAAM,CAACC,MAAP,KAAkB,EAA5B,4CAAAC,SAAS,oCAAiDF,MAAM,CAACC,MAAxD,CAAT,GAAAC,SAAS,OAAT;AACA,MACEC,IAAI,CAACC,GAAL,CAASxB,SAAT,IAAsBiB,aADxB,4CAAAK,SAAS,gCAEetB,SAFf,CAAT,GAAAsB,SAAS,OAAT;;AAKA,QAAIF,MAAM,CAAC,EAAD,CAAN,IAAc,IAAlB,EAAwB;AACtB,UAAIK,EAAE,GAAG,EAAT;;AACA,4DAAcL,MAAd,2CAAsB;AAAA,YAAbM,CAAa;AACpBD,QAAAA,EAAE,CAACE,IAAH,CAAQ,QAAKJ,IAAI,CAACC,GAAL,CAAS,CAACE,CAAD,GAAK,IAAd,EAAoBE,QAApB,CAA6B,EAA7B,CAAL,EAAwCC,KAAxC,CAA8C,CAAC,CAA/C,CAAR;AACD;;AACD,UAAIC,EAAE,GAAG,IAAIC,EAAJ,CAAON,EAAE,CAACO,IAAH,CAAQ,EAAR,CAAP,EAAoB,EAApB,EAAwB,IAAxB,EAA8BC,GAA9B,CAAkC,IAAIF,EAAJ,CAAO,CAAP,CAAlC,EAA6CnB,GAA7C,EAAT;AACA,aAAO,IAAId,OAAJ,CAAYgC,EAAE,CAACF,QAAH,EAAZ,EAA2BnB,GAA3B,CAA+BJ,GAAG,CAACE,GAAJ,CAAQP,SAAR,CAA/B,CAAP;AACD;;AACD,WAAO,IAAIF,OAAJ,CAAY,IAAIiC,EAAJ,CAAOX,MAAP,EAAe,IAAf,EAAqBQ,QAArB,EAAZ,EAA6CnB,GAA7C,CAAiDJ,GAAG,CAACE,GAAJ,CAAQP,SAAR,CAAjD,CAAP;AACD;AAED;;;;;;AAlEF;;AAAA,aAwESoC,cAxET,GAwEE,wBAAsBhB,MAAtB,EAAsCpB,SAAtC;QAAsCA;AAAAA,MAAAA,YAAoB;;;AACxD,MAAUoB,MAAM,CAACC,MAAP,KAAkB,EAA5B,4CAAAC,SAAS,oCAAiDF,MAAM,CAACC,MAAxD,CAAT,GAAAC,SAAS,OAAT;AACA,MACEC,IAAI,CAACC,GAAL,CAASxB,SAAT,IAAsBiB,aADxB,4CAAAK,SAAS,gCAEetB,SAFf,CAAT,GAAAsB,SAAS,OAAT;AAIA,WAAO,IAAIxB,OAAJ,CAAY,IAAIiC,EAAJ,CAAOX,MAAP,EAAe,IAAf,EAAqBQ,QAArB,EAAZ,EAA6CnB,GAA7C,CAAiDJ,GAAG,CAACE,GAAJ,CAAQP,SAAR,CAAjD,CAAP;AACD;AAED;;;;;;AAjFF;;AAAA,aAuFSqC,UAvFT,GAuFE,oBAAkBX,CAAlB,EAA8B1B,SAA9B;QAA8BA;AAAAA,MAAAA,YAAoB;;;AAChD,MACEuB,IAAI,CAACC,GAAL,CAASxB,SAAT,IAAsBiB,aADxB,4CAAAK,SAAS,gCAEetB,SAFf,CAAT,GAAAsB,SAAS,OAAT;AAIAI,IAAAA,CAAC,GAAGA,CAAC,CAACY,GAAF,CAAMjC,GAAG,CAACE,GAAJ,CAAQP,SAAR,CAAN,EAA0BuC,KAA1B,EAAJ;AACA,MACEb,CAAC,CAACc,oBAAF,CAAuB7B,SAAvB,KAAqCe,CAAC,CAACe,iBAAF,CAAoBjC,SAApB,CADvC,4CAAAc,SAAS,wBAEOI,CAAC,CAACE,QAAF,EAFP,0CAEwD5B,SAFxD,CAAT,GAAAsB,SAAS,OAAT;AAIA,QAAIQ,EAAE,GAAG,IAAIC,EAAJ,CAAOL,CAAC,CAACE,QAAF,EAAP,CAAT;;AACA,QAAIE,EAAE,CAACY,KAAH,EAAJ,EAAgB;AACd,UAAItB,MAAM,GAAGU,EAAE,CAACG,GAAH,CAAO,IAAIF,EAAJ,CAAO,CAAP,CAAP,EAAkBY,QAAlB,CAA2B,IAA3B,EAAiC,CAAjC,CAAb;AACAvB,MAAAA,MAAM,CAACwB,OAAP,CAAe,UAASC,IAAT,EAAeC,KAAf,EAAsBC,KAAtB;AACbA,QAAAA,KAAK,CAACD,KAAD,CAAL,GAAe,CAACD,IAAD,GAAQ,IAAvB;AACD,OAFD;AAGA,aAAOzB,MAAP;AACD,KAND,MAMO;AACL,aAAOU,EAAE,CAACa,QAAH,CAAY,IAAZ,EAAkB,CAAlB,CAAP;AACD;AACF;AAED;;;;;;AA7GF;;AAAA,aAmHSK,WAnHT,GAmHE,qBAAmBtB,CAAnB,EAA+B1B,SAA/B;QAA+BA;AAAAA,MAAAA,YAAoB;;;AACjD,MACEuB,IAAI,CAACC,GAAL,CAASxB,SAAT,IAAsBiB,aADxB,4CAAAK,SAAS,gCAEetB,SAFf,CAAT,GAAAsB,SAAS,OAAT;AAIAI,IAAAA,CAAC,GAAGA,CAAC,CAACY,GAAF,CAAMjC,GAAG,CAACE,GAAJ,CAAQP,SAAR,CAAN,EAA0BuC,KAA1B,EAAJ;AACA,MACEb,CAAC,CAACc,oBAAF,CAAuB,CAAvB,KAA6Bd,CAAC,CAACe,iBAAF,CAAoB5B,UAApB,CAD/B,4CAAAS,SAAS,wBAEOI,CAAC,CAACE,QAAF,EAFP,0CAEwD5B,SAFxD,CAAT,GAAAsB,SAAS,OAAT;AAIA,WAAO,IAAIS,EAAJ,CAAOL,CAAC,CAACE,QAAF,EAAP,EAAqBe,QAArB,CAA8B,IAA9B,EAAoC,CAApC,CAAP;AACD;AAED;;;;;;AAhIF;;AAAA,aAsISM,WAtIT,GAsIE,qBAAmBvB,CAAnB,EAA+B1B,SAA/B;QAA+BA;AAAAA,MAAAA,YAAoB;;;AACjD,MACEuB,IAAI,CAACC,GAAL,CAASxB,SAAT,IAAsBiB,aADxB,4CAAAK,SAAS,gCAEetB,SAFf,CAAT,GAAAsB,SAAS,OAAT;AAIAI,IAAAA,CAAC,GAAGA,CAAC,CAACY,GAAF,CAAMjC,GAAG,CAACE,GAAJ,CAAQP,SAAR,CAAN,EAA0BuC,KAA1B,EAAJ;AACA,MACEb,CAAC,CAACc,oBAAF,CAAuBzB,UAAvB,KAAsCW,CAAC,CAACe,iBAAF,CAAoB3B,UAApB,CADxC,4CAAAQ,SAAS,wBAEOI,CAAC,CAACE,QAAF,EAFP,0CAEwD5B,SAFxD,CAAT,GAAAsB,SAAS,OAAT;AAIA,QAAIQ,EAAE,GAAG,IAAIC,EAAJ,CAAOL,CAAC,CAACE,QAAF,EAAP,CAAT;;AACA,QAAIE,EAAE,CAACY,KAAH,EAAJ,EAAgB;AACd,UAAItB,MAAM,GAAGU,EAAE,CAACG,GAAH,CAAO,IAAIF,EAAJ,CAAO,CAAP,CAAP,EAAkBY,QAAlB,CAA2B,IAA3B,EAAiC,EAAjC,CAAb;AACAvB,MAAAA,MAAM,CAACwB,OAAP,CAAe,UAASC,IAAT,EAAeC,KAAf,EAAsBC,KAAtB;AACbA,QAAAA,KAAK,CAACD,KAAD,CAAL,GAAe,CAACD,IAAD,GAAQ,IAAvB;AACD,OAFD;AAGA,aAAOzB,MAAP;AACD,KAND,MAMO;AACL,aAAOU,EAAE,CAACa,QAAH,CAAY,IAAZ,EAAkB,EAAlB,CAAP;AACD;AACF;AAED;;;;;;AA5JF;;AAAA,aAkKSO,YAlKT,GAkKE,sBAAoBxB,CAApB,EAAgC1B,SAAhC;QAAgCA;AAAAA,MAAAA,YAAoB;;;AAClD,MACEuB,IAAI,CAACC,GAAL,CAASxB,SAAT,IAAsBiB,aADxB,4CAAAK,SAAS,gCAEetB,SAFf,CAAT,GAAAsB,SAAS,OAAT;AAIAI,IAAAA,CAAC,GAAGA,CAAC,CAACY,GAAF,CAAMjC,GAAG,CAACE,GAAJ,CAAQP,SAAR,CAAN,EAA0BuC,KAA1B,EAAJ;AACA,MACEb,CAAC,CAACc,oBAAF,CAAuB,CAAvB,KAA6Bd,CAAC,CAACe,iBAAF,CAAoBzB,WAApB,CAD/B,4CAAAM,SAAS,wBAEOI,CAAC,CAACE,QAAF,EAFP,0CAEwD5B,SAFxD,CAAT,GAAAsB,SAAS,OAAT;AAIA,WAAO,IAAIS,EAAJ,CAAOL,CAAC,CAACE,QAAF,EAAP,EAAqBe,QAArB,CAA8B,IAA9B,EAAoC,EAApC,CAAP;AACD,GA7KH;;AAAA;AAAA;;ACAA;;AACA,IAAaQ,YAAY,GAAG,SAAfA,YAAe,CAAIC,MAAJ;AAC1B,MAAMC,MAAM,GAAGD,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBF,MAAnB,CAAf;AACA,MAAMG,MAAM,GAAGH,MAAM,CAACG,MAAP,CAAcD,IAAd,CAAmBF,MAAnB,CAAf;AACA,SAAO;AAAEC,IAAAA,MAAM,EAANA,MAAF;AAAUE,IAAAA,MAAM,EAANA;AAAV,GAAP;AACD,CAJM;AAMP,IAAaC,SAAS,GAAG,SAAZA,SAAY,CAACC,QAAD;MAACA;AAAAA,IAAAA,WAAW;;;AACnC,MAAML,MAAM,GAAGM,IAAI,CAAC,EAAD,EAAKD,QAAL,CAAnB;;AACA,sBAA2BN,YAAY,CAACC,MAAD,CAAvC;AAAA,MAAQG,MAAR,iBAAQA,MAAR;AAAA,MAAgBF,MAAhB,iBAAgBA,MAAhB;;AAEA,MAAMM,eAAe,GAAIP,MAAzB;;AAEAO,EAAAA,eAAe,CAACN,MAAhB,GAAyB,UAACjC,MAAD,EAAiBwC,MAAjB;AACvB,QAAMC,GAAG,GAAGR,MAAM,CAACjC,MAAD,EAASwC,MAAT,CAAlB;AACA,WAAO,IAAIE,SAAJ,CAAcD,GAAd,CAAP;AACD,GAHD;;AAKAF,EAAAA,eAAe,CAACJ,MAAhB,GAAyB,UACvBC,SADuB,EAEvBpC,MAFuB,EAGvBwC,MAHuB;AAKvB,QAAMC,GAAG,GAAGL,SAAS,CAACb,QAAV,EAAZ;AACA,WAAOY,MAAM,CAACM,GAAD,EAAMzC,MAAN,EAAcwC,MAAd,CAAb;AACD,GAPD;;AASA,SAAOD,eAAP;AACD,CArBM;AAuBP,IAAaI,MAAM,GAAG,SAATA,MAAS,CAACN,QAAD;MAACA;AAAAA,IAAAA,WAAmB;;;AACxC,SAAOC,IAAI,CAAC,CAAD,EAAID,QAAJ,CAAX;AACD,CAFM;AAIP,IAAaO,KAAK,GAAG,SAARA,KAAQ,CAACP,QAAD;MAACA;AAAAA,IAAAA,WAAmB;;;AACvC,SAAOC,IAAI,CAAC,CAAD,EAAID,QAAJ,CAAX;AACD,CAFM;AAIP,IAAaQ,MAAM,GAAG,SAATA,MAAS,CAACR,QAAD;MAACA;AAAAA,IAAAA,WAAmB;;;AACxC,SAAOC,IAAI,CAAC,EAAD,EAAKD,QAAL,CAAX;AACD,CAFM;AAIP,IAAaS,OAAO,GAAG,SAAVA,OAAU,CAACT,QAAD;MAACA;AAAAA,IAAAA,WAAmB;;;AACzC,SAAOC,IAAI,CAAC,EAAD,EAAKD,QAAL,CAAX;AACD,CAFM;AAIP,IAAaU,SAAS,GAAG,SAAZA,SAAY,CACvBV,QADuB,EAEvBzD,SAFuB;MACvByD;AAAAA,IAAAA,WAAmB;;;MACnBzD;AAAAA,IAAAA,YAAoB;;;AAEpB,MAAMoD,MAAM,GAAGM,IAAI,CAAC,CAAD,EAAID,QAAJ,CAAnB;;AAEA,MAAMW,eAAe,GAAIhB,MAAzB;;AAEA,MAAMiB,OAAO,GAAGjB,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBF,MAAnB,CAAhB;;AACA,MAAMkB,OAAO,GAAGlB,MAAM,CAACG,MAAP,CAAcD,IAAd,CAAmBF,MAAnB,CAAhB;;AAEAgB,EAAAA,eAAe,CAACf,MAAhB,GAAyB,UAACjC,MAAD,EAAiBwC,MAAjB;AACvB,QAAMC,GAAG,GAAGU,MAAM,CAACC,IAAP,CAAYH,OAAO,CAACjD,MAAD,EAASwC,MAAT,CAAnB,CAAZ;AACA,WAAO1C,UAAU,CAACC,YAAX,CAAwB0C,GAAxB,EAA6B7D,SAA7B,CAAP;AACD,GAHD;;AAKAoE,EAAAA,eAAe,CAACb,MAAhB,GAAyB,UACvBkB,OADuB,EAEvBrD,MAFuB,EAGvBwC,MAHuB;AAKvB,QAAMC,GAAG,GAAG3C,UAAU,CAACmB,UAAX,CAAsBoC,OAAtB,EAA+BzE,SAA/B,CAAZ;AACA,WAAOsE,OAAO,CAACT,GAAD,EAAMzC,MAAN,EAAcwC,MAAd,CAAd;AACD,GAPD;;AASA,SAAOQ,eAAP;AACD,CA1BM;AA4BP,IAAaM,UAAU,GAAG,SAAbA,UAAa,CACxBjB,QADwB,EAExBzD,SAFwB;MACxByD;AAAAA,IAAAA,WAAmB;;;MACnBzD;AAAAA,IAAAA,YAAoB;;;AAEpB,MAAMoD,MAAM,GAAGM,IAAI,CAAC,CAAD,EAAID,QAAJ,CAAnB;;AAEA,MAAMY,OAAO,GAAGjB,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBF,MAAnB,CAAhB;;AACA,MAAMkB,OAAO,GAAGlB,MAAM,CAACG,MAAP,CAAcD,IAAd,CAAmBF,MAAnB,CAAhB;;AACA,MAAMuB,gBAAgB,GAAIvB,MAA1B;;AAEAuB,EAAAA,gBAAgB,CAACtB,MAAjB,GAA0B,UAACjC,MAAD,EAAiBwC,MAAjB;AACxB,QAAMC,GAAG,GAAGU,MAAM,CAACC,IAAP,CAAYH,OAAO,CAACjD,MAAD,EAASwC,MAAT,CAAnB,CAAZ;AACA,WAAO1C,UAAU,CAACgB,aAAX,CAAyB2B,GAAzB,EAA8B7D,SAA9B,CAAP;AACD,GAHD;;AAKA2E,EAAAA,gBAAgB,CAACpB,MAAjB,GAA0B,UACxBkB,OADwB,EAExBrD,MAFwB,EAGxBwC,MAHwB;AAKxB,QAAMC,GAAG,GAAG3C,UAAU,CAAC8B,WAAX,CAAuByB,OAAvB,EAAgCzE,SAAhC,CAAZ;AACA,WAAOsE,OAAO,CAACT,GAAD,EAAMzC,MAAN,EAAcwC,MAAd,CAAd;AACD,GAPD;;AASA,SAAOe,gBAAP;AACD,CAzBM;AA2BP,IAAaC,UAAU,GAAG,SAAbA,UAAa,CACxBnB,QADwB,EAExBzD,SAFwB;MACxByD;AAAAA,IAAAA,WAAmB;;;MACnBzD;AAAAA,IAAAA,YAAoB;;;AAEpB,MAAMoD,MAAM,GAAGM,IAAI,CAAC,EAAD,EAAKD,QAAL,CAAnB;;AAEA,MAAMY,OAAO,GAAGjB,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBF,MAAnB,CAAhB;;AACA,MAAMkB,OAAO,GAAGlB,MAAM,CAACG,MAAP,CAAcD,IAAd,CAAmBF,MAAnB,CAAhB;;AACA,MAAMyB,gBAAgB,GAAIzB,MAA1B;;AAEAyB,EAAAA,gBAAgB,CAACxB,MAAjB,GAA0B,UAACjC,MAAD,EAAiBwC,MAAjB;AACxB,QAAMC,GAAG,GAAGU,MAAM,CAACC,IAAP,CAAYH,OAAO,CAACjD,MAAD,EAASwC,MAAT,CAAnB,CAAZ;AACA,WAAO1C,UAAU,CAACiB,aAAX,CAAyB0B,GAAzB,EAA8B7D,SAA9B,CAAP;AACD,GAHD;;AAKA6E,EAAAA,gBAAgB,CAACtB,MAAjB,GAA0B,UACxBkB,OADwB,EAExBrD,MAFwB,EAGxBwC,MAHwB;AAKxB,QAAMC,GAAG,GAAG3C,UAAU,CAAC+B,WAAX,CAAuBwB,OAAvB,EAAgCzE,SAAhC,CAAZ;AACA,WAAOsE,OAAO,CAACT,GAAD,EAAMzC,MAAN,EAAcwC,MAAd,CAAd;AACD,GAPD;;AASA,SAAOiB,gBAAP;AACD,CAzBM;AA2BP,IAAaC,WAAW,GAAG,SAAdA,WAAc,CACzBrB,QADyB,EAEzBzD,SAFyB;MACzByD;AAAAA,IAAAA,WAAmB;;;MACnBzD;AAAAA,IAAAA,YAAoB;;;AAEpB,MAAMoD,MAAM,GAAGM,IAAI,CAAC,EAAD,EAAKD,QAAL,CAAnB;;AAEA,MAAMY,OAAO,GAAGjB,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBF,MAAnB,CAAhB;;AACA,MAAMkB,OAAO,GAAGlB,MAAM,CAACG,MAAP,CAAcD,IAAd,CAAmBF,MAAnB,CAAhB;;AACA,MAAM2B,iBAAiB,GAAI3B,MAA3B;;AAEA2B,EAAAA,iBAAiB,CAAC1B,MAAlB,GAA2B,UAACjC,MAAD,EAAiBwC,MAAjB;AACzB,QAAMC,GAAG,GAAGU,MAAM,CAACC,IAAP,CAAYH,OAAO,CAACjD,MAAD,EAASwC,MAAT,CAAnB,CAAZ;AACA,QAAIoB,GAAG,GAAG9D,UAAU,CAACkB,cAAX,CAA0ByB,GAA1B,EAA+B7D,SAA/B,CAAV;AACA,WAAOgF,GAAP;AACD,GAJD;;AAMAD,EAAAA,iBAAiB,CAACxB,MAAlB,GAA2B,UACzBkB,OADyB,EAEzBrD,MAFyB,EAGzBwC,MAHyB;AAKzB,QAAMC,GAAG,GAAG3C,UAAU,CAACgC,YAAX,CAAwBuB,OAAxB,EAAiCzE,SAAjC,CAAZ;AACA,WAAOsE,OAAO,CAACT,GAAD,EAAMzC,MAAN,EAAcwC,MAAd,CAAd;AACD,GAPD;;AASA,SAAOmB,iBAAP;AACD,CA1BM;;AC9IP;;;;;;;;AAOA,SAAsBE,yBAAtB;AAAA;AAAA;;;8EAAO,iBACLC,IADK,EAELC,WAFK;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,sCAGFC,OAHE;AAGFA,cAAAA,OAHE;AAAA;;AAAA,6CAKEC,2BAA6B,CAACH,IAAD,EAAOC,WAAP,EAAoBC,OAApB,EAA6B;AAC/DE,cAAAA,aAAa,EAAE,KADgD;AAE/DC,cAAAA,UAAU,EAAE,QAFmD;AAG/DC,cAAAA,mBAAmB,EAAE;AAH0C,aAA7B,CAL/B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;ACCP;;;;;;;AAMA,SAAsBC,yBAAtB;AAAA;AAAA;AAaA;;;;;;;;;;8EAbO,iBACLC,SADK,EAELC,KAFK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAIQC,KAAK,CAACH,yBAAN,CACXI,2BADW,EAEXC,gBAFW,EAGXJ,SAHW,EAIXC,KAJW,EAKX,IALW,CAJR;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AAqBP,SAAgBI,wCACdL,WACAM,mBACAL,OACAM;AAEA,SAAOL,KAAK,CAACG,uCAAN,CACLF,2BADK,EAELC,gBAFK,EAGLJ,SAHK,EAILM,iBAJK,EAKLL,KALK,EAMLM,KANK,CAAP;AAQD;AAED;;;;;;;AAMA,SAAsBC,eAAtB;AAAA;AAAA;AAcA;;;;;;;;oEAdO,kBACLhB,IADK,EAELiB,OAFK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAIejB,IAAI,CAACkB,cAAL,CAAoBD,OAApB,CAJf;;AAAA;AAIDE,YAAAA,OAJC;AAKL,cACE,CAAAA,OAAO,QAAP,YAAAA,OAAO,CAAEC,IAAT,KAAiB,IADnB,4CAAAhF,SAAS,+BAEc6E,OAAO,CAACI,QAAR,EAFd,mBAAT,GAAAjF,SAAS,OAAT;AAIIkF,YAAAA,WATC,GASaC,iBAAiB,CAACJ,OAAD,CAT9B;AAULG,YAAAA,WAAW,CAACL,OAAZ,GAAsBA,OAAtB;AAVK,8CAWEK,WAXF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AAoBP,SAAsBE,gBAAtB;AAAA;AAAA;;;qEAAO,kBACLxB,IADK,EAELS,KAFK;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAIgBT,IAAI,CAACyB,uBAAL,CAA6BhB,KAA7B,EAAoC;AACvDiB,cAAAA,SAAS,EAAEd;AAD4C,aAApC,CAJhB;;AAAA;AAIDe,YAAAA,QAJC;AAOCC,YAAAA,YAPD,GAO+B,EAP/B;;AAQL,iBAASC,CAAT,GAAa,CAAb,EAAgBA,CAAC,GAAGF,QAAQ,CAACG,KAAT,CAAe3F,MAAnC,EAA2C0F,CAAC,EAA5C,EAAgD;AAAA,kCACpBF,QAAQ,CAACG,KAAT,CAAeD,CAAf,CADoB,EACxCE,MADwC,qBACxCA,MADwC,EAChCZ,OADgC,qBAChCA,OADgC;AAE9C,gBACE,CAAAA,OAAO,QAAP,YAAAA,OAAO,CAAEC,IAAT,KAAiB,IADnB,4CAAAhF,SAAS,+BAEc2F,MAAM,CAACV,QAAP,EAFd,mBAAT,GAAAjF,SAAS,OAAT;AAIIkF,cAAAA,WAN0C,GAM5BC,iBAAiB,CAACJ,OAAD,CANW;AAO9CG,cAAAA,WAAW,CAACL,OAAZ,GAAsBc,MAAtB;AACAH,cAAAA,YAAY,CAACnF,IAAb,CAAkB6E,WAAlB;AACD;;AAjBI,8CAkBEM,YAlBF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AAqBP,SAAgBI,sBAAsBZ;AACpC,MAAIE,WAAW,GAAGW,aAAa,CAAC9D,MAAd,CAAqBiD,IAArB,CAAlB;AACAE,EAAAA,WAAW,CAACY,IAAZ,GAAmB,IAAItD,SAAJ,CAAc0C,WAAW,CAACY,IAA1B,CAAnB;AACAZ,EAAAA,WAAW,CAACb,KAAZ,GAAoB,IAAI7B,SAAJ,CAAc0C,WAAW,CAACb,KAA1B,CAApB;AACAa,EAAAA,WAAW,CAACa,MAAZ,GAAqBC,GAAG,CAACC,UAAJ,CAAef,WAAW,CAACa,MAA3B,CAArB;;AAEA,MAAIb,WAAW,CAACgB,cAAZ,KAA+B,CAAnC,EAAsC;AACpChB,IAAAA,WAAW,CAACiB,QAAZ,GAAuB,IAAvB;AACAjB,IAAAA,WAAW,CAACkB,eAAZ,GAA8B,IAAIJ,GAAJ,CAAQ,CAAR,CAA9B;AACD,GAHD,MAGO;AACLd,IAAAA,WAAW,CAACiB,QAAZ,GAAuB,IAAI3D,SAAJ,CAAc0C,WAAW,CAACiB,QAA1B,CAAvB;AACAjB,IAAAA,WAAW,CAACkB,eAAZ,GAA8BJ,GAAG,CAACC,UAAJ,CAAef,WAAW,CAACkB,eAA3B,CAA9B;AACD;;AAEDlB,EAAAA,WAAW,CAACmB,aAAZ,GAA4BnB,WAAW,CAACoB,KAAZ,KAAsB,CAAlD;AACApB,EAAAA,WAAW,CAACqB,QAAZ,GAAuBrB,WAAW,CAACoB,KAAZ,KAAsB,CAA7C;;AAEA,MAAIpB,WAAW,CAACsB,cAAZ,KAA+B,CAAnC,EAAsC;AACpCtB,IAAAA,WAAW,CAACuB,iBAAZ,GAAgCT,GAAG,CAACC,UAAJ,CAAef,WAAW,CAACwB,QAA3B,CAAhC;AACAxB,IAAAA,WAAW,CAACwB,QAAZ,GAAuB,IAAvB;AACD,GAHD,MAGO;AACLxB,IAAAA,WAAW,CAACuB,iBAAZ,GAAgC,IAAhC;AACAvB,IAAAA,WAAW,CAACwB,QAAZ,GAAuB,KAAvB;AACD;;AAED,MAAIxB,WAAW,CAACyB,oBAAZ,KAAqC,CAAzC,EAA4C;AAC1CzB,IAAAA,WAAW,CAAC0B,cAAZ,GAA6B,IAA7B;AACD,GAFD,MAEO;AACL1B,IAAAA,WAAW,CAAC0B,cAAZ,GAA6B,IAAIpE,SAAJ,CAAc0C,WAAW,CAAC0B,cAA1B,CAA7B;AACD;;AAED,SAAO1B,WAAP;AACD;AAED,SAAgBC,kBACdJ;AAEA,IAAU,CAAAA,OAAO,QAAP,YAAAA,OAAO,CAAEC,IAAT,KAAiB,IAA3B,4CAAAhF,SAAS,mCAAT,GAAAA,SAAS,OAAT;AACA,MAAIkF,WAAW,GAAGW,aAAa,CAAC9D,MAAd,CAAqBgD,OAArB,oBAAqBA,OAAO,CAAEC,IAA9B,CAAlB;AACAE,EAAAA,WAAW,CAACY,IAAZ,GAAmB,IAAItD,SAAJ,CAAc0C,WAAW,CAACY,IAA1B,CAAnB;AACAZ,EAAAA,WAAW,CAACb,KAAZ,GAAoB,IAAI7B,SAAJ,CAAc0C,WAAW,CAACb,KAA1B,CAApB;AACAa,EAAAA,WAAW,CAACa,MAAZ,GAAqBC,GAAG,CAACC,UAAJ,CAAef,WAAW,CAACa,MAA3B,CAArB;;AAEA,MAAIb,WAAW,CAACgB,cAAZ,KAA+B,CAAnC,EAAsC;AACpChB,IAAAA,WAAW,CAACiB,QAAZ,GAAuB,IAAvB;AACAjB,IAAAA,WAAW,CAACkB,eAAZ,GAA8B,IAAIJ,GAAJ,CAAQ,CAAR,CAA9B;AACD,GAHD,MAGO;AACLd,IAAAA,WAAW,CAACiB,QAAZ,GAAuB,IAAI3D,SAAJ,CAAc0C,WAAW,CAACiB,QAA1B,CAAvB;AACAjB,IAAAA,WAAW,CAACkB,eAAZ,GAA8BJ,GAAG,CAACC,UAAJ,CAAef,WAAW,CAACkB,eAA3B,CAA9B;AACD;;AAEDlB,EAAAA,WAAW,CAACmB,aAAZ,GAA4BnB,WAAW,CAACoB,KAAZ,KAAsB,CAAlD;AACApB,EAAAA,WAAW,CAACqB,QAAZ,GAAuBrB,WAAW,CAACoB,KAAZ,KAAsB,CAA7C;;AAEA,MAAIpB,WAAW,CAACsB,cAAZ,KAA+B,CAAnC,EAAsC;AACpCtB,IAAAA,WAAW,CAACuB,iBAAZ,GAAgCT,GAAG,CAACC,UAAJ,CAAef,WAAW,CAACwB,QAA3B,CAAhC;AACAxB,IAAAA,WAAW,CAACwB,QAAZ,GAAuB,IAAvB;AACD,GAHD,MAGO;AACLxB,IAAAA,WAAW,CAACuB,iBAAZ,GAAgC,IAAhC;AACAvB,IAAAA,WAAW,CAACwB,QAAZ,GAAuB,KAAvB;AACD;;AAED,MAAIxB,WAAW,CAACyB,oBAAZ,KAAqC,CAAzC,EAA4C;AAC1CzB,IAAAA,WAAW,CAAC0B,cAAZ,GAA6B,IAA7B;AACD,GAFD,MAEO;AACL1B,IAAAA,WAAW,CAAC0B,cAAZ,GAA6B,IAAIpE,SAAJ,CAAc0C,WAAW,CAAC0B,cAA1B,CAA7B;AACD;;AAED,SAAO1B,WAAP;AACD;;AC/KD;AACA,AAAA,IAAY2B,oBAAZ;;AAAA,WAAYA;AACVA,EAAAA,4DAAA,eAAA;AACAA,EAAAA,sDAAA,SAAA;AACAA,EAAAA,sEAAA,yBAAA;AACAA,EAAAA,uEAAA,0BAAA;AACAA,EAAAA,uDAAA,UAAA;AACAA,EAAAA,8DAAA,iBAAA;AACAA,EAAAA,iEAAA,oBAAA;AACAA,EAAAA,2DAAA,cAAA;AACAA,EAAAA,8DAAA,iBAAA;AACD,CAVD,EAAYA,oBAAoB,KAApBA,oBAAoB,KAAA,CAAhC;;ACQA,IAAMC,UAAU,gBAAGC,MAAM,CAAO,cAACC,EAAE,CAAC,aAAD,CAAH,CAAP,CAAzB;AAEA,AAAO,IAAMC,0BAA0B,GAAG,SAA7BA,0BAA6B,CACxC3B,SADwC,EAExC4B,SAFwC,EAGxCC,YAHwC;AAKxC,MAAInC,IAAI,GAAG/B,MAAM,CAACmE,KAAP,CAAaN,UAAU,CAACO,IAAxB,CAAX;AACAP,EAAAA,UAAU,CAAC7E,MAAX,CACE;AACEqF,IAAAA,WAAW,EAAET,oBAAoB,CAACU;AADpC,GADF,EAIEvC,IAJF;AAMA,MAAMwC,IAAI,GAAG,CACX;AAAE7B,IAAAA,MAAM,EAAEL,SAAV;AAAqBmC,IAAAA,QAAQ,EAAE,KAA/B;AAAsCC,IAAAA,UAAU,EAAE;AAAlD,GADW,EAEX;AAAE/B,IAAAA,MAAM,EAAEuB,SAAV;AAAqBO,IAAAA,QAAQ,EAAE,KAA/B;AAAsCC,IAAAA,UAAU,EAAE;AAAlD,GAFW,EAGX;AAAE/B,IAAAA,MAAM,EAAEwB,YAAV;AAAwBM,IAAAA,QAAQ,EAAE,KAAlC;AAAyCC,IAAAA,UAAU,EAAE;AAArD,GAHW,EAIX;AAAE/B,IAAAA,MAAM,EAAEnB,gBAAV;AAA4BiD,IAAAA,QAAQ,EAAE,KAAtC;AAA6CC,IAAAA,UAAU,EAAE;AAAzD,GAJW,CAAb;AAOA,SAAO,IAAIC,sBAAJ,CAA2B;AAChCH,IAAAA,IAAI,EAAJA,IADgC;AAEhClC,IAAAA,SAAS,EAATA,SAFgC;AAGhCN,IAAAA,IAAI,EAAJA;AAHgC,GAA3B,CAAP;AAKD,CAxBM;;ACCP,IAAM8B,YAAU,gBAAGC,MAAM,CAAO,cAC5BC,EAAE,CAAC,aAAD,CAD0B,eAE5B5D,UAAU,CAAC,eAAD,CAFkB,CAAP,CAAzB;AAKA,AAAO,IAAMwE,gBAAgB,GAAG,SAAnBA,gBAAmB,CAC5BtC,SAD4B,EAE5BuC,YAF4B,EAG5BX,SAH4B,EAI5BY,qBAJ4B,EAK5BC,UAL4B,EAM5BC,UAN4B,EAO5BC,UAP4B,EAQ5BC,UAR4B,EAS5BC,OAT4B,EAU5BC,OAV4B,EAW5BC,QAX4B,EAY5BlB,YAZ4B,EAa5BmB,aAb4B;AAe5B,MAAItD,IAAI,GAAG/B,MAAM,CAACmE,KAAP,CAAaN,YAAU,CAACO,IAAxB,CAAX;AACAP,EAAAA,YAAU,CAAC7E,MAAX,CACI;AACIqF,IAAAA,WAAW,EAAET,oBAAoB,CAAC0B,KADtC;AAEID,IAAAA,aAAa,EAAbA;AAFJ,GADJ,EAKItD,IALJ;AAOA,MAAMwC,IAAI,GAAG,CACT;AAAE7B,IAAAA,MAAM,EAAEkC,YAAV;AAAwBJ,IAAAA,QAAQ,EAAE,KAAlC;AAAyCC,IAAAA,UAAU,EAAE;AAArD,GADS,EAET;AAAE/B,IAAAA,MAAM,EAAEuB,SAAV;AAAqBO,IAAAA,QAAQ,EAAE,KAA/B;AAAsCC,IAAAA,UAAU,EAAE;AAAlD,GAFS,EAGT;AAAE/B,IAAAA,MAAM,EAAEmC,qBAAV;AAAiCL,IAAAA,QAAQ,EAAE,IAA3C;AAAiDC,IAAAA,UAAU,EAAE;AAA7D,GAHS,EAIT;AAAE/B,IAAAA,MAAM,EAAEwC,OAAV;AAAmBV,IAAAA,QAAQ,EAAE,KAA7B;AAAoCC,IAAAA,UAAU,EAAE;AAAhD,GAJS,EAKT;AAAE/B,IAAAA,MAAM,EAAEyC,OAAV;AAAmBX,IAAAA,QAAQ,EAAE,KAA7B;AAAoCC,IAAAA,UAAU,EAAE;AAAhD,GALS,EAMT;AAAE/B,IAAAA,MAAM,EAAEoC,UAAV;AAAsBN,IAAAA,QAAQ,EAAE,KAAhC;AAAuCC,IAAAA,UAAU,EAAE;AAAnD,GANS,EAOT;AAAE/B,IAAAA,MAAM,EAAEqC,UAAV;AAAsBP,IAAAA,QAAQ,EAAE,KAAhC;AAAuCC,IAAAA,UAAU,EAAE;AAAnD,GAPS,EAQT;AAAE/B,IAAAA,MAAM,EAAEsC,UAAV;AAAsBR,IAAAA,QAAQ,EAAE,KAAhC;AAAuCC,IAAAA,UAAU,EAAE;AAAnD,GARS,EAST;AAAE/B,IAAAA,MAAM,EAAEuC,UAAV;AAAsBT,IAAAA,QAAQ,EAAE,KAAhC;AAAuCC,IAAAA,UAAU,EAAE;AAAnD,GATS,EAUT;AAAE/B,IAAAA,MAAM,EAAE0C,QAAV;AAAoBZ,IAAAA,QAAQ,EAAE,KAA9B;AAAqCC,IAAAA,UAAU,EAAE;AAAjD,GAVS,EAWT;AAAE/B,IAAAA,MAAM,EAAEwB,YAAV;AAAwBM,IAAAA,QAAQ,EAAE,KAAlC;AAAyCC,IAAAA,UAAU,EAAE;AAArD,GAXS,EAYT;AAAE/B,IAAAA,MAAM,EAAEnB,gBAAV;AAA4BiD,IAAAA,QAAQ,EAAE,KAAtC;AAA6CC,IAAAA,UAAU,EAAE;AAAzD,GAZS,CAAb;AAeA,SAAO,IAAIC,sBAAJ,CAA2B;AAC9BH,IAAAA,IAAI,EAAJA,IAD8B;AAE9BlC,IAAAA,SAAS,EAATA,SAF8B;AAG9BN,IAAAA,IAAI,EAAJA;AAH8B,GAA3B,CAAP;AAKH,CA3CM;;ACCP,IAAM8B,YAAU,gBAAGC,MAAM,CAAO,cAC9BC,EAAE,CAAC,aAAD,CAD4B,eAE9BA,EAAE,CAAC,eAAD,CAF4B,eAG9BxD,WAAW,CAAC,eAAD,CAHmB,eAI9BgF,GAAG,CAAC,WAAD,CAJ2B,eAK9BA,GAAG,CAAC,WAAD,CAL2B,eAM9BpF,UAAU,CAAC,eAAD,CANoB,eAO9BA,UAAU,CAAC,eAAD,CAPoB,eAQ9BA,UAAU,CAAC,eAAD,CARoB,CAAP,CAAzB;AAWA,AAAO,IAAMqF,+BAA+B,GAAG,SAAlCA,+BAAkC,CAC7CnD,SAD6C,EAE7CuC,YAF6C,EAG7CX,SAH6C,EAI7CY,qBAJ6C,EAK7CG,UAL6C,EAM7CC,UAN6C,EAO7CH,UAP6C,EAQ7CC,UAR6C,EAS7CG,OAT6C,EAU7CC,OAV6C,EAW7CC,QAX6C,EAY7ClB,YAZ6C,EAa7CuB,aAb6C,EAc7CC,SAd6C,EAe7CC,SAf6C,EAgB7CC,aAhB6C,EAiB7CC,aAjB6C,EAkB7CC,aAlB6C,EAmB7CT,aAnB6C;AAqB7C,MAAItD,IAAI,GAAG/B,MAAM,CAACmE,KAAP,CAAaN,YAAU,CAACO,IAAxB,CAAX;AACAP,EAAAA,YAAU,CAAC7E,MAAX,CACE;AACEqF,IAAAA,WAAW,EAAET,oBAAoB,CAACmC,oBADpC;AAEEN,IAAAA,aAAa,EAAbA,aAFF;AAGEG,IAAAA,aAAa,EAAbA,aAHF;AAIEF,IAAAA,SAAS,EAATA,SAJF;AAKEC,IAAAA,SAAS,EAATA,SALF;AAMEE,IAAAA,aAAa,EAAbA,aANF;AAOEC,IAAAA,aAAa,EAAbA,aAPF;AAQET,IAAAA,aAAa,EAAbA;AARF,GADF,EAWEtD,IAXF;AAaA,MAAMwC,IAAI,GAAG,CACX;AAAE7B,IAAAA,MAAM,EAAEkC,YAAV;AAAwBJ,IAAAA,QAAQ,EAAE,KAAlC;AAAyCC,IAAAA,UAAU,EAAE;AAArD,GADW,EAEX;AAAE/B,IAAAA,MAAM,EAAEuB,SAAV;AAAqBO,IAAAA,QAAQ,EAAE,KAA/B;AAAsCC,IAAAA,UAAU,EAAE;AAAlD,GAFW,EAGX;AAAE/B,IAAAA,MAAM,EAAEmC,qBAAV;AAAiCL,IAAAA,QAAQ,EAAE,IAA3C;AAAiDC,IAAAA,UAAU,EAAE;AAA7D,GAHW,EAIX;AAAE/B,IAAAA,MAAM,EAAEsC,UAAV;AAAsBR,IAAAA,QAAQ,EAAE,KAAhC;AAAuCC,IAAAA,UAAU,EAAE;AAAnD,GAJW,EAKX;AAAE/B,IAAAA,MAAM,EAAEuC,UAAV;AAAsBT,IAAAA,QAAQ,EAAE,KAAhC;AAAuCC,IAAAA,UAAU,EAAE;AAAnD,GALW,EAMX;AAAE/B,IAAAA,MAAM,EAAEoC,UAAV;AAAsBN,IAAAA,QAAQ,EAAE,KAAhC;AAAuCC,IAAAA,UAAU,EAAE;AAAnD,GANW,EAOX;AAAE/B,IAAAA,MAAM,EAAEqC,UAAV;AAAsBP,IAAAA,QAAQ,EAAE,KAAhC;AAAuCC,IAAAA,UAAU,EAAE;AAAnD,GAPW,EAQX;AAAE/B,IAAAA,MAAM,EAAEwC,OAAV;AAAmBV,IAAAA,QAAQ,EAAE,KAA7B;AAAoCC,IAAAA,UAAU,EAAE;AAAhD,GARW,EASX;AAAE/B,IAAAA,MAAM,EAAEyC,OAAV;AAAmBX,IAAAA,QAAQ,EAAE,KAA7B;AAAoCC,IAAAA,UAAU,EAAE;AAAhD,GATW,EAUX;AAAE/B,IAAAA,MAAM,EAAE0C,QAAV;AAAoBZ,IAAAA,QAAQ,EAAE,KAA9B;AAAqCC,IAAAA,UAAU,EAAE;AAAjD,GAVW,EAWX;AAAE/B,IAAAA,MAAM,EAAEwB,YAAV;AAAwBM,IAAAA,QAAQ,EAAE,KAAlC;AAAyCC,IAAAA,UAAU,EAAE;AAArD,GAXW,EAYX;AAAE/B,IAAAA,MAAM,EAAEnB,gBAAV;AAA4BiD,IAAAA,QAAQ,EAAE,KAAtC;AAA6CC,IAAAA,UAAU,EAAE;AAAzD,GAZW,CAAb;AAeA,SAAO,IAAIC,sBAAJ,CAA2B;AAChCH,IAAAA,IAAI,EAAJA,IADgC;AAEhClC,IAAAA,SAAS,EAATA,SAFgC;AAGhCN,IAAAA,IAAI,EAAJA;AAHgC,GAA3B,CAAP;AAKD,CAvDM;;ACPP,IAAM8B,YAAU,gBAAGC,MAAM,CAAO,cAC9BC,EAAE,CAAC,aAAD,CAD4B,eAE9BA,EAAE,CAAC,OAAD,CAF4B,eAG9BA,EAAE,CAAC,WAAD,CAH4B,eAI9B5D,UAAU,CAAC,KAAD,EAAQ,EAAR,CAJoB,eAK9BA,UAAU,CAAC,YAAD,EAAe,EAAf,CALoB,eAM9B6F,GAAG,CAAC,WAAD,CAN2B,eAO9BzF,WAAW,CAAC,kBAAD,EAAqB,EAArB,CAPmB,eAQ9BA,WAAW,CAAC,gBAAD,CARmB,eAS9BA,WAAW,CAAC,kBAAD,CATmB,eAU9BA,WAAW,CAAC,kBAAD,CAVmB,eAW9BA,WAAW,CAAC,aAAD,CAXmB,eAY9BA,WAAW,CAAC,aAAD,CAZmB,CAAP,CAAzB;AAeA,AAAO,IAAM0F,qBAAqB,GAAG,SAAxBA,qBAAwB,CACnC5D,SADmC,EAEnCuC,YAFmC,EAGnCX,SAHmC,EAInCiC,OAJmC,EAKnCC,aALmC,EAMnCC,aANmC,EAOnCtB,UAPmC,EAQnCC,UARmC,EASnCK,QATmC,EAUnClB,YAVmC,EAWnCmC,KAXmC,EAYnCC,SAZmC,EAanCC,GAbmC,EAcnCC,UAdmC,EAenCC,SAfmC,EAgBnCC,gBAhBmC;AAkBnC,MAAI3E,IAAI,GAAG/B,MAAM,CAACmE,KAAP,CAAaN,YAAU,CAACO,IAAxB,CAAX;AACAP,EAAAA,YAAU,CAAC7E,MAAX,CACE;AACEqF,IAAAA,WAAW,EAAET,oBAAoB,CAAC+C,UADpC;AAEEN,IAAAA,KAAK,EAALA,KAFF;AAGEC,IAAAA,SAAS,EAATA,SAHF;AAIEC,IAAAA,GAAG,EAAHA,GAJF;AAKEC,IAAAA,UAAU,EAAVA,UALF;AAMEC,IAAAA,SAAS,EAATA,SANF;AAOEC,IAAAA,gBAAgB,EAAhBA,gBAPF;AAQEE,IAAAA,cAAc,EAAE,IAAIrL,OAAJ,CAAY,CAAZ,CARlB;AASEsL,IAAAA,gBAAgB,EAAE,IAAItL,OAAJ,CAAY,CAAZ,CATpB;AAUEuL,IAAAA,gBAAgB,EAAE,IAAIvL,OAAJ,CAAY,CAAZ,CAVpB;AAWEwL,IAAAA,WAAW,EAAE,IAAIxL,OAAJ,CAAY,CAAZ,CAXf;AAYEyL,IAAAA,WAAW,EAAE,IAAIzL,OAAJ,CAAY,CAAZ;AAZf,GADF,EAeEwG,IAfF;AAkBA,MAAMwC,IAAI,GAAG,CACX;AAAE7B,IAAAA,MAAM,EAAEkC,YAAV;AAAwBJ,IAAAA,QAAQ,EAAE,KAAlC;AAAyCC,IAAAA,UAAU,EAAE;AAArD,GADW,EAEX;AAAE/B,IAAAA,MAAM,EAAEuB,SAAV;AAAqBO,IAAAA,QAAQ,EAAE,KAA/B;AAAsCC,IAAAA,UAAU,EAAE;AAAlD,GAFW,EAGX;AAAE/B,IAAAA,MAAM,EAAEwD,OAAV;AAAmB1B,IAAAA,QAAQ,EAAE,KAA7B;AAAoCC,IAAAA,UAAU,EAAE;AAAhD,GAHW,EAIX;AAAE/B,IAAAA,MAAM,EAAEyD,aAAV;AAAyB3B,IAAAA,QAAQ,EAAE,KAAnC;AAA0CC,IAAAA,UAAU,EAAE;AAAtD,GAJW,EAKX;AAAE/B,IAAAA,MAAM,EAAE0D,aAAV;AAAyB5B,IAAAA,QAAQ,EAAE,KAAnC;AAA0CC,IAAAA,UAAU,EAAE;AAAtD,GALW,EAMX;AAAE/B,IAAAA,MAAM,EAAEoC,UAAV;AAAsBN,IAAAA,QAAQ,EAAE,KAAhC;AAAuCC,IAAAA,UAAU,EAAE;AAAnD,GANW,EAOX;AAAE/B,IAAAA,MAAM,EAAEqC,UAAV;AAAsBP,IAAAA,QAAQ,EAAE,KAAhC;AAAuCC,IAAAA,UAAU,EAAE;AAAnD,GAPW,EAQX;AAAE/B,IAAAA,MAAM,EAAE0C,QAAV;AAAoBZ,IAAAA,QAAQ,EAAE,KAA9B;AAAqCC,IAAAA,UAAU,EAAE;AAAjD,GARW,EASX;AAAE/B,IAAAA,MAAM,EAAEwB,YAAV;AAAwBM,IAAAA,QAAQ,EAAE,KAAlC;AAAyCC,IAAAA,UAAU,EAAE;AAArD,GATW,EAUX;AAAE/B,IAAAA,MAAM,EAAEnB,gBAAV;AAA4BiD,IAAAA,QAAQ,EAAE,KAAtC;AAA6CC,IAAAA,UAAU,EAAE;AAAzD,GAVW,CAAb;AAaA,SAAO,IAAIC,sBAAJ,CAA2B;AAChCH,IAAAA,IAAI,EAAJA,IADgC;AAEhClC,IAAAA,SAAS,EAATA,SAFgC;AAGhCN,IAAAA,IAAI,EAAJA;AAHgC,GAA3B,CAAP;AAKD,CAvDM;;AC5BP,IAAM8B,YAAU,gBAAGC,MAAM,CAAO,cAACC,EAAE,CAAC,aAAD,CAAH,CAAP,CAAzB;AAEA,AAAO,IAAMkD,uBAAuB,GAAG,SAA1BA,uBAA0B,CACrC5E,SADqC,EAErCuC,YAFqC,EAGrCX,SAHqC,EAIrCY,qBAJqC,EAKrCC,UALqC,EAMrCC,UANqC,EAOrCC,UAPqC,EAQrCC,UARqC;AAUrC,MAAIlD,IAAI,GAAG/B,MAAM,CAACmE,KAAP,CAAaN,YAAU,CAACO,IAAxB,CAAX;AACAP,EAAAA,YAAU,CAAC7E,MAAX,CACE;AACEqF,IAAAA,WAAW,EAAET,oBAAoB,CAACsD;AADpC,GADF,EAIEnF,IAJF;AAMA,MAAMwC,IAAI,GAAG,CACX;AAAE7B,IAAAA,MAAM,EAAEkC,YAAV;AAAwBJ,IAAAA,QAAQ,EAAE,KAAlC;AAAyCC,IAAAA,UAAU,EAAE;AAArD,GADW,EAEX;AAAE/B,IAAAA,MAAM,EAAEuB,SAAV;AAAqBO,IAAAA,QAAQ,EAAE,KAA/B;AAAsCC,IAAAA,UAAU,EAAE;AAAlD,GAFW,EAGX;AAAE/B,IAAAA,MAAM,EAAEmC,qBAAV;AAAiCL,IAAAA,QAAQ,EAAE,IAA3C;AAAiDC,IAAAA,UAAU,EAAE;AAA7D,GAHW,EAIX;AAAE/B,IAAAA,MAAM,EAAEoC,UAAV;AAAsBN,IAAAA,QAAQ,EAAE,KAAhC;AAAuCC,IAAAA,UAAU,EAAE;AAAnD,GAJW,EAKX;AAAE/B,IAAAA,MAAM,EAAEqC,UAAV;AAAsBP,IAAAA,QAAQ,EAAE,KAAhC;AAAuCC,IAAAA,UAAU,EAAE;AAAnD,GALW,EAMX;AAAE/B,IAAAA,MAAM,EAAEsC,UAAV;AAAsBR,IAAAA,QAAQ,EAAE,KAAhC;AAAuCC,IAAAA,UAAU,EAAE;AAAnD,GANW,EAOX;AAAE/B,IAAAA,MAAM,EAAEuC,UAAV;AAAsBT,IAAAA,QAAQ,EAAE,KAAhC;AAAuCC,IAAAA,UAAU,EAAE;AAAnD,GAPW,EAQX;AAAE/B,IAAAA,MAAM,EAAEnB,gBAAV;AAA4BiD,IAAAA,QAAQ,EAAE,KAAtC;AAA6CC,IAAAA,UAAU,EAAE;AAAzD,GARW,CAAb;AAWA,SAAO,IAAIC,sBAAJ,CAA2B;AAChCH,IAAAA,IAAI,EAAJA,IADgC;AAEhClC,IAAAA,SAAS,EAATA,SAFgC;AAGhCN,IAAAA,IAAI,EAAJA;AAHgC,GAA3B,CAAP;AAKD,CAjCM;;ACEP,IAAM8B,YAAU,gBAAGC,MAAM,CAAO,cAC9BC,EAAE,CAAC,aAAD,CAD4B,eAE9B5D,UAAU,CAAC,UAAD,CAFoB,eAG9BA,UAAU,CAAC,kBAAD,CAHoB,CAAP,CAAzB;AAMA,AAAO,IAAMgH,eAAe,GAAG,SAAlBA,eAAkB,CAC7B9E,SAD6B,EAE7BuC,YAF6B,EAG7BX,SAH6B,EAI7BY,qBAJ6B,EAK7BuC,UAL6B,EAM7BC,eAN6B,EAO7BC,UAP6B,EAQ7BC,eAR6B,EAS7BnC,QAT6B,EAU7BoC,QAV6B,EAW7BC,gBAX6B;AAa7B,MAAI1F,IAAI,GAAG/B,MAAM,CAACmE,KAAP,CAAaN,YAAU,CAACO,IAAxB,CAAX;AACAP,EAAAA,YAAU,CAAC7E,MAAX,CACE;AACEqF,IAAAA,WAAW,EAAET,oBAAoB,CAAC8D,IADpC;AAEEF,IAAAA,QAAQ,EAARA,QAFF;AAGEC,IAAAA,gBAAgB,EAAhBA;AAHF,GADF,EAME1F,IANF;AAQA,MAAMwC,IAAI,GAAG,CACX;AAAE7B,IAAAA,MAAM,EAAEkC,YAAV;AAAwBJ,IAAAA,QAAQ,EAAE,KAAlC;AAAyCC,IAAAA,UAAU,EAAE;AAArD,GADW,EAEX;AAAE/B,IAAAA,MAAM,EAAEuB,SAAV;AAAqBO,IAAAA,QAAQ,EAAE,KAA/B;AAAsCC,IAAAA,UAAU,EAAE;AAAlD,GAFW,EAGX;AAAE/B,IAAAA,MAAM,EAAEmC,qBAAV;AAAiCL,IAAAA,QAAQ,EAAE,IAA3C;AAAiDC,IAAAA,UAAU,EAAE;AAA7D,GAHW,EAIX;AAAE/B,IAAAA,MAAM,EAAE0E,UAAV;AAAsB5C,IAAAA,QAAQ,EAAE,KAAhC;AAAuCC,IAAAA,UAAU,EAAE;AAAnD,GAJW,EAKX;AAAE/B,IAAAA,MAAM,EAAE2E,eAAV;AAA2B7C,IAAAA,QAAQ,EAAE,KAArC;AAA4CC,IAAAA,UAAU,EAAE;AAAxD,GALW,EAMX;AAAE/B,IAAAA,MAAM,EAAE4E,UAAV;AAAsB9C,IAAAA,QAAQ,EAAE,KAAhC;AAAuCC,IAAAA,UAAU,EAAE;AAAnD,GANW,EAOX;AAAE/B,IAAAA,MAAM,EAAE6E,eAAV;AAA2B/C,IAAAA,QAAQ,EAAE,KAArC;AAA4CC,IAAAA,UAAU,EAAE;AAAxD,GAPW,EAQX;AAAE/B,IAAAA,MAAM,EAAE0C,QAAV;AAAoBZ,IAAAA,QAAQ,EAAE,KAA9B;AAAqCC,IAAAA,UAAU,EAAE;AAAjD,GARW,EASX;AAAE/B,IAAAA,MAAM,EAAEnB,gBAAV;AAA4BiD,IAAAA,QAAQ,EAAE,KAAtC;AAA6CC,IAAAA,UAAU,EAAE;AAAzD,GATW,CAAb;AAWA,SAAO,IAAIC,sBAAJ,CAA2B;AAChCH,IAAAA,IAAI,EAAJA,IADgC;AAEhClC,IAAAA,SAAS,EAATA,SAFgC;AAGhCN,IAAAA,IAAI,EAAJA;AAHgC,GAA3B,CAAP;AAKD,CAtCM;;ACJP,IAAM8B,YAAU,gBAAGC,MAAM,CAAO,cAC9BC,EAAE,CAAC,aAAD,CAD4B,eAE9B5D,UAAU,CAAC,eAAD,CAFoB,eAG9BA,UAAU,CAAC,eAAD,CAHoB,eAI9BA,UAAU,CAAC,eAAD,CAJoB,eAK9BA,UAAU,CAAC,eAAD,CALoB,CAAP,CAAzB;AAQA,AAAO,IAAMwH,gCAAgC,GAAG,SAAnCA,gCAAmC,CAC9CtF,SAD8C,EAE9CuC,YAF8C,EAG9CX,SAH8C,EAI9CY,qBAJ8C,EAK9CC,UAL8C,EAM9CC,UAN8C,EAO9CC,UAP8C,EAQ9CC,UAR8C,EAS9CC,OAT8C,EAU9CC,OAV8C,EAW9CC,QAX8C,EAY9ClB,YAZ8C,EAa9C0B,aAb8C,EAc9CgC,aAd8C,EAe9CC,aAf8C,EAgB9CxC,aAhB8C;AAkB9C,MAAItD,IAAI,GAAG/B,MAAM,CAACmE,KAAP,CAAaN,YAAU,CAACO,IAAxB,CAAX;AACAP,EAAAA,YAAU,CAAC7E,MAAX,CACE;AACEqF,IAAAA,WAAW,EAAET,oBAAoB,CAACkE,qBADpC;AAEElC,IAAAA,aAAa,EAAbA,aAFF;AAGEgC,IAAAA,aAAa,EAAbA,aAHF;AAIEC,IAAAA,aAAa,EAAbA,aAJF;AAKExC,IAAAA,aAAa,EAAbA;AALF,GADF,EAQEtD,IARF;AAUA,MAAMwC,IAAI,GAAG,CACX;AAAE7B,IAAAA,MAAM,EAAEkC,YAAV;AAAwBJ,IAAAA,QAAQ,EAAE,KAAlC;AAAyCC,IAAAA,UAAU,EAAE;AAArD,GADW,EAEX;AAAE/B,IAAAA,MAAM,EAAEuB,SAAV;AAAqBO,IAAAA,QAAQ,EAAE,KAA/B;AAAsCC,IAAAA,UAAU,EAAE;AAAlD,GAFW,EAGX;AAAE/B,IAAAA,MAAM,EAAEmC,qBAAV;AAAiCL,IAAAA,QAAQ,EAAE,IAA3C;AAAiDC,IAAAA,UAAU,EAAE;AAA7D,GAHW,EAIX;AAAE/B,IAAAA,MAAM,EAAEwC,OAAV;AAAmBV,IAAAA,QAAQ,EAAE,KAA7B;AAAoCC,IAAAA,UAAU,EAAE;AAAhD,GAJW,EAKX;AAAE/B,IAAAA,MAAM,EAAEyC,OAAV;AAAmBX,IAAAA,QAAQ,EAAE,KAA7B;AAAoCC,IAAAA,UAAU,EAAE;AAAhD,GALW,EAMX;AAAE/B,IAAAA,MAAM,EAAEoC,UAAV;AAAsBN,IAAAA,QAAQ,EAAE,KAAhC;AAAuCC,IAAAA,UAAU,EAAE;AAAnD,GANW,EAOX;AAAE/B,IAAAA,MAAM,EAAEqC,UAAV;AAAsBP,IAAAA,QAAQ,EAAE,KAAhC;AAAuCC,IAAAA,UAAU,EAAE;AAAnD,GAPW,EAQX;AAAE/B,IAAAA,MAAM,EAAEsC,UAAV;AAAsBR,IAAAA,QAAQ,EAAE,KAAhC;AAAuCC,IAAAA,UAAU,EAAE;AAAnD,GARW,EASX;AAAE/B,IAAAA,MAAM,EAAEuC,UAAV;AAAsBT,IAAAA,QAAQ,EAAE,KAAhC;AAAuCC,IAAAA,UAAU,EAAE;AAAnD,GATW,EAUX;AAAE/B,IAAAA,MAAM,EAAE0C,QAAV;AAAoBZ,IAAAA,QAAQ,EAAE,KAA9B;AAAqCC,IAAAA,UAAU,EAAE;AAAjD,GAVW,EAWX;AAAE/B,IAAAA,MAAM,EAAEwB,YAAV;AAAwBM,IAAAA,QAAQ,EAAE,KAAlC;AAAyCC,IAAAA,UAAU,EAAE;AAArD,GAXW,EAYX;AAAE/B,IAAAA,MAAM,EAAEnB,gBAAV;AAA4BiD,IAAAA,QAAQ,EAAE,KAAtC;AAA6CC,IAAAA,UAAU,EAAE;AAAzD,GAZW,CAAb;AAcA,SAAO,IAAIC,sBAAJ,CAA2B;AAChCH,IAAAA,IAAI,EAAJA,IADgC;AAEhClC,IAAAA,SAAS,EAATA,SAFgC;AAGhCN,IAAAA,IAAI,EAAJA;AAHgC,GAA3B,CAAP;AAKD,CAhDM;;ACVP,IAAM8B,YAAU,gBAAGC,MAAM,CAAO,cAC9BC,EAAE,CAAC,aAAD,CAD4B,eAE9B5D,UAAU,CAAC,UAAD,CAFoB;AAAA;AAG9B;AACA4D,EAAE,CAAC,WAAD,CAJ4B,CAAP,CAAzB;AAOA,AAAO,IAAMgE,uBAAuB,GAAG,SAA1BA,uBAA0B,CACrC1F,SADqC,EAErCuC,YAFqC,EAGrCQ,QAHqC,EAIrCoC,QAJqC;AAMrCQ,SANqC;AAQrC,MAAIjG,IAAI,GAAG/B,MAAM,CAACmE,KAAP,CAAaN,YAAU,CAACO,IAAxB,CAAX;AACAP,EAAAA,YAAU,CAAC7E,MAAX,CACE;AACEqF,IAAAA,WAAW,EAAET,oBAAoB,CAACqE,YADpC;AAEET,IAAAA,QAAQ,EAARA,QAFF;AAGE;AACAQ,IAAAA,SAAS,EAATA;AAJF,GADF,EAOEjG,IAPF;AASA,MAAMwC,IAAI,GAAG,CACX;AAAE7B,IAAAA,MAAM,EAAEkC,YAAV;AAAwBJ,IAAAA,QAAQ,EAAE,KAAlC;AAAyCC,IAAAA,UAAU,EAAE;AAArD,GADW,EAEX;AAAE/B,IAAAA,MAAM,EAAE0C,QAAV;AAAoBZ,IAAAA,QAAQ,EAAE,KAA9B;AAAqCC,IAAAA,UAAU,EAAE;AAAjD,GAFW,CAAb;AAIA,SAAO,IAAIC,sBAAJ,CAA2B;AAChCH,IAAAA,IAAI,EAAJA,IADgC;AAEhClC,IAAAA,SAAS,EAATA,SAFgC;AAGhCN,IAAAA,IAAI,EAAJA;AAHgC,GAA3B,CAAP;AAKD,CA3BM;;ICdMmG,kBAAkB,GAAG,MAA3B;AA+BP,IAAaC,UAAU,gBAAGrE,MAAM,CAC9B,cACEyB,GAAG,CAAC,MAAD,CADL,eAEEhF,WAAW,CAAC,WAAD,EAAc,EAAd,CAFb,eAGEA,WAAW,CAAC,cAAD,CAHb,eAIEF,UAAU,CAAC,YAAD,CAJZ,eAKEE,WAAW,CAAC,mBAAD,EAAsB,EAAtB,CALb,eAMEA,WAAW,CAAC,mBAAD,EAAsB,EAAtB,CANb,CAD8B,EAS9B,UAT8B,CAAzB;AAYP,IAAa6H,kBAAkB,gBAAGtE,MAAM,CACtC,cACEC,EAAE,CAAC,aAAD,CADJ,eAEE9E,SAAS,CAAC,cAAD,CAFX,eAGE8E,EAAE,CAAC,aAAD,CAHJ,eAIEwB,GAAG,CAAC,KAAD,CAJL,eAKEpG,IAAI,CAAC+I,kBAAkB,GAAG,EAAtB,EAA0B,UAA1B,CALN,CADsC,EAQtC,cARsC,CAAjC;AAWP,IAAaG,cAAc,GAAG,SAAjBA,cAAiB,CAACC,IAAD;AAC5B,SAAOA,IAAI,CAACvG,IAAL,CAAUjF,MAAV,KAAqBoL,kBAA5B;AACD,CAFM;AAIP,IAAaK,iBAAiB,GAAyB,SAA1CA,iBAA0C,CACrD7F,MADqD,EAErD4F,IAFqD;AAIrD,MAAI,CAACD,cAAc,CAACC,IAAD,CAAnB,EAA2B;AAE3B,MAAMzL,MAAM,GAAGmD,MAAM,CAACC,IAAP,CAAYqI,IAAI,CAACvG,IAAjB,CAAf;;AACA,8BAMIqG,kBAAkB,CAACtJ,MAAnB,CAA0BjC,MAA1B,CANJ;AAAA,MACE2L,WADF,yBACEA,WADF;AAAA,MAEE5D,YAFF,yBAEEA,YAFF;AAAA,MAGE6D,WAHF,yBAGEA,WAHF;AAAA,MAIEC,GAJF,yBAIEA,GAJF;AAAA,MAKEC,QALF,yBAKEA,QALF;;AAQA,MAAMC,QAAQ,GAAGF,GAAG,GAAGP,UAAU,CAAC/D,IAAlC;AACA,MAAMyE,WAAW,GAAGF,QAAQ,CAACrL,KAAT,CAAe,CAAf,EAAkBsL,QAAlB,CAApB;AACA,MAAME,KAAK,GAAGC,GAAG,CAACZ,UAAD,EAAaO,GAAb,CAAH,CAAqB5J,MAArB,CAA4B+J,WAA5B,CAAd;AAEA,MAAMG,YAAY,GAAiB;AACjCR,IAAAA,WAAW,EAAXA,WADiC;AAEjC5D,IAAAA,YAAY,EAAZA,YAFiC;AAGjC6D,IAAAA,WAAW,EAAXA,WAHiC;AAIjCC,IAAAA,GAAG,EAAHA,GAJiC;AAKjCI,IAAAA,KAAK,EAALA;AALiC,GAAnC;AAQA,SAAO;AACLpG,IAAAA,MAAM,EAANA,MADK;AAEL4F,IAAAA,IAAI,EAAJA,IAFK;AAGLvG,IAAAA,IAAI,EAAEiH;AAHD,GAAP;AAKD,CAhCM;;IC3DMC,sBAAsB,GAAG,MAA/B;AA8BP,IAAaC,cAAc,gBAAGpF,MAAM,CAClC,cACE7E,SAAS,CAAC,YAAD,CADX,eAEEsG,GAAG,CAAC,WAAD,CAFL,eAGEA,GAAG,CAAC,WAAD,CAHL,eAIEhF,WAAW,CAAC,SAAD,CAJb,eAKEA,WAAW,CAAC,sBAAD,EAAyB,EAAzB,CALb,eAMEA,WAAW,CAAC,sBAAD,EAAyB,EAAzB,CANb,eAOEA,WAAW,CAAC,WAAD,EAAc,EAAd,CAPb,eAQEA,WAAW,CAAC,WAAD,EAAc,EAAd,CARb,CADkC,EAWlC,UAXkC,CAA7B;AAcP,IAAa4I,sBAAsB,gBAAGrF,MAAM,CAC1C,cACEC,EAAE,CAAC,aAAD,CADJ,eAEE9E,SAAS,CAAC,cAAD,CAFX,eAGE8E,EAAE,CAAC,aAAD,CAHJ,eAIEwB,GAAG,CAAC,KAAD,CAJL,eAKEpG,IAAI,CAAC8J,sBAAsB,GAAG,EAA1B,EAA8B,UAA9B,CALN,CAD0C,EAQ1C,kBAR0C,CAArC;AAWP,IAAaG,2BAA2B,gBAAGpM,IAAI,CAACqM,KAAL,CACzC,CAACJ,sBAAsB,GAAG,EAA1B,IAAgCC,cAAc,CAAC9E,IADN,CAApC;AAIP,IAAakF,kBAAkB,GAAG,SAArBA,kBAAqB,CAAChB,IAAD;AAChC,SAAOA,IAAI,CAACvG,IAAL,CAAUjF,MAAV,KAAqBmM,sBAA5B;AACD,CAFM;AAIP,IAAaM,qBAAqB,GAA6B,SAAlDA,qBAAkD,CAC7D7G,MAD6D,EAE7D4F,IAF6D;AAI7D,MAAI,CAACgB,kBAAkB,CAAChB,IAAD,CAAvB,EAA+B;AAE/B,MAAMzL,MAAM,GAAGmD,MAAM,CAACC,IAAP,CAAYqI,IAAI,CAACvG,IAAjB,CAAf;;AACA,8BAMIoH,sBAAsB,CAACrK,MAAvB,CAA8BjC,MAA9B,CANJ;AAAA,MACE2L,WADF,yBACEA,WADF;AAAA,MAEE5D,YAFF,yBAEEA,YAFF;AAAA,MAGE6D,WAHF,yBAGEA,WAHF;AAAA,MAIEC,GAJF,yBAIEA,GAJF;AAAA,MAKEC,QALF,yBAKEA,QALF;;AAQA,MAAMa,YAAY,GAAGd,GAAG,GAAGQ,cAAc,CAAC9E,IAA1C;AACA,MAAMqF,eAAe,GAAGd,QAAQ,CAACrL,KAAT,CAAe,CAAf,EAAkBkM,YAAlB,CAAxB;AACA,MAAME,SAAS,GAAGX,GAAG,CAACG,cAAD,EAAiBR,GAAjB,CAAH,CAAyB5J,MAAzB,CAAgC2K,eAAhC,CAAlB;AAEA,MAAME,gBAAgB,GAAqB;AACzCnB,IAAAA,WAAW,EAAXA,WADyC;AAEzC5D,IAAAA,YAAY,EAAZA,YAFyC;AAGzC6D,IAAAA,WAAW,EAAXA,WAHyC;AAIzCC,IAAAA,GAAG,EAAHA,GAJyC;AAKzCgB,IAAAA,SAAS,EAATA;AALyC,GAA3C;AAQA,SAAO;AACLhH,IAAAA,MAAM,EAANA,MADK;AAEL4F,IAAAA,IAAI,EAAJA,IAFK;AAGLvG,IAAAA,IAAI,EAAE4H;AAHD,GAAP;AAKD,CAhCM;;ICnCMC,sBAAsB,gBAAG9F,MAAM,CAC1C,cACE7E,SAAS,CAAC,cAAD,CADX,eAEE8E,EAAE,CAAC,aAAD,CAFJ,eAGEA,EAAE,CAAC,SAAD,CAHJ,eAIEA,EAAE,CAAC,eAAD,CAJJ,eAKEA,EAAE,CAAC,OAAD,CALJ,eAME9E,SAAS,CAAC,gBAAD,CANX,eAOEA,SAAS,CAAC,SAAD,CAPX,eAQEA,SAAS,CAAC,eAAD,CARX,eASEA,SAAS,CAAC,eAAD,CATX,eAUEA,SAAS,CAAC,YAAD,CAVX,eAWEA,SAAS,CAAC,YAAD,CAXX,eAYEA,SAAS,CAAC,YAAD,CAZX,eAaEA,SAAS,CAAC,YAAD,CAbX,eAcEA,SAAS,CAAC,UAAD,CAdX,eAeEA,SAAS,CAAC,cAAD,CAfX,eAgBE8E,EAAE,CAAC,WAAD,CAhBJ,eAiBE5D,UAAU,CAAC,KAAD,EAAQ,EAAR,CAjBZ,eAkBEA,UAAU,CAAC,YAAD,EAAe,EAAf,CAlBZ,eAmBE6F,GAAG,CAAC,WAAD,CAnBL,eAoBEzF,WAAW,CAAC,kBAAD,EAAqB,EAArB,CApBb,eAqBEA,WAAW,CAAC,gBAAD,CArBb,eAsBEA,WAAW,CAAC,kBAAD,EAAqB,EAArB,CAtBb,eAuBEA,WAAW,CAAC,kBAAD,EAAqB,EAArB,CAvBb,eAwBEA,WAAW,CAAC,aAAD,CAxBb,eAyBEA,WAAW,CAAC,aAAD,CAzBb,CAD0C,EA4B1C,kBA5B0C,CAArC;AA+BP,IAAasJ,uBAAuB,GAAGD,sBAAsB,CAACxF,IAAvD;AAEP,IAAa0F,kBAAkB,GAAG,SAArBA,kBAAqB,CAACxB,IAAD;AAChC,SAAOA,IAAI,CAACvG,IAAL,CAAUjF,MAAV,KAAqB+M,uBAA5B;AACD,CAFM;AAIP,IAAaE,qBAAqB,GAA6B,SAAlDA,qBAAkD,CAC7DrH,MAD6D,EAE7D4F,IAF6D;AAI7D,MAAI,CAACwB,kBAAkB,CAACxB,IAAD,CAAvB,EAA+B;AAC7B;AACD;;AAED,MAAMzL,MAAM,GAAGmD,MAAM,CAACC,IAAP,CAAYqI,IAAI,CAACvG,IAAjB,CAAf;AACA,MAAMiI,gBAAgB,GAAGJ,sBAAsB,CAAC9K,MAAvB,CAA8BjC,MAA9B,CAAzB;AAEA,SAAO;AACL6F,IAAAA,MAAM,EAANA,MADK;AAEL4F,IAAAA,IAAI,EAAJA,IAFK;AAGLvG,IAAAA,IAAI,EAAEiI;AAHD,GAAP;AAKD,CAhBM;;ICjEMC,QAAQ,GAAG,MAAjB;AAGP;;AACA,IAAaC,QAAQ,GAAG,CAACD,QAAlB;AAGP;;AACA,IAAaE,MAAM,gBAAG,IAAI5O,SAAJ,CAAY,QAAZ,CAAf;AACP,IAAa6O,YAAY,gBAAG,IAAI7O,SAAJ,CAAY,OAAZ,CAArB;AACP,IAAa8O,SAAS,gBAAGF,MAAM,CAACnO,GAAP,CAAWiO,QAAX,CAAlB;AACP,IAAaK,SAAS,gBAAGH,MAAM,CAACnO,GAAP,CAAWkO,QAAX,CAAlB;AACP,IAAaK,cAAc,gBAAGJ,MAAM,CAACnO,GAAP,CAAWiO,QAAQ,GAAG,CAAtB,CAAvB;AACP,IAAaO,cAAc,gBAAGL,MAAM,CAACnO,GAAP,CAAWkO,QAAQ,GAAG,CAAtB,CAAvB;AAEP;;;;;;;AAMA,SAAgBO,eAAeC;AAC7B,GACEA,SAAS,CAACC,QAAV,CAAmBJ,cAAnB,CADF,2CAAAxN,SAAS,gCAEe2N,SAAS,CAACrN,QAAV,EAFf,cAE4CkN,cAF5C,iBAAT,GAAAxN,SAAS,OAAT;AAIA,GACE2N,SAAS,CAACE,WAAV,CAAsBJ,cAAtB,CADF,2CAAAzN,SAAS,gCAEe2N,SAAS,CAACrN,QAAV,EAFf,eAE6CmN,cAF7C,iBAAT,GAAAzN,SAAS,OAAT;AAIA,SAAO2N,SAAS,CACb1O,GADI,CACA,CADA,EAEJ6O,GAFI,CAEAV,MAFA,EAGJW,IAHI,CAGC,CAHD,EAGIvP,SAAO,CAACwP,aAHZ,EAIJC,QAJI,EAAP;AAKD;AAED;;;;;;AAKA,SAAgBC,eAAeC;AAC7B,IACEA,IAAI,IAAIhB,QAAR,IAAoBgB,IAAI,IAAIjB,QAD9B,4CAAAlN,SAAS,2BAEUmO,IAFV,4BAEqChB,QAFrC,UAEkDD,QAFlD,OAAT,GAAAlN,SAAS,OAAT;AAIA,SAAOoN,MAAM,CAACnO,GAAP,CAAWkP,IAAI,GAAG,CAAlB,CAAP;AACD;AAED;;;;;;AAKA,SAAgBC,WAAWC;AACzB,GACEA,KAAK,CAACT,QAAN,CAAeN,SAAf,CADF,2CAAAtN,SAAS,2BAEUqO,KAAK,CAAC/N,QAAN,EAFV,cAEmCgN,SAFnC,kBAAT,GAAAtN,SAAS,OAAT;AAIA,GACEqO,KAAK,CAACR,WAAN,CAAkBN,SAAlB,CADF,2CAAAvN,SAAS,2BAEUqO,KAAK,CAAC/N,QAAN,EAFV,cAEmCiN,SAFnC,iBAAT,GAAAvN,SAAS,OAAT;AAIA,SAAOqO,KAAK,CACTP,GADI,CACAV,MADA,EAEJW,IAFI,CAEC,CAFD,EAEIvP,SAAO,CAACwP,aAFZ,EAGJC,QAHI,EAAP;AAID;AAED;;;;;;AAKA,SAAgBK,WAAWH;AACzB,IACEA,IAAI,IAAIhB,QAAR,IAAoBgB,IAAI,IAAIjB,QAD9B,4CAAAlN,SAAS,2BAEUmO,IAFV,4BAEqChB,QAFrC,UAEkDD,QAFlD,OAAT,GAAAlN,SAAS,OAAT;AAIA,SAAOoN,MAAM,CAACnO,GAAP,CAAWkP,IAAX,CAAP;AACD;AAED;;;;;;;;;AAQA,SAAgBI,eACdZ,WACAjE,WACA8E;AAEA,SAAOC,yBAAyB,CAACd,SAAD,EAAYjE,SAAZ,CAAhC;AACD;AAED;;;;;;;AAMA,SAAgB+E,0BACdd,WACAjE;AAEA,IACEA,SAAS,GAAG,CAAZ,IAAiBA,SAAS,GAAG,CAAZ,KAAkB,CADrC,4CAAA1J,SAAS,+BAEc0J,SAFd,CAAT,GAAA1J,SAAS,OAAT;AAIA,GACE2N,SAAS,CAACC,QAAV,CAAmBJ,cAAnB,CADF,2CAAAxN,SAAS,gCAEe2N,SAAS,CAACrN,QAAV,EAFf,cAE4CkN,cAF5C,iBAAT,GAAAxN,SAAS,OAAT;AAIA,GACE2N,SAAS,CAACE,WAAV,CAAsBJ,cAAtB,CADF,2CAAAzN,SAAS,gCAEe2N,SAAS,CAACrN,QAAV,EAFf,eAE6CmN,cAF7C,iBAAT,GAAAzN,SAAS,OAAT;AAIA,MAAI0O,CAAC,GAAGhB,cAAc,CAACC,SAAD,CAAtB;AACA,MAAIgB,CAAC,GAAG,CAACD,CAAC,GAAGvB,QAAL,IAAiBzD,SAAzB;;AACA,MAAIiF,CAAC,GAAGjF,SAAS,GAAG,CAApB,EAAuB;AACrB,WAAOgF,CAAC,GAAGC,CAAJ,GAAQjF,SAAf;AACD;;AACD,SAAOgF,CAAC,GAAGC,CAAX;AACD;AAED;;;;;;;AAMA,SAAgBC,sBACdP,OACA3E;AAEA,IACEA,SAAS,GAAG,CAAZ,IAAiBA,SAAS,GAAG,CAAZ,KAAkB,CADrC,4CAAA1J,SAAS,+BAEc0J,SAFd,CAAT,GAAA1J,SAAS,OAAT;AAIA,GACEqO,KAAK,CAACT,QAAN,CAAeN,SAAf,CADF,2CAAAtN,SAAS,2BAEUqO,KAAK,CAAC/N,QAAN,EAFV,cAEmCgN,SAFnC,kBAAT,GAAAtN,SAAS,OAAT;AAIA,GACEqO,KAAK,CAACR,WAAN,CAAkBN,SAAlB,CADF,2CAAAvN,SAAS,2BAEUqO,KAAK,CAAC/N,QAAN,EAFV,cAEmCiN,SAFnC,iBAAT,GAAAvN,SAAS,OAAT;AAIA,MAAI0O,CAAC,GAAGN,UAAU,CAACC,KAAD,CAAlB;AACA,MAAIM,CAAC,GAAG,CAACD,CAAC,GAAGvB,QAAL,IAAiBzD,SAAzB;;AACA,MAAIiF,CAAC,GAAGjF,SAAS,GAAG,CAApB,EAAuB;AACrB,WAAOgF,CAAC,GAAGC,CAAJ,GAAQjF,SAAf;AACD;;AACD,SAAOgF,CAAC,GAAGC,CAAX;AACD;AAED;;;;;;;;;;AASA,SAAgBE,iBACd9C,OACApC,kBACAH,KACAK,gBACAY;AAQA,GAAUA,QAAQ,CAACoD,WAAT,CAAqB,IAAIrP,SAAJ,CAAY,CAAZ,CAArB,CAAV,2CAAAwB,SAAS,QAAuC,mBAAvC,CAAT,GAAAA,SAAS,OAAT;AACA,GACE6J,cAAc,CAAC3I,oBAAf,CAAoC,IAAI1C,SAAJ,CAAY,CAAZ,CAApC,CADF,2CAAAwB,SAAS,QAEP,iBAFO,CAAT,GAAAA,SAAS,OAAT;AAIA,IAAU+L,KAAK,CAAChM,MAAN,GAAe,CAAzB,4CAAAC,SAAS,QAAmB,oBAAnB,CAAT,GAAAA,SAAS,OAAT;;AAEA,IAAU2J,gBAAgB,GAAGoC,KAAK,CAAC,CAAD,CAAL,CAAS+C,SAAtC,4CAAA9O,SAAS,QAAwC,cAAxC,CAAT,GAAAA,SAAS,OAAT;AACA,MAAI+O,OAAO,GAAGlF,cAAd;AACA,MAAImF,GAAG,GAAG,IAAIxQ,SAAJ,CAAY,CAAZ,CAAV;AACA,MAAIyQ,MAAM,GAAGxE,QAAb;AACA,MAAIyE,aAAa,GAAG,IAAI1Q,SAAJ,CAAY,CAAZ,CAApB;AACA,MAAI2Q,OAAO,GAAG,IAAI3Q,SAAJ,CAAY,CAAZ,CAAd;AACA,MAAI4Q,UAAU,GAAG,IAAI5Q,SAAJ,CAAY,CAAZ,CAAjB;;AACA,OAAK,IAAIiH,CAAC,GAAGsG,KAAK,CAAChM,MAAN,GAAe,CAA5B,EAA+B0F,CAAC,IAAI,CAApC,EAAuCA,CAAC,EAAxC,EAA4C;AAC1C,QAAIsJ,OAAO,CAACM,MAAR,CAAe,IAAI7Q,SAAJ,CAAY,CAAZ,CAAf,CAAJ,EAAoC;AAClCmL,MAAAA,gBAAgB,GAAGoC,KAAK,CAACtG,CAAD,CAAL,CAASqJ,SAAT,CAAmB1P,GAAnB,CAAuBiO,YAAvB,CAAnB;AACA0B,MAAAA,OAAO,GAAGA,OAAO,CAAC3P,GAAR,CAAY2M,KAAK,CAACtG,CAAD,CAAL,CAAS6J,UAArB,CAAV,CAFkC;;AAIlC;AACD;;AACD,QAAI3F,gBAAgB,GAAGoC,KAAK,CAACtG,CAAD,CAAL,CAASqJ,SAAhC,EAA2C;AACzC;AACD;;AACD,QAAIS,cAAc,GAAG5F,gBAArB;AACA,QAAI6F,cAAc,GAAGzD,KAAK,CAACtG,CAAD,CAAL,CAASqJ,SAA9B;AACA,QAAIW,WAAW,GAAGC,UAAU,CAACF,cAAD,EAAiB7F,gBAAjB,EAAmCoF,OAAnC,CAA5B;AACA,QAAIY,WAAW,GAAGF,WAAW,CAACzO,GAAZ,CAAgBwI,GAAhB,EAAqBuE,IAArB,CAA0B,CAA1B,EAA6BvP,SAAO,CAACI,UAArC,CAAlB;;AACA,QAAIqQ,MAAM,CAACrB,QAAP,CAAgB+B,WAAhB,CAAJ,EAAkC;AAChCT,MAAAA,aAAa,GAAGD,MAAhB;AACD,KAFD,MAEO;AACLC,MAAAA,aAAa,GAAGD,MAAM,CAAC7P,GAAP,CAAWuQ,WAAX,CAAhB;AACD;;AAED,QAAIF,WAAW,CAACvO,oBAAZ,CAAiCgO,aAAjC,CAAJ,EAAqD;AACnDA,MAAAA,aAAa,GAAGD,MAAM,CACnBjO,GADa,CACT,IAAIxC,SAAJ,CAAY,CAAZ,EAAeY,GAAf,CAAmBoK,GAAnB,CADS,EAEbuE,IAFa,CAER,CAFQ,EAELvP,SAAO,CAACoR,QAFH,CAAhB;;AAGA,qBAAoCC,OAAO,CACzCN,cADyC,EAEzCR,OAFyC,EAGzCG,aAHyC,CAA3C;AAAA,UAAMY,SAAN,YAAMA,SAAN;AAAA,UAAiBC,cAAjB,YAAiBA,cAAjB;;AAKAX,MAAAA,UAAU,GAAGA,UAAU,CAACzO,GAAX,CAAesO,MAAf,CAAb;AACAE,MAAAA,OAAO,GAAGA,OAAO,CAACxO,GAAR,CAAYsO,MAAM,CAAC7P,GAAP,CAAW8P,aAAX,CAAZ,CAAV;AACA,aAAO;AACLY,QAAAA,SAAS,EAAEd,GAAG,CAACrO,GAAJ,CAAQmP,SAAR,CADN;AAELV,QAAAA,UAAU,EAAVA,UAFK;AAGLD,QAAAA,OAAO,EAAPA,OAHK;AAILa,QAAAA,UAAU,EAAED,cAJP;AAKLE,QAAAA,YAAY,EAAElB;AALT,OAAP;AAOD,KAlBD,MAkBO;AACLE,MAAAA,MAAM,GAAGC,aAAa,CAAC9P,GAAd,CAAkBqQ,WAAlB,CAAT;AACAL,MAAAA,UAAU,GAAGA,UAAU,CAACzO,GAAX,CAAe8O,WAAf,EAA4B9O,GAA5B,CAAgCgP,WAAhC,CAAb;AACAR,MAAAA,OAAO,GAAGA,OAAO,CAACxO,GAAR,CAAYgP,WAAZ,CAAV;AACAX,MAAAA,GAAG,GAAGA,GAAG,CAACrO,GAAJ,CAAQuP,UAAU,CAACV,cAAD,EAAiBD,cAAjB,EAAiCR,OAAjC,CAAlB,CAAN;AACAA,MAAAA,OAAO,GAAGA,OAAO,CAAC3P,GAAR,CAAY2M,KAAK,CAACtG,CAAD,CAAL,CAAS6J,UAArB,CAAV;AACA3F,MAAAA,gBAAgB,GAAGoC,KAAK,CAACtG,CAAD,CAAL,CAASqJ,SAAT,CAAmB1P,GAAnB,CAAuBiO,YAAvB,CAAnB,CANK;AAQN;AACF;;AACD,SAAO;AACLyC,IAAAA,SAAS,EAAEd,GADN;AAELI,IAAAA,UAAU,EAAVA,UAFK;AAGLD,IAAAA,OAAO,EAAPA,OAHK;AAILa,IAAAA,UAAU,EAAErG,gBAJP;AAKLsG,IAAAA,YAAY,EAAElB;AALT,GAAP;AAOD;AAED;;;;;;;;;;AASA,SAAgBoB,iBACdpE,OACApC,kBACAH,KACAK,gBACAY;AAQA,GAAUA,QAAQ,CAACoD,WAAT,CAAqB,IAAIrP,SAAJ,CAAY,CAAZ,CAArB,CAAV,2CAAAwB,SAAS,QAAuC,mBAAvC,CAAT,GAAAA,SAAS,OAAT;AACA,GACE6J,cAAc,CAAC3I,oBAAf,CAAoC,IAAI1C,SAAJ,CAAY,CAAZ,CAApC,CADF,2CAAAwB,SAAS,QAEP,iBAFO,CAAT,GAAAA,SAAS,OAAT;AAIA,IAAU+L,KAAK,CAAChM,MAAN,GAAe,CAAzB,4CAAAC,SAAS,QAAmB,oBAAnB,CAAT,GAAAA,SAAS,OAAT;;AAEA,GACE2J,gBAAgB,CAACiE,QAAjB,CAA0B7B,KAAK,CAACA,KAAK,CAAChM,MAAN,GAAe,CAAhB,CAAL,CAAwB+O,SAAlD,CADF,2CAAA9O,SAAS,QAEP,cAFO,CAAT,GAAAA,SAAS,OAAT;AAIA,MAAI+O,OAAO,GAAGlF,cAAd;AACA,MAAImF,GAAG,GAAG,IAAIxQ,SAAJ,CAAY,CAAZ,CAAV;AACA,MAAIyQ,MAAM,GAAGxE,QAAb;AACA,MAAIyE,aAAa,GAAG,IAAI1Q,SAAJ,CAAY,CAAZ,CAApB;AACA,MAAI4Q,UAAU,GAAG,IAAI5Q,SAAJ,CAAY,CAAZ,CAAjB;AACA,MAAI2Q,OAAO,GAAG,IAAI3Q,SAAJ,CAAY,CAAZ,CAAd;;AACA,OAAK,IAAIiH,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGsG,KAAK,CAAChM,MAA1B,EAAkC0F,CAAC,EAAnC,EAAuC;AACrC,QAAIsJ,OAAO,CAACM,MAAR,CAAe,IAAI7Q,SAAJ,CAAY,CAAZ,CAAf,CAAJ,EAAoC;AAClCmL,MAAAA,gBAAgB,GAAGoC,KAAK,CAACtG,CAAD,CAAL,CAASqJ,SAAT,CAAmBnO,GAAnB,CAAuB0M,YAAvB,CAAnB;AACA0B,MAAAA,OAAO,GAAGA,OAAO,CAACpO,GAAR,CAAYoL,KAAK,CAACtG,CAAD,CAAL,CAAS6J,UAArB,CAAV;AACA;AACD;;AACD,QAAI3F,gBAAgB,GAAGoC,KAAK,CAACtG,CAAD,CAAL,CAASqJ,SAAhC,EAA2C;AACzC;AACD;;AACD,QAAIS,cAAc,GAAGxD,KAAK,CAACtG,CAAD,CAAL,CAASqJ,SAA9B;AACA,QAAIW,WAAW,GAAGS,UAAU,CAACvG,gBAAD,EAAmB4F,cAAnB,EAAmCR,OAAnC,CAA5B;AACA,QAAIY,WAAW,GAAGF,WAAW,CAACzO,GAAZ,CAAgBwI,GAAhB,EAAqBuE,IAArB,CAA0B,CAA1B,EAA6BvP,SAAO,CAACI,UAArC,CAAlB;;AACA,QAAIqQ,MAAM,CAACrB,QAAP,CAAgB+B,WAAhB,CAAJ,EAAkC;AAChCT,MAAAA,aAAa,GAAGD,MAAhB;AACD,KAFD,MAEO;AACLC,MAAAA,aAAa,GAAGD,MAAM,CAAC7P,GAAP,CAAWuQ,WAAX,CAAhB;AACD;;AACD,QAAIF,WAAW,CAACvO,oBAAZ,CAAiCgO,aAAjC,CAAJ,EAAqD;AACnDA,MAAAA,aAAa,GAAGD,MAAM,CACnBjO,GADa,CACT,IAAIxC,SAAJ,CAAY,CAAZ,EAAeY,GAAf,CAAmBoK,GAAnB,CADS,EAEbuE,IAFa,CAER,CAFQ,EAELvP,SAAO,CAACoR,QAFH,CAAhB;;AAGA,qBAAoCQ,OAAO,CACzCzG,gBADyC,EAEzCoF,OAFyC,EAGzCG,aAHyC,CAA3C;AAAA,UAAMY,SAAN,YAAMA,SAAN;AAAA,UAAiBC,cAAjB,YAAiBA,cAAjB;;AAKAX,MAAAA,UAAU,GAAGA,UAAU,CAACzO,GAAX,CAAesO,MAAf,CAAb;AACAE,MAAAA,OAAO,GAAGA,OAAO,CAACxO,GAAR,CAAYsO,MAAM,CAAC7P,GAAP,CAAW8P,aAAX,CAAZ,CAAV;AACA,aAAO;AACLY,QAAAA,SAAS,EAAEd,GAAG,CAACrO,GAAJ,CAAQmP,SAAR,CADN;AAELX,QAAAA,OAAO,EAAPA,OAFK;AAGLC,QAAAA,UAAU,EAAVA,UAHK;AAILY,QAAAA,UAAU,EAAED,cAAc,CAAC9Q,GAAf,CAAmB,CAAnB,CAJP;AAKLgR,QAAAA,YAAY,EAAElB;AALT,OAAP;AAOD,KAlBD,MAkBO;AACLE,MAAAA,MAAM,GAAGC,aAAa,CAAC9P,GAAd,CAAkBqQ,WAAlB,CAAT;AACAL,MAAAA,UAAU,GAAGA,UAAU,CAACzO,GAAX,CAAe8O,WAAf,EAA4B9O,GAA5B,CAAgCgP,WAAhC,CAAb;AACAR,MAAAA,OAAO,GAAGA,OAAO,CAACxO,GAAR,CAAYgP,WAAZ,CAAV;AACAX,MAAAA,GAAG,GAAGA,GAAG,CAACrO,GAAJ,CAAQ+O,UAAU,CAAC/F,gBAAD,EAAmB4F,cAAnB,EAAmCR,OAAnC,CAAlB,CAAN;AACAA,MAAAA,OAAO,GAAGA,OAAO,CAACpO,GAAR,CAAYoL,KAAK,CAACtG,CAAD,CAAL,CAAS6J,UAArB,CAAV;AACA3F,MAAAA,gBAAgB,GAAGoC,KAAK,CAACtG,CAAD,CAAL,CAASqJ,SAAT,CAAmBnO,GAAnB,CAAuB0M,YAAvB,CAAnB;AACD;AACF;;AACD,SAAO;AACLyC,IAAAA,SAAS,EAAEd,GADN;AAELI,IAAAA,UAAU,EAAVA,UAFK;AAGLD,IAAAA,OAAO,EAAPA,OAHK;AAILa,IAAAA,UAAU,EAAErG,gBAJP;AAKLsG,IAAAA,YAAY,EAAElB;AALT,GAAP;AAOD;AAED;;AACA,SAAgBW,WACdF,gBACAD,gBACAR;AAEA,SAAOA,OAAO,CACX5P,GADI,CACAqQ,cADA,EAEJzB,IAFI,CAEC,CAFD,EAEIvP,SAAO,CAACI,UAFZ,EAGJQ,GAHI,CAGA2P,OAAO,CAAC5P,GAAR,CAAYoQ,cAAZ,EAA4BxB,IAA5B,CAAiC,CAAjC,EAAoCvP,SAAO,CAACI,UAA5C,CAHA,CAAP;AAID;AAED;;AACA,SAAgBsR,WACdV,gBACAD,gBACAR;AAEA,SAAOA,OAAO,CACX/N,GADI,CACAuO,cAAc,CAACnQ,GAAf,CAAmBoQ,cAAnB,CADA,EAEJzB,IAFI,CAEC,CAFD,EAEIvP,SAAO,CAACI,UAFZ,CAAP;AAGD;AAED;;AACA,SAAgBiR,QACdN,gBACAR,SACAtE;AAEA,MAAIsF,cAAc,GAAGhB,OAAO,CAAC5P,GAAR,CAAYsL,QAAQ,CAAC9J,GAAT,CAAaoO,OAAO,CAAC5P,GAAR,CAAYoQ,cAAZ,CAAb,CAAZ,CAArB;AACA,MAAIc,cAAc,GAAG5F,QAAQ,CAAC9J,GAAT,CACnBoO,OAAO,CAAC5P,GAAR,CAAYoQ,cAAZ,EAA4BxB,IAA5B,CAAiC,CAAjC,EAAoCvP,SAAO,CAACI,UAA5C,CADmB,CAArB;AAGA,MAAIoQ,GAAG,GAAGD,OAAO,CACd/N,GADO,CACHuO,cADG,EAEPxB,IAFO,CAEF,CAFE,EAECvP,SAAO,CAACI,UAFT,EAGPQ,GAHO,CAIN2P,OAAO,CACJ/N,GADH,CACO+N,OADP,EAEG5P,GAFH,CAEOkR,cAFP,EAGGtC,IAHH,CAGQ,CAHR,EAGWvP,SAAO,CAACI,UAHnB,CAJM,CAAV;AASA,SAAO;AAAEkR,IAAAA,SAAS,EAAEd,GAAb;AAAkBe,IAAAA,cAAc,EAAdA;AAAlB,GAAP;AACD;AAED;;AACA,SAAgBK,QACdZ,gBACAT,SACAtE;AAEA,MAAIsF,cAAc,GAAGtF,QAAQ,CAACtL,GAAT,CAAa4P,OAAb,EAAsBpO,GAAtB,CAA0B6O,cAA1B,CAArB;AACA,MAAIa,cAAc,GAAG5F,QAAQ,CAAC9J,GAAT,CACnBoO,OAAO,CAAC/N,GAAR,CAAYwO,cAAZ,EAA4BzB,IAA5B,CAAiC,CAAjC,EAAoCvP,SAAO,CAACI,UAA5C,CADmB,CAArB;AAGA,MAAIoQ,GAAG,GAAGD,OAAO,CACd5P,GADO,CACHqQ,cADG,EAEPzB,IAFO,CAEF,CAFE,EAECvP,SAAO,CAACI,UAFT,EAGPQ,GAHO,CAIN2P,OAAO,CACJ/N,GADH,CACO+N,OADP,EAEG5P,GAFH,CAEOkR,cAFP,EAGGtC,IAHH,CAGQ,CAHR,EAGWvP,SAAO,CAACI,UAHnB,CAJM,CAAV;AASA,SAAO;AAAEkR,IAAAA,SAAS,EAAEd,GAAb;AAAkBe,IAAAA,cAAc,EAAdA;AAAlB,GAAP;AACD;;ACzZD;;;;;;;;;;AASA,SAAgBO,iBACd3H,WACAC,WACA2H,kBACA5G,kBACA6G;AAKA,IAAU7H,SAAS,GAAGC,SAAtB,4CAAA5I,SAAS,QAAwB,wCAAxB,CAAT,GAAAA,SAAS,OAAT;AACA,MAAIwP,cAAc,GAAGtB,cAAc,CAACvF,SAAD,CAAnC;AACA,MAAI4G,cAAc,GAAGrB,cAAc,CAACtF,SAAD,CAAnC;AACA,IACEe,gBAAgB,CAACzI,oBAAjB,CAAsCsO,cAAtC,KACE7F,gBAAgB,CAACxI,iBAAjB,CAAmCoO,cAAnC,CAFJ,4CAAAvP,SAAS,QAGP,mDAHO,CAAT,GAAAA,SAAS,OAAT;AAKA,MAAIyQ,GAAG,GAAG,IAAIjS,OAAJ,CAAY,CAAZ,CAAV;;AACA,MAAIgS,MAAM,KAAK,CAAf,EAAkB;AAChB,QAAIE,YAAY,GAAGH,gBAAgB,CAACpR,GAAjB,CACjBsR,GAAG,CAACtR,GAAJ,CAAQwK,gBAAR,EAA0BvK,GAA1B,CAA8BqR,GAAG,CAACtR,GAAJ,CAAQoQ,cAAR,CAA9B,CADiB,CAAnB;AAGA,QAAIoB,gBAAgB,GAAGD,YAAY,CAAC1P,GAAb,CACrB2I,gBAAgB,CAACvK,GAAjB,CAAqBoQ,cAArB,CADqB,CAAvB;AAGA,WAAO;AAAEmB,MAAAA,gBAAgB,EAAhBA,gBAAF;AAAoBD,MAAAA,YAAY,EAAZA;AAApB,KAAP;AACD,GARD,MAQO;AACL,QAAIA,aAAY,GAAGH,gBAAgB,CAACpR,GAAjB,CACjBwK,gBAAgB,CAACvK,GAAjB,CAAqBoQ,cAArB,CADiB,CAAnB;;AAGA,QAAImB,iBAAgB,GAAGD,aAAY,CAAC1P,GAAb,CACrByP,GAAG,CAACtR,GAAJ,CAAQwK,gBAAR,EAA0BvK,GAA1B,CAA8BqR,GAAG,CAACtR,GAAJ,CAAQoQ,cAAR,CAA9B,CADqB,CAAvB;;AAGA,WAAO;AAAEoB,MAAAA,gBAAgB,EAAhBA,iBAAF;AAAoBD,MAAAA,YAAY,EAAZA;AAApB,KAAP;AACD;AACF;AAED;;;;;;;;;AAQA,SAAgBE,qBACdjI,WACAC,WACAmG,SACApF;AAKA,MAAI6F,cAAc,GAAGtB,cAAc,CAACvF,SAAD,CAAnC;AACA,MAAI4G,cAAc,GAAGrB,cAAc,CAACtF,SAAD,CAAnC;;AACA,MAAIe,gBAAgB,CAACiE,QAAjB,CAA0B4B,cAA1B,CAAJ,EAA+C;AAC7C,WAAO;AACLqB,MAAAA,OAAO,EAAE9B,OAAO,CAAC5P,GAAR,CAAYqQ,cAAZ,EAA4BpQ,GAA5B,CAAgC2P,OAAO,CAAC5P,GAAR,CAAYoQ,cAAZ,CAAhC,CADJ;AAELuB,MAAAA,OAAO,EAAE,IAAItS,OAAJ,CAAY,CAAZ;AAFJ,KAAP;AAID,GALD,MAKO,IAAImL,gBAAgB,CAACkE,WAAjB,CAA6B0B,cAA7B,CAAJ,EAAkD;AACvD,WAAO;AACLsB,MAAAA,OAAO,EAAE,IAAIrS,OAAJ,CAAY,CAAZ,CADJ;AAELsS,MAAAA,OAAO,EAAE/B,OAAO,CAAC/N,GAAR,CAAYuO,cAAZ,EAA4BnQ,GAA5B,CAAgC2P,OAAO,CAAC/N,GAAR,CAAYwO,cAAZ,CAAhC;AAFJ,KAAP;AAID,GALM,MAKA;AACL,WAAO;AACLqB,MAAAA,OAAO,EAAE9B,OAAO,CAAC5P,GAAR,CAAYwK,gBAAZ,EAA8BvK,GAA9B,CAAkC2P,OAAO,CAAC5P,GAAR,CAAYoQ,cAAZ,CAAlC,CADJ;AAELuB,MAAAA,OAAO,EAAE/B,OAAO,CAAC/N,GAAR,CAAY2I,gBAAZ,EAA8BvK,GAA9B,CAAkC2P,OAAO,CAAC/N,GAAR,CAAYwO,cAAZ,CAAlC;AAFJ,KAAP;AAID;AACF;AAED;;;;;;;;AAOA,SAAgBuB,sBACdpI,WACAC,WACAoI;AAEA,IAAUrI,SAAS,GAAGC,SAAtB,4CAAA5I,SAAS,QAAwB,wCAAxB,CAAT,GAAAA,SAAS,OAAT;AACA,MAAIwP,cAAc,GAAGtB,cAAc,CAACvF,SAAD,CAAnC;AACA,MAAI4G,cAAc,GAAGrB,cAAc,CAACtF,SAAD,CAAnC;AACA,MAAI6H,GAAG,GAAG,IAAIjS,OAAJ,CAAY,CAAZ,CAAV;AACA,SAAOwS,cAAc,CAAC7R,GAAf,CACLsR,GAAG,CAACtR,GAAJ,CAAQqQ,cAAR,EAAwBpQ,GAAxB,CAA4BqR,GAAG,CAACtR,GAAJ,CAAQoQ,cAAR,CAA5B,CADK,CAAP;AAGD;AAED;;;;;;;;AAOA,SAAgB0B,sBACdtI,WACAC,WACAsI;AAEA,IAAUvI,SAAS,GAAGC,SAAtB,4CAAA5I,SAAS,QAAwB,wCAAxB,CAAT,GAAAA,SAAS,OAAT;AACA,MAAIwP,cAAc,GAAGtB,cAAc,CAACvF,SAAD,CAAnC;AACA,MAAI4G,cAAc,GAAGrB,cAAc,CAACtF,SAAD,CAAnC;AACA,SAAOsI,cAAc,CAAC/R,GAAf,CAAmBoQ,cAAc,CAACnQ,GAAf,CAAmBoQ,cAAnB,CAAnB,CAAP;AACD;AAOD;;;;;;AAKA,SAAgB2B,sBACdpF;AAMA,MAAIqF,UAAU,GAAG,IAAI5S,OAAJ,CAAY,CAAZ,CAAjB;AACA,MAAI6S,UAAU,GAAG,IAAI7S,OAAJ,CAAY,CAAZ,CAAjB;AACA,MAAM8S,QAAQ,GAAc,EAA5B;AACA,MAAIvC,OAAO,GAAY;AACrBwC,IAAAA,SAAS,EAAE,CADU;AAErBC,IAAAA,SAAS,EAAE,CAFU;AAGrBzL,IAAAA,MAAM,EAAE,IAAIvH,OAAJ,CAAY,CAAZ;AAHa,GAAvB;;AAKA,OAAK,IAAIiH,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGsG,KAAK,CAAChM,MAA1B,EAAkC0F,CAAC,EAAnC,EAAuC;AACrC,QAAIsJ,OAAO,CAAChJ,MAAR,CAAesJ,MAAf,CAAsB,CAAtB,CAAJ,EAA8B;AAC5BN,MAAAA,OAAO,CAACwC,SAAR,GAAoBxF,KAAK,CAACtG,CAAD,CAAL,CAAS0I,IAA7B;AACAY,MAAAA,OAAO,CAAChJ,MAAR,GAAiBgG,KAAK,CAACtG,CAAD,CAAL,CAAS6J,UAA1B;AACA;AACD;;AACDP,IAAAA,OAAO,CAACyC,SAAR,GAAoBzF,KAAK,CAACtG,CAAD,CAAL,CAAS0I,IAA7B;AACAiD,IAAAA,UAAU,GACRrC,OAAO,CAAChJ,MAAR,CAAe6H,QAAf,CAAwBwD,UAAxB,KAAuCA,UAAU,CAAC/B,MAAX,CAAkB,CAAlB,CAAvC,GACIN,OAAO,CAAChJ,MADZ,GAEIqL,UAHN;AAIAC,IAAAA,UAAU,GAAGtC,OAAO,CAAChJ,MAAR,CAAe8H,WAAf,CAA2BwD,UAA3B,IACTtC,OAAO,CAAChJ,MADC,GAETsL,UAFJ;AAGAC,IAAAA,QAAQ,CAACjR,IAAT,CAAc;AACZkR,MAAAA,SAAS,EAAExC,OAAO,CAACwC,SADP;AAEZC,MAAAA,SAAS,EAAEzC,OAAO,CAACyC,SAFP;AAGZzL,MAAAA,MAAM,EAAEgJ,OAAO,CAAChJ;AAHJ,KAAd;AAKAgJ,IAAAA,OAAO,CAAChJ,MAAR,GAAiBgJ,OAAO,CAAChJ,MAAR,CAAepF,GAAf,CAAmBoL,KAAK,CAACtG,CAAD,CAAL,CAAS6J,UAA5B,CAAjB;AACAP,IAAAA,OAAO,CAACwC,SAAR,GAAoBxF,KAAK,CAACtG,CAAD,CAAL,CAAS0I,IAA7B;AACD;;AACD,SAAO;AAAEkD,IAAAA,UAAU,EAAVA,UAAF;AAAcD,IAAAA,UAAU,EAAVA,UAAd;AAA0BE,IAAAA,QAAQ,EAARA;AAA1B,GAAP;AACD;;ICxHYG,QAAQ,gBAAG,IAAIjP,SAAJ,CAAc,kCAAd,CAAjB;AAePhE,OAAO,CAACC,MAAR,CAAe;AACbC,EAAAA,SAAS,EAAE,EADE;AAEbC,EAAAA,QAAQ,EAAEH,OAAO,CAACkT,eAFL;AAGb7S,EAAAA,QAAQ,EAAE,CAAC,EAHE;AAIbC,EAAAA,QAAQ,EAAE;AAJG,CAAf;AAOA;;;;AAGA,IAAa6S,SAAb;AAuCE;;;;;;;AAOA,qBACE/N,IADF,EAEE0B,SAFF,EAGEuC,YAHF,EAIElD,KAJF;AA5CQ,kBAAA,GAAuB8M,QAAvB;AACA,qBAAA,GAA0BA,QAA1B;AAED,kBAAA,GAAuBA,QAAvB;AACA,iBAAA,GAAoB,KAApB;AACA,oBAAA,GAAsB,CAAtB;AACA,sBAAA,GAAkC;AACvC5J,MAAAA,YAAY,EAAE4J,QADyB;AAEvC/F,MAAAA,WAAW,EAAE,CAF0B;AAGvCkG,MAAAA,OAAO,EAAE,CAH8B;AAIvCvL,MAAAA,aAAa,EAAE,CAJwB;AAKvCiD,MAAAA,KAAK,EAAE,CALgC;AAMvCuI,MAAAA,cAAc,EAAErN,gBANuB;AAOvC2E,MAAAA,OAAO,EAAEsI,QAP8B;AAQvCrI,MAAAA,aAAa,EAAEqI,QARwB;AASvCpI,MAAAA,aAAa,EAAEoI,QATwB;AAUvC1J,MAAAA,UAAU,EAAE0J,QAV2B;AAWvCzJ,MAAAA,UAAU,EAAEyJ,QAX2B;AAYvCK,MAAAA,UAAU,EAAEL,QAZ2B;AAavCM,MAAAA,UAAU,EAAEN,QAb2B;AAcvCpJ,MAAAA,QAAQ,EAAEoJ,QAd6B;AAevCtK,MAAAA,YAAY,EAAEsK,QAfyB;AAgBvClI,MAAAA,SAAS,EAAE,CAhB4B;AAiBvCC,MAAAA,GAAG,EAAE,IAAIhL,OAAJ,CAAY,CAAZ,CAjBkC;AAkBvCiL,MAAAA,UAAU,EAAE,IAAIjL,OAAJ,CAAY,CAAZ,CAlB2B;AAmBvCkL,MAAAA,SAAS,EAAE,CAnB4B;AAoBvCC,MAAAA,gBAAgB,EAAE,IAAInL,OAAJ,CAAY,CAAZ,CApBqB;AAqBvCqL,MAAAA,cAAc,EAAE,IAAIrL,OAAJ,CAAY,CAAZ,CArBuB;AAsBvCsL,MAAAA,gBAAgB,EAAE,IAAItL,OAAJ,CAAY,CAAZ,CAtBqB;AAuBvCuL,MAAAA,gBAAgB,EAAE,IAAIvL,OAAJ,CAAY,CAAZ,CAvBqB;AAwBvCwL,MAAAA,WAAW,EAAE,IAAIxL,OAAJ,CAAY,CAAZ,CAxB0B;AAyBvCyL,MAAAA,WAAW,EAAE,IAAIzL,OAAJ,CAAY,CAAZ;AAzB0B,KAAlC;AA2BA,cAAA,GAAgB,EAAhB;AAiBL,SAAKoF,IAAL,GAAYA,IAAZ;AACA,SAAKiE,YAAL,GAAoBA,YAApB;AACA,SAAKvC,SAAL,GAAiBA,SAAjB;AACA,SAAKX,KAAL,GAAaA,KAAb;AACA,SAAKgI,SAAL,GAAiB,IAAIqF,GAAJ,EAAjB;AACA,SAAKC,aAAL,GAAqB,IAAID,GAAJ,EAArB;AACD;AAED;;;;;;AA5DF;;AAAA,SAgEEE,eAhEF,GAgEE,yBAAgBvN,KAAhB;AACE,SAAKA,KAAL,GAAaA,KAAb;AACD;AAED;;;AApEF;;AAAA,SAuEQwN,IAvER;AAAA;AAAA;AAAA,4EAuEE;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AACM1T,cAAAA,MADN,GACyC;AACrC2T,gBAAAA,QAAQ,EAAE,QAD2B;AAErCC,gBAAAA,OAAO,EAAE,CACP;AACEC,kBAAAA,MAAM,EAAE;AACNhQ,oBAAAA,MAAM,EAAE,CADF;AAENiQ,oBAAAA,KAAK,EAAE,KAAK1K,YAAL,CAAkB5C,QAAlB;AAFD;AADV,iBADO;AAF4B,eADzC;AAAA;AAAA,qBAYuB,KAAKrB,IAAL,CAAU4O,kBAAV,CAA6B,KAAKlN,SAAlC,EAA6C7G,MAA7C,CAZvB;;AAAA;AAYM8G,cAAAA,QAZN;AAaEA,cAAAA,QAAQ,CAACkN,GAAT,CAAa,UAAClR,IAAD;AACX,oBAAIwL,kBAAkB,CAACxL,IAAI,CAACwD,OAAN,CAAtB,EAAsC;AACpC,sBAAIwG,IAAI,GAAGyB,qBAAqB,CAACzL,IAAI,CAACoE,MAAN,EAAcpE,IAAI,CAACwD,OAAnB,CAAhC;AACA,oBACE,CAAAwG,IAAI,QAAJ,YAAAA,IAAI,CAAEvG,IAAN,MAAezG,SADjB,4CAAAyB,SAAS,QAEP,qCAFO,CAAT,GAAAA,SAAS,OAAT;AAIA,kBAAA,KAAI,CAAC0S,aAAL,GAAqBnH,IAAI,CAACvG,IAA1B;AACD,iBAPD,MAOO,IAAIsG,cAAc,CAAC/J,IAAI,CAACwD,OAAN,CAAlB,EAAkC;AACvC,sBAAIwG,KAAI,GAAGC,iBAAiB,CAACjK,IAAI,CAACoE,MAAN,EAAcpE,IAAI,CAACwD,OAAnB,CAA5B;;AACA,oBAAU,CAAAwG,KAAI,QAAJ,YAAAA,KAAI,CAAEvG,IAAN,MAAezG,SAAzB,4CAAAyB,SAAS,QAA2B,+BAA3B,CAAT,GAAAA,SAAS,OAAT;AACA,kBAAA,KAAI,CAAC+L,KAAL,GAAaR,KAAI,CAACvG,IAAL,CAAU+G,KAAvB;AACD,iBAJM,MAIA,IAAIQ,kBAAkB,CAAChL,IAAI,CAACwD,OAAN,CAAtB,EAAsC;AAC3C,sBAAIwG,MAAI,GAAGiB,qBAAqB,CAACjL,IAAI,CAACoE,MAAN,EAAcpE,IAAI,CAACwD,OAAnB,CAAhC;;AACA,oBACE,CAAAwG,MAAI,QAAJ,YAAAA,MAAI,CAAEvG,IAAN,MAAezG,SADjB,4CAAAyB,SAAS,QAEP,wCAFO,CAAT,GAAAA,SAAS,OAAT;;AAIA,kBAAA,KAAI,CAACiS,aAAL,CAAmBU,GAAnB,CAAuBpR,IAAI,CAACoE,MAA5B,EAAoC4F,MAAI,CAACvG,IAAL,CAAU2H,SAAV,CAAoB5M,MAAxD;;AACA,uBAAK,IAAI0F,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG8F,MAAI,CAACvG,IAAL,CAAU2H,SAAV,CAAoB5M,MAAxC,EAAgD0F,CAAC,EAAjD,EAAqD;AACnD,wBAAImN,CAAC,GAAGrH,MAAI,CAACvG,IAAL,CAAU2H,SAAV,CAAoBlH,CAApB,CAAR;;AACA,oBAAA,KAAI,CAACkH,SAAL,CAAegG,GAAf,CAAmBC,CAAC,CAACC,UAAF,CAAa5N,QAAb,EAAnB,EAA4C;AAC1CkC,sBAAAA,YAAY,EAAE5F,IAAI,CAACoE,MADuB;AAE1CnE,sBAAAA,KAAK,EAAE,IAAIhD,OAAJ,CAAYiH,CAAZ,CAFmC;AAG1CqN,sBAAAA,UAAU,EAAEF,CAAC,CAACC,UAH4B;AAI1CtB,sBAAAA,SAAS,EAAEqB,CAAC,CAACrB,SAJ6B;AAK1CC,sBAAAA,SAAS,EAAEoB,CAAC,CAACpB,SAL6B;AAM1CzC,sBAAAA,OAAO,EAAE6D,CAAC,CAAC7D,OAN+B;AAO1CgE,sBAAAA,oBAAoB,EAAEH,CAAC,CAACG,oBAPkB;AAQ1CC,sBAAAA,oBAAoB,EAAEJ,CAAC,CAACI,oBARkB;AAS1CC,sBAAAA,SAAS,EAAEL,CAAC,CAACK,SAT6B;AAU1CC,sBAAAA,SAAS,EAAEN,CAAC,CAACM;AAV6B,qBAA5C;AAYD;AACF,iBAtBM,MAsBA;AACLC,kBAAAA,OAAO,CAACrF,GAAR,CACE,iCADF,EAEEvM,IAAI,CAACoE,MAAL,CAAYrF,QAAZ,EAFF,EAGEiB,IAAI,CAACwD,OAAL,CAAaC,IAAb,CAAkBjF,MAHpB;AAKD;AACF,eAzCD;;AAbF,oBAuDM,KAAKmH,SAAL,CAAe5G,QAAf,OAA8BmR,QAAQ,CAACnR,QAAT,EAvDpC;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAwD8BkC,SAAS,CAAC4Q,kBAAV,CACxB,CAAC,KAAKvL,YAAL,CAAkBxG,QAAlB,EAAD,CADwB,EAExB,KAAKiE,SAFmB,CAxD9B;;AAAA;AAAA;AAwDW4B,cAAAA,SAxDX;AA4DI,mBAAKA,SAAL,GAAiBA,SAAjB;;AA5DJ;AA8DE,mBAAKmM,QAAL,GAAgB,IAAhB;AACA,mBAAKC,WAAL,GAAmB5F,cAAc,CAAC,KAAKgF,aAAL,CAAmB/I,gBAApB,CAAjC;AA/DF,+CAgES,IAhET;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAvEF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AA0IE;;;;;;;;;;;;;;AA1IF;;AAAA,YAwJe4J,eAxJf;AAAA;AAAA;AAAA,uFAwJE,kBACE3P,IADF,EAEE0B,SAFF,EAGEwM,UAHF,EAIEC,UAJF,EAKE5I,OALF,EAMEK,GANF,EAOEC,UAPF,EAQEC,SARF,EASE8J,eATF,EAUE7O,KAVF,EAWE8O,OAXF;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,kBAWEA,OAXF;AAWEA,gBAAAA,OAXF,GAWqB,KAXrB;AAAA;;AAaE;AACMxG,cAAAA,gBAdR,GAc2ByG,OAAO,CAACC,QAAR,EAd3B;AAeQ1H,cAAAA,YAfR,GAeuByH,OAAO,CAACC,QAAR,EAfvB;AAgBQ/G,cAAAA,gBAhBR,GAgB2B8G,OAAO,CAACC,QAAR,EAhB3B;AAAA;AAAA,qBAiBmCnR,SAAS,CAAC4Q,kBAAV,CAC/B,CAACnG,gBAAgB,CAAC/K,SAAjB,CAA2Bb,QAA3B,EAAD,CAD+B,EAE/BiE,SAF+B,CAjBnC;;AAAA;AAAA;AAiBS4B,cAAAA,SAjBT;AAiBoBoC,cAAAA,KAjBpB;AAAA;AAAA,qBAqBqC1F,IAAI,CAACgQ,iCAAL,CACjCzI,kBADiC,CArBrC;;AAAA;AAqBQ0I,cAAAA,oBArBR;AAAA;AAAA,qBAwByCjQ,IAAI,CAACgQ,iCAAL,CACrC1H,sBADqC,CAxBzC;;AAAA;AAwBQ4H,cAAAA,wBAxBR;AAAA;AAAA,qBA2ByClQ,IAAI,CAACgQ,iCAAL,CACrC9G,uBADqC,CA3BzC;;AAAA;AA2BQiH,cAAAA,wBA3BR;AA8BMlQ,cAAAA,WA9BN,GA8BoB,IAAImQ,WAAJ,GAAkBrT,GAAlB,CAChBsT,aAAa,CAACC,aAAd,CAA4B;AAC1BC,gBAAAA,UAAU,EAAExP,KAAK,CAACzC,SADQ;AAE1BkS,gBAAAA,gBAAgB,EAAEnH,gBAAgB,CAAC/K,SAFT;AAG1BmS,gBAAAA,QAAQ,EAAEN,wBAHgB;AAI1BO,gBAAAA,KAAK,EAAExH,uBAJmB;AAK1BxH,gBAAAA,SAAS,EAAEA;AALe,eAA5B,CADgB,EAQhB2O,aAAa,CAACC,aAAd,CAA4B;AAC1BC,gBAAAA,UAAU,EAAExP,KAAK,CAACzC,SADQ;AAE1BkS,gBAAAA,gBAAgB,EAAEnI,YAAY,CAAC/J,SAFL;AAG1BmS,gBAAAA,QAAQ,EAAER,oBAHgB;AAI1BS,gBAAAA,KAAK,EAAEnJ,kBAJmB;AAK1B7F,gBAAAA,SAAS,EAAEA;AALe,eAA5B,CARgB,EAehB2O,aAAa,CAACC,aAAd,CAA4B;AAC1BC,gBAAAA,UAAU,EAAExP,KAAK,CAACzC,SADQ;AAE1BkS,gBAAAA,gBAAgB,EAAExH,gBAAgB,CAAC1K,SAFT;AAG1BmS,gBAAAA,QAAQ,EAAEP,wBAHgB;AAI1BQ,gBAAAA,KAAK,EAAEpI,sBAJmB;AAK1B5G,gBAAAA,SAAS,EAAEA;AALe,eAA5B,CAfgB,CA9BpB;;AAAA;AAAA,qBAuDyBnB,yBAAyB,CAAC2N,UAAD,EAAa5K,SAAb,CAvDlD;;AAAA;AAuDMa,cAAAA,UAvDN;AAAA;AAAA,qBAwDyB5D,yBAAyB,CAAC4N,UAAD,EAAa7K,SAAb,CAxDlD;;AAAA;AAwDMc,cAAAA,UAxDN;AAyDEnE,cAAAA,WAAW,CAAClD,GAAZ,CACE8D,uCAAuC,CACrCqN,UADqC,EAErC/J,UAFqC,EAGrCb,SAHqC,EAIrCvC,KAAK,CAACzC,SAJ+B,CADzC,EAOEuC,uCAAuC,CACrCsN,UADqC,EAErC/J,UAFqC,EAGrCd,SAHqC,EAIrCvC,KAAK,CAACzC,SAJ+B,CAPzC,EAzDF;;AAyEQyH,cAAAA,gBAzER,GAyE2B6J,eAAe,CAACe,IAAhB,EAzE3B;AA0EQC,cAAAA,MA1ER,GA0EiB,IAAIlQ,KAAJ,CAAUV,IAAV,EAAgBkO,UAAhB,EAA4BtN,gBAA5B,EAA8CG,KAA9C,CA1EjB;AA2EQ8P,cAAAA,MA3ER,GA2EiB,IAAInQ,KAAJ,CAAUV,IAAV,EAAgBmO,UAAhB,EAA4BvN,gBAA5B,EAA8CG,KAA9C,CA3EjB;AAAA;AAAA,qBA4E8B6P,MAAM,CAACE,gCAAP,CAC1BvL,OAD0B,CA5E9B;;AAAA;AA4EQC,cAAAA,aA5ER;AAAA;AAAA,qBA+E8BqL,MAAM,CAACC,gCAAP,CAC1BvL,OAD0B,CA/E9B;;AAAA;AA+EQE,cAAAA,aA/ER;AAmFQE,cAAAA,SAnFR,GAmFoB,CAnFpB;AAoFE1F,cAAAA,WAAW,CAAClD,GAAZ,CACEuI,qBAAqB,CACnB5D,SADmB,EAEnB2H,gBAAgB,CAAC/K,SAFE,EAGnBgF,SAHmB,EAInBiC,OAJmB,EAKnBC,aAAa,CAACvE,OALK,EAMnBwE,aAAa,CAACxE,OANK,EAOnBkD,UAPmB,EAQnBC,UARmB,EASnBiE,YAAY,CAAC/J,SATM,EAUnB0K,gBAAgB,CAAC1K,SAVE,EAWnBoH,KAXmB,EAYnBC,SAZmB,EAanBC,GAbmB,EAcnBC,UAdmB,EAenBC,SAfmB,EAgBnBC,gBAhBmB,CADvB,EApFF;;AAAA;AAAA,qBA0GmBhG,yBAAyB,CACxCC,IADwC,EAExCC,WAFwC,EAGxCc,KAHwC,EAIxCsI,gBAJwC,EAKxChB,YALwC,EAMxCW,gBANwC,CA1G5C;;AAAA;AA0GQ+H,cAAAA,EA1GR;;AAkHE,kBAAIlB,OAAJ,EAAa;AACXN,gBAAAA,OAAO,CAACrF,GAAR,CAAY6G,EAAZ;AACD;;AApHH;AAAA,qBAsHe,IAAIhD,SAAJ,CACX/N,IADW,EAEX0B,SAFW,EAGX2H,gBAAgB,CAAC/K,SAHN,EAIXyC,KAJW,EAKXwN,IALW,EAtHf;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAxJF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAsRE;;;;;;;;;;;;AAtRF;;AAAA,SAkSQyC,YAlSR;AAAA;AAAA;AAAA,oFAkSE,kBACE3M,UADF,EAEEC,UAFF,EAGEqJ,SAHF,EAIEC,SAJF,EAKEzC,OALF,EAME8F,cANF,EAOEC,cAPF,EAQEC,qBARF,EASEpQ,KATF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBASEA,KATF;AASEA,gBAAAA,KATF,GASyB,IATzB;AAAA;;AAAA,mBAWM,KAAK0O,QAXX;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAYU,KAAKlB,IAAL,EAZV;;AAAA;AAcE,gBACEZ,SAAS,GAAGC,SADd,4CAAAxR,SAAS,QAEP,2CAFO,CAAT,GAAAA,SAAS,OAAT;AAIA2E,cAAAA,KAAK,GAAGA,KAAK,IAAI,IAAT,GAAgBA,KAAhB,GAAwB,KAAKA,KAArC;AACA,gBAAUA,KAAK,IAAI,IAAnB,4CAAA3E,SAAS,QAAgB,mBAAhB,CAAT,GAAAA,SAAS,OAAT,UAnBF;;AAsBQgV,cAAAA,cAtBR,GAsByBtB,OAAO,CAACC,QAAR,EAtBzB;AAAA;AAAA,qBAuBwBxP,yBAAyB,CAC7C6Q,cAAc,CAAC9S,SAD8B,EAE7CyC,KAAK,CAACzC,SAFuC,CAvBjD;;AAAA;AAuBQkG,cAAAA,OAvBR;AAAA;AAAA,qBA2BgC9D,KAAK,CAAC2Q,iCAAN,CAC5B,KAAKrR,IADuB,CA3BhC;;AAAA;AA2BQsR,cAAAA,eA3BR;AA8BQ/N,cAAAA,YA9BR,GA8BuB,KAAKgO,cAAL,EA9BvB;AA+BE,gBAAUhO,YAAY,IAAI,IAA1B,4CAAAnH,SAAS,QAAuB,oCAAvB,CAAT,GAAAA,SAAS,OAAT;AACI6D,cAAAA,WAhCN,GAgCoB,IAAImQ,WAAJ,EAhCpB;AAiCEnQ,cAAAA,WAAW,CAAClD,GAAZ,CACEsT,aAAa,CAACC,aAAd,CAA4B;AAC1BC,gBAAAA,UAAU,EAAExP,KAAK,CAACzC,SADQ;AAE1BkS,gBAAAA,gBAAgB,EAAEY,cAAc,CAAC9S,SAFP;AAG1BmS,gBAAAA,QAAQ,EAAEa,eAHgB;AAI1BZ,gBAAAA,KAAK,EAAEc,UAAU,CAAC/N,IAJQ;AAK1B/B,gBAAAA,SAAS,EAAEd;AALe,eAA5B,CADF,EAQEF,KAAK,CAAC+Q,yBAAN,CACE7Q,gBADF,EAEEwQ,cAAc,CAAC9S,SAFjB,EAGE,CAHF,EAIE,KAAKgF,SAJP,EAKE,IALF,CARF,EAeEzC,uCAAuC,CACrCuQ,cAAc,CAAC9S,SADsB,EAErCkG,OAFqC,EAGrCzD,KAAK,CAACzC,SAH+B,EAIrCyC,KAAK,CAACzC,SAJ+B,CAfzC,EAjCF;;AAyDE2B,cAAAA,WAAW,CAAClD,GAAZ,CACE8H,+BAA+B,CAC7B,KAAKnD,SADwB,EAE7B,KAAKuC,YAFwB,EAG7B,KAAKX,SAHwB,EAI7B6N,qBAAqB,CAAC7S,SAJO,EAK7B+F,UAL6B,EAM7BC,UAN6B,EAO7B,KAAKwK,aAAL,CAAmB3K,UAPU,EAQ7B,KAAK2K,aAAL,CAAmB1K,UARU,EAS7BgN,cAAc,CAAC9S,SATc,EAU7BkG,OAV6B,EAW7B,KAAKsK,aAAL,CAAmBrK,QAXU,EAY7BlB,YAZ6B,EAa7B,CAb6B,EAc7BoK,SAd6B,EAe7BC,SAf6B,EAgB7BzC,OAhB6B,EAiB7B8F,cAjB6B,EAkB7BC,cAlB6B,EAmB7B,IAAItW,OAAJ,CAAY,CAAZ,CAnB6B,CADjC,EAzDF;;AAAA;AAAA,qBAkFemF,yBAAyB,CACpC,KAAKC,IAD+B,EAEpCC,WAFoC,EAGpCc,KAHoC,EAIpCoQ,qBAJoC,EAKpCC,cALoC,CAlFxC;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAlSF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AA6XE;;;;;;;;;;;;AA7XF;;AAAA,SAyYQM,eAzYR;AAAA;AAAA;AAAA,uFAyYE,kBACExC,UADF,EAEE7K,UAFF,EAGEC,UAHF,EAIE6G,OAJF,EAKE8F,cALF,EAMEC,cANF,EAOEnQ,KAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOEA,KAPF;AAOEA,gBAAAA,KAPF,GAOyB,IAPzB;AAAA;;AAAA,kBASO,KAAK0O,QATZ;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAUU,KAAKlB,IAAL,EAVV;;AAAA;AAYQoD,cAAAA,YAZR,GAYuB,KAAKC,eAAL,CAAqB1C,UAArB,CAZvB;AAaE,gBAAUyC,YAAY,IAAIhX,SAA1B,4CAAAyB,SAAS,sBAAwC8S,UAAxC,gBAAT,GAAA9S,SAAS,OAAT;AACA2E,cAAAA,KAAK,GAAGA,KAAK,IAAI,IAAT,GAAgBA,KAAhB,GAAwB,KAAKA,KAArC;AACA,gBAAUA,KAAK,KAAK,IAApB,4CAAA3E,SAAS,QAAiB,mBAAjB,CAAT,GAAAA,SAAS,OAAT;AAEIyV,cAAAA,QAjBN,GAiBiB,IAAInR,KAAJ,CAAU,KAAKV,IAAf,EAAqBkP,UAArB,EAAiCtO,gBAAjC,EAAmDG,KAAnD,CAjBjB;AAAA,6BAkBsB8Q,QAlBtB;AAAA;AAAA,qBAmBUtR,yBAAyB,CAACsR,QAAQ,CAACvT,SAAV,EAAqByC,KAAK,CAACzC,SAA3B,CAnBnC;;AAAA;AAAA;AAAA;AAAA,kCAkB+B4C,cAlB/B;;AAAA;AAkBMsD,cAAAA,OAlBN;AAqBE,gBACEA,OAAO,CAACrC,MAAR,CAAekI,QAAf,OAA8B,CADhC,4CAAAjO,SAAS,wCAEuByV,QAAQ,CAACvT,SAAT,CAAmB+C,QAAnB,EAFvB,CAAT,GAAAjF,SAAS,OAAT,UArBF;;AA2BM6D,cAAAA,WA3BN,GA2BoB,IAAImQ,WAAJ,EA3BpB;AA4BEnQ,cAAAA,WAAW,CAAClD,GAAZ,CACE8H,+BAA+B,CAC7B,KAAKnD,SADwB,EAE7B,KAAKuC,YAFwB,EAG7B,KAAKX,SAHwB,EAI7BvC,KAAK,CAACzC,SAJuB,EAK7B+F,UAL6B,EAM7BC,UAN6B,EAO7B,KAAKwK,aAAL,CAAmB3K,UAPU,EAQ7B,KAAK2K,aAAL,CAAmB1K,UARU,EAS7B8K,UAT6B,EAU7B1K,OAAO,CAACvD,OAVqB,EAW7B,KAAK6N,aAAL,CAAmBrK,QAXU,EAY7BkN,YAAY,CAACpO,YAZgB,EAa7B,CAb6B,EAc7BoO,YAAY,CAAChE,SAdgB,EAe7BgE,YAAY,CAAC/D,SAfgB,EAgB7BzC,OAhB6B,EAiB7B8F,cAjB6B,EAkB7BC,cAlB6B,EAmB7BS,YAAY,CAAC/T,KAnBgB,CADjC,EA5BF;;AAAA;AAAA,qBAqDemC,yBAAyB,CAAC,KAAKC,IAAN,EAAYC,WAAZ,EAAyBc,KAAzB,CArDxC;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAzYF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAicE;;;;;;;;;;;AAjcF;;AAAA,SA4cQ+Q,eA5cR;AAAA;AAAA;AAAA,uFA4cE,kBACE5C,UADF,EAEE7K,UAFF,EAGEC,UAHF,EAIE6G,OAJF,EAKE4G,cALF,EAMEC,cANF,EAOEjR,KAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOEA,KAPF;AAOEA,gBAAAA,KAPF,GAOyB,IAPzB;AAAA;;AAAA,kBASO,KAAK0O,QATZ;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAUU,KAAKlB,IAAL,EAVV;;AAAA;AAYQoD,cAAAA,YAZR,GAYuB,KAAKC,eAAL,CAAqB1C,UAArB,CAZvB;AAaE,gBAAUyC,YAAY,IAAIhX,SAA1B,4CAAAyB,SAAS,sBAAwC8S,UAAxC,gBAAT,GAAA9S,SAAS,OAAT;AACA2E,cAAAA,KAAK,GAAGA,KAAK,IAAI,IAAT,GAAgBA,KAAhB,GAAwB,KAAKA,KAArC;AACA,gBAAUA,KAAK,KAAK,IAApB,4CAAA3E,SAAS,QAAiB,mBAAjB,CAAT,GAAAA,SAAS,OAAT;AACIyV,cAAAA,QAhBN,GAgBiB,IAAInR,KAAJ,CAAU,KAAKV,IAAf,EAAqBkP,UAArB,EAAiCtO,gBAAjC,EAAmDG,KAAnD,CAhBjB;AAAA,6BAiBsB8Q,QAjBtB;AAAA;AAAA,qBAkBUtR,yBAAyB,CAACsR,QAAQ,CAACvT,SAAV,EAAqByC,KAAK,CAACzC,SAA3B,CAlBnC;;AAAA;AAAA;AAAA;AAAA,kCAiB+B4C,cAjB/B;;AAAA;AAiBMsD,cAAAA,OAjBN;AAoBE,gBACEA,OAAO,CAACrC,MAAR,CAAekI,QAAf,OAA8B,CADhC,4CAAAjO,SAAS,wCAEuByV,QAAQ,CAACvT,SAAT,CAAmB+C,QAAnB,EAFvB,CAAT,GAAAjF,SAAS,OAAT,UApBF;;AA0BM6D,cAAAA,WA1BN,GA0BoB,IAAImQ,WAAJ,GAAkBrT,GAAlB,CAChBiK,gCAAgC,CAC9B,KAAKtF,SADyB,EAE9B,KAAKuC,YAFyB,EAG9B,KAAKX,SAHyB,EAI9BvC,KAAK,CAACzC,SAJwB,EAK9B,KAAKwQ,aAAL,CAAmB3K,UALW,EAM9B,KAAK2K,aAAL,CAAmB1K,UANW,EAO9BC,UAP8B,EAQ9BC,UAR8B,EAS9B4K,UAT8B,EAU9B1K,OAAO,CAACvD,OAVsB,EAW9B,KAAK6N,aAAL,CAAmBrK,QAXW,EAY9BkN,YAAY,CAACpO,YAZiB,EAa9B4H,OAb8B,EAc9B4G,cAd8B,EAe9BC,cAf8B,EAgB9BL,YAAY,CAAC/T,KAhBiB,CADhB,CA1BpB;;AAAA;AAAA,qBAgDemC,yBAAyB,CAAC,KAAKC,IAAN,EAAYC,WAAZ,EAAyBc,KAAzB,CAhDxC;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KA5cF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AA+fE;;;;;;;;;;AA/fF;;AAAA,SAygBQkR,IAzgBR;AAAA;AAAA;AAAA,4EAygBE,kBACExL,UADF,EAEEC,eAFF,EAGEkG,MAHF,EAIE/F,QAJF,EAKEC,gBALF,EAME5C,qBANF,EAOEnD,KAPF;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOEA,KAPF;AAOEA,gBAAAA,KAPF,GAOyB,IAPzB;AAAA;;AAAA,kBASO,KAAK0O,QATZ;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAUU,KAAKlB,IAAL,EAVV;;AAAA;AAYExN,cAAAA,KAAK,GAAGA,KAAK,IAAI,IAAT,GAAgBA,KAAhB,GAAwB,KAAKA,KAArC;AACA,gBAAUA,KAAK,KAAK,IAApB,4CAAA3E,SAAS,QAAiB,mBAAjB,CAAT,GAAAA,SAAS,OAAT;AAbF,qBAeIwQ,MAAM,KAAK,CAAX,GACI;AACEsF,gBAAAA,OAAO,EAAE,KAAKpD,aAAL,CAAmB3K,UAD9B;AAEEgO,gBAAAA,OAAO,EAAE,KAAKrD,aAAL,CAAmB1K;AAF9B,eADJ,GAKI;AACE8N,gBAAAA,OAAO,EAAE,KAAKpD,aAAL,CAAmB1K,UAD9B;AAEE+N,gBAAAA,OAAO,EAAE,KAAKrD,aAAL,CAAmB3K;AAF9B,eApBR,EAcQ+N,OAdR,QAcQA,OAdR,EAciBC,OAdjB,QAciBA,OAdjB;AAyBMlS,cAAAA,WAzBN,GAyBoB,IAAImQ,WAAJ,GAAkBrT,GAAlB,CAChByJ,eAAe,CACb,KAAK9E,SADQ,EAEb,KAAKuC,YAFQ,EAGb,KAAKX,SAHQ,EAIbY,qBAAqB,CAAC5F,SAJT,EAKbmI,UALa,EAMbC,eANa,EAObwL,OAPa,EAQbC,OARa,EASb,KAAKrD,aAAL,CAAmBrK,QATN,EAUboC,QAVa,EAWbC,gBAXa,CADC,CAzBpB;;AAAA;AAAA,qBA0Ce/G,yBAAyB,CACpC,KAAKC,IAD+B,EAEpCC,WAFoC,EAGpCc,KAHoC,EAIpCmD,qBAJoC,CA1CxC;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAzgBF;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA,SA2jBQkO,YA3jBR;AAAA,oFA2jBE,kBAAmBvL,QAAnB,EAAsCQ,SAAtC,EAAyDtG,KAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACO,KAAK0O,QADZ;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAEU,KAAKlB,IAAL,EAFV;;AAAA;AAIMtO,cAAAA,WAJN,GAIoB,IAAImQ,WAAJ,GAAkBrT,GAAlB,CAChBqK,uBAAuB,CACrB,KAAK1F,SADgB,EAErB,KAAKuC,YAFgB,EAGrB,KAAK6K,aAAL,CAAmBrK,QAHE,EAIrBoC,QAJqB,EAKrBQ,SALqB,CADP,CAJpB;AAAA;AAAA,qBAckB,KAAKrH,IAAL,CAAUqS,mBAAV,CAA8BpS,WAA9B,EAA2C,CAACc,KAAD,CAA3C,CAdlB;;AAAA;AAcMuR,cAAAA,GAdN;AAeE/C,cAAAA,OAAO,CAACrF,GAAR,CAAYoI,GAAZ;;AAfF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KA3jBF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AA6kBE;;;;;;;;;AA7kBF;;AAAA,SAslBQC,OAtlBR;AAAA;AAAA;AAAA,+EAslBE,kBACErD,UADF,EAEE7K,UAFF,EAGEC,UAHF,EAIEvD,KAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIEA,KAJF;AAIEA,gBAAAA,KAJF,GAIyB,IAJzB;AAAA;;AAAA,kBAMO,KAAK0O,QANZ;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAOU,KAAKlB,IAAL,EAPV;;AAAA;AASQoD,cAAAA,YATR,GASuB,KAAKC,eAAL,CAAqB1C,UAArB,CATvB;AAUE,gBAAUyC,YAAY,IAAIhX,SAA1B,4CAAAyB,SAAS,sBAAwC8S,UAAxC,gBAAT,GAAA9S,SAAS,OAAT;AACA2E,cAAAA,KAAK,GAAGA,KAAK,IAAI,IAAT,GAAgBA,KAAhB,GAAwB,KAAKA,KAArC;AACA,gBAAUA,KAAK,KAAK,IAApB,4CAAA3E,SAAS,QAAiB,mBAAjB,CAAT,GAAAA,SAAS,OAAT;AACIyV,cAAAA,QAbN,GAaiB,IAAInR,KAAJ,CAAU,KAAKV,IAAf,EAAqBkP,UAArB,EAAiCtO,gBAAjC,EAAmDG,KAAnD,CAbjB;AAAA,6BAcsB8Q,QAdtB;AAAA;AAAA,qBAeUtR,yBAAyB,CAACsR,QAAQ,CAACvT,SAAV,EAAqByC,KAAK,CAACzC,SAA3B,CAfnC;;AAAA;AAAA;AAAA;AAAA,kCAc+B4C,cAd/B;;AAAA;AAcMsD,cAAAA,OAdN;AAiBE,gBACEA,OAAO,CAACrC,MAAR,CAAekI,QAAf,OAA8B,CADhC,4CAAAjO,SAAS,wCAEuByV,QAAQ,CAACvT,SAAT,CAAmB+C,QAAnB,EAFvB,CAAT,GAAAjF,SAAS,OAAT;AAKI6D,cAAAA,WAtBN,GAsBoB,IAAImQ,WAAJ,GAAkBrT,GAAlB,CAChBiH,gBAAgB,CACd,KAAKtC,SADS,EAEd,KAAKuC,YAFS,EAGd,KAAKX,SAHS,EAIdvC,KAAK,CAACzC,SAJQ,EAKd,KAAKwQ,aAAL,CAAmB1K,UALL,EAMd,KAAK0K,aAAL,CAAmB1K,UANL,EAOdC,UAPc,EAQdC,UARc,EASd4K,UATc,EAUd1K,OAAO,CAACvD,OAVM,EAWd,KAAK6N,aAAL,CAAmBrK,QAXL,EAYdkN,YAAY,CAACpO,YAZC,EAadoO,YAAY,CAAC/T,KAbC,CADA,CAtBpB;;AAAA;AAAA,qBAyCemC,yBAAyB,CAAC,KAAKC,IAAN,EAAYC,WAAZ,EAAyBc,KAAzB,CAzCxC;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAtlBF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAkoBE;;;;;;;AAloBF;;AAAA,SAyoBQyR,cAzoBR;AAAA;AAAA;AAAA,sFAyoBE,kBACEnO,UADF,EAEEC,UAFF,EAGEvD,KAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGEA,KAHF;AAGEA,gBAAAA,KAHF,GAGyB,IAHzB;AAAA;;AAAA,kBAKO,KAAK0O,QALZ;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAMU,KAAKlB,IAAL,EANV;;AAAA;AAQExN,cAAAA,KAAK,GAAGA,KAAK,IAAI,IAAT,GAAgBA,KAAhB,GAAwB,KAAKA,KAArC;AACA,gBAAUA,KAAK,KAAK,IAApB,4CAAA3E,SAAS,QAAiB,mBAAjB,CAAT,GAAAA,SAAS,OAAT;AACI6D,cAAAA,WAVN,GAUoB,IAAImQ,WAAJ,GAAkBrT,GAAlB,CAChBuJ,uBAAuB,CACrB,KAAK5E,SADgB,EAErB,KAAKuC,YAFgB,EAGrB,KAAKX,SAHgB,EAIrBvC,KAAK,CAACzC,SAJe,EAKrB,KAAKwQ,aAAL,CAAmB3K,UALE,EAMrB,KAAK2K,aAAL,CAAmB1K,UANE,EAOrBC,UAPqB,EAQrBC,UARqB,CADP,CAVpB;;AAAA;AAAA,qBAwBevE,yBAAyB,CAAC,KAAKC,IAAN,EAAYC,WAAZ,EAAyBc,KAAzB,CAxBxC;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAzoBF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAoqBE;;;;;AApqBF;;AAAA,SAyqBQ0R,mBAzqBR;AAAA;AAAA;AAAA,2FAyqBE,mBACE1R,KADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACEA,KADF;AACEA,gBAAAA,KADF,GACyB,IADzB;AAAA;;AAAA,kBAGO,KAAK0O,QAHZ;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAIU,KAAKlB,IAAL,EAJV;;AAAA;AAMExN,cAAAA,KAAK,GAAGA,KAAK,IAAI,IAAT,GAAgBA,KAAhB,GAAwB,KAAKA,KAArC;AACA,gBAAUA,KAAK,KAAK,IAApB,4CAAA3E,SAAS,QAAiB,mBAAjB,CAAT,GAAAA,SAAS,OAAT;AACI4M,cAAAA,gBARN,GAQyB8G,OAAO,CAACC,QAAR,EARzB;AAAA;AAAA,qBASuB,KAAK/P,IAAL,CAAUgQ,iCAAV,CACnB1H,sBADmB,CATvB;;AAAA;AASMmI,cAAAA,QATN;AAYMxQ,cAAAA,WAZN,GAYoB,IAAImQ,WAAJ,GAAkBrT,GAAlB,CAChBsT,aAAa,CAACC,aAAd,CAA4B;AAC1BC,gBAAAA,UAAU,EAAExP,KAAK,CAACzC,SADQ;AAE1BkS,gBAAAA,gBAAgB,EAAExH,gBAAgB,CAAC1K,SAFT;AAG1BmS,gBAAAA,QAAQ,EAARA,QAH0B;AAI1BC,gBAAAA,KAAK,EAAEpI,sBAJmB;AAK1B5G,gBAAAA,SAAS,EAAE,KAAKA;AALU,eAA5B,CADgB,EAQhB2B,0BAA0B,CACxB,KAAK3B,SADmB,EAExB,KAAK4B,SAFmB,EAGxB0F,gBAAgB,CAAC1K,SAHO,CARV,CAZpB;AAAA;AAAA,qBA2BeyB,yBAAyB,CACpC,KAAKC,IAD+B,EAEpCC,WAFoC,EAGpCc,KAHoC,EAIpCiI,gBAJoC,CA3BxC;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAzqBF;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA,SA4sBQ0J,OA5sBR;AAAA,+EA4sBE,mBACEC,SADF,EAEEnS,SAFF,EAGE2B,MAHF,EAIEmB,SAJF,EAKEvC,KALF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKEA,KALF;AAKEA,gBAAAA,KALF,GAKyB,IALzB;AAAA;;AAOEA,cAAAA,KAAK,GAAGA,KAAK,IAAI,IAAT,GAAgBA,KAAhB,GAAwB,KAAKA,KAArC;AACA,gBAAUA,KAAK,KAAK,IAApB,4CAAA3E,SAAS,QAAiB,mBAAjB,CAAT,GAAAA,SAAS,OAAT;AACIwW,cAAAA,KATN,GASc,IAAIlS,KAAJ,CAAU,KAAKV,IAAf,EAAqBQ,SAArB,EAAgCI,gBAAhC,EAAkDG,KAAlD,CATd;AAAA;AAAA,qBAUQ6R,KAAK,CAACF,OAAN,CACJC,SADI,EAEJrP,SAAS,CAAChF,SAFN,EAGJyC,KAHI,EAIJ,EAJI,EAKJoB,MAAM,CAACkI,QAAP,EALI,CAVR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KA5sBF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AA+tBE;;;;;AA/tBF;;AAAA,SAouBQwI,gBApuBR;AAAA;AAAA;AAAA,wFAouBE,mBACEpS,KADF;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACEA,KADF;AACEA,gBAAAA,KADF,GACiC9F,SADjC;AAAA;;AAGE,eAAU,KAAK8U,QAAf,2CAAArT,SAAS,QAAgB,yBAAhB,CAAT,GAAAA,SAAS,OAAT;AACAqE,cAAAA,KAAK,GAAGA,KAAK,IAAI9F,SAAT,GAAqB8F,KAArB,kBAA6B,KAAKM,KAAlC,qBAA6B,YAAYzC,SAAjD;AACA,gBAAUmC,KAAK,KAAK9F,SAApB,4CAAAyB,SAAS,QAAsB,wBAAtB,CAAT,GAAAA,SAAS,OAAT;AALF;AAAA,qBAM4BoF,gBAAgB,CAAC,KAAKxB,IAAN,EAAYS,KAAZ,CAN5C;;AAAA;AAMMqS,cAAAA,aANN;AAOM/J,cAAAA,SAPN,GAOkC,EAPlC;;AAQE,mBAASlH,CAAT,GAAa,CAAb,EAAgBA,CAAC,GAAGiR,aAAa,CAAC3W,MAAlC,EAA0C0F,CAAC,EAA3C,EAA+C;AACzCkR,gBAAAA,QADyC,GAC9B,KAAKhK,SAAL,CAAeiK,GAAf,CAAmBF,aAAa,CAACjR,CAAD,CAAb,CAAiBK,IAAjB,CAAsBb,QAAtB,EAAnB,CAD8B;;AAE7C,oBAAI0R,QAAQ,KAAKpY,SAAjB,EAA4B;AAC1BoO,kBAAAA,SAAS,CAACtM,IAAV,CAAesW,QAAf;AACD;AACF;;AAbH,iDAcShK,SAdT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KApuBF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAqvBE;;;;;;;AArvBF;;AAAA,SA4vBEkK,wBA5vBF,GA4vBE,kCACElO,SADF,EAEEC,SAFF,EAGEoI,cAHF;AAKE,KAAU,KAAKqC,QAAf,2CAAArT,SAAS,QAAgB,yBAAhB,CAAT,GAAAA,SAAS,OAAT;AACA,MACE,KAAKsT,WAAL,IAAoB1K,SADtB,4CAAA5I,SAAS,QAEP,8CAFO,CAAT,GAAAA,SAAS,OAAT;;AAIA,QAAI,KAAKsT,WAAL,GAAmB3K,SAAvB,EAAkC;AAChC,aAAO;AACLuI,QAAAA,cAAc,EAAE,IAAI1S,OAAJ,CAAY,CAAZ,CADX;AAELuQ,QAAAA,OAAO,EAAEgC,qBAAqB,CAACpI,SAAD,EAAYC,SAAZ,EAAuBoI,cAAvB;AAFzB,OAAP;AAID,KALD,MAKO;AACL,UAAIkF,GAAG,GAAG5F,gBAAgB,CACxB3H,SADwB,EAExBC,SAFwB,EAGxBoI,cAHwB,EAIxB,KAAK0B,aAAL,CAAmB/I,gBAJK,EAKxB,CALwB,CAA1B;AAOA,aAAO;AACLuH,QAAAA,cAAc,EAAEgF,GAAG,CAACvF,gBADf;AAEL5B,QAAAA,OAAO,EAAEmH,GAAG,CAACxF;AAFR,OAAP;AAID;AACF;AAED;;;;;;;AA1xBF;;AAAA,SAiyBEoG,wBAjyBF,GAiyBE,kCACEnO,SADF,EAEEC,SAFF,EAGEsI,cAHF;AAKE,KAAU,KAAKmC,QAAf,2CAAArT,SAAS,QAAgB,yBAAhB,CAAT,GAAAA,SAAS,OAAT;AACA,MACE,KAAKsT,WAAL,IAAoB3K,SADtB,4CAAA3I,SAAS,QAEP,8CAFO,CAAT,GAAAA,SAAS,OAAT;;AAIA,QAAI,KAAKsT,WAAL,GAAmB1K,SAAvB,EAAkC;AAChC,aAAO;AACLoI,QAAAA,cAAc,EAAE,IAAIxS,OAAJ,CAAY,CAAZ,CADX;AAELuQ,QAAAA,OAAO,EAAEkC,qBAAqB,CAACtI,SAAD,EAAYC,SAAZ,EAAuBsI,cAAvB;AAFzB,OAAP;AAID,KALD,MAKO;AACL,UAAIgF,GAAG,GAAG5F,gBAAgB,CACxB3H,SADwB,EAExBC,SAFwB,EAGxBsI,cAHwB,EAIxB,KAAKwB,aAAL,CAAmB/I,gBAJK,EAKxB,CALwB,CAA1B;AAOA,aAAO;AACLqH,QAAAA,cAAc,EAAEkF,GAAG,CAACvF,gBADf;AAEL5B,QAAAA,OAAO,EAAEmH,GAAG,CAACxF;AAFR,OAAP;AAID;AACF;AAED;;;;;AA/zBF;;AAAA,SAo0BEqG,sBAp0BF,GAo0BE,gCACEjE,UADF;AAGE,KAAU,KAAKO,QAAf,2CAAArT,SAAS,QAAgB,yBAAhB,CAAT,GAAAA,SAAS,OAAT;AACA,QAAMuV,YAAY,GAAG,KAAKC,eAAL,CAAqB1C,UAArB,CAArB;AACA,MACEyC,YAAY,KAAKhX,SADnB,4CAAAyB,SAAS,0BAES8S,UAAU,CAAC7N,QAAX,EAFT,gBAAT,GAAAjF,SAAS,OAAT;;AAIA,gCAA2B4Q,oBAAoB,CAC7C2E,YAAY,CAAChE,SADgC,EAE7CgE,YAAY,CAAC/D,SAFgC,EAG7C+D,YAAY,CAACxG,OAHgC,EAI7C,KAAK2D,aAAL,CAAmB/I,gBAJ0B,CAA/C;AAAA,QAAMkH,OAAN,yBAAMA,OAAN;AAAA,QAAeC,OAAf,yBAAeA,OAAf;;AAMA,WAAO;AACL/B,MAAAA,OAAO,EAAEwG,YAAY,CAACxG,OADjB;AAEL8B,MAAAA,OAAO,EAAPA,OAFK;AAGLC,MAAAA,OAAO,EAAPA;AAHK,KAAP;AAKD;AAED;;;;;AA11BF;;AAAA,SA+1BEkG,UA/1BF,GA+1BE,oBAAWlE,UAAX;AACE,KAAU,KAAKO,QAAf,2CAAArT,SAAS,QAAgB,yBAAhB,CAAT,GAAAA,SAAS,OAAT;AACA,QAAMuV,YAAY,GAAG,KAAKC,eAAL,CAAqB1C,UAArB,CAArB;AACA,MACEyC,YAAY,KAAKhX,SADnB,4CAAAyB,SAAS,0BAES8S,UAAU,CAAC7N,QAAX,EAFT,gBAAT,GAAAjF,SAAS,OAAT;AAIA,QAAIuR,SAAS,GAAgB,IAA7B;AACA,QAAIC,SAAS,GAAgB,IAA7B;;AACA,SAAK,IAAI/L,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKsG,KAAL,CAAWhM,MAA/B,EAAuC0F,CAAC,EAAxC,EAA4C;AAC1C,UAAI,KAAKsG,KAAL,CAAWtG,CAAX,EAAc0I,IAAd,IAAsBoH,YAAY,CAAChE,SAAvC,EAAkD;AAChDA,QAAAA,SAAS,GAAG,KAAKxF,KAAL,CAAWtG,CAAX,CAAZ;AACD;;AACD,UAAI,KAAKsG,KAAL,CAAWtG,CAAX,EAAc0I,IAAd,IAAsBoH,YAAY,CAAC/D,SAAvC,EAAkD;AAChDA,QAAAA,SAAS,GAAG,KAAKzF,KAAL,CAAWtG,CAAX,CAAZ;AACD;AACF;;AACD,MACE8L,SAAS,KAAK,IADhB,4CAAAvR,SAAS,qCAEoBuV,YAAY,CAAChE,SAFjC,gBAAT,GAAAvR,SAAS,OAAT;AAIA,MACEwR,SAAS,KAAK,IADhB,4CAAAxR,SAAS,qCAEoBuV,YAAY,CAAC/D,SAFjC,gBAAT,GAAAxR,SAAS,OAAT;AAKA,QAAIiX,gBAAgB,GAAG,IAAIzY,OAAJ,CAAY,CAAZ,CAAvB;AACA,QAAI0Y,gBAAgB,GAAG,IAAI1Y,OAAJ,CAAY,CAAZ,CAAvB;AACA,QAAI2Y,gBAAgB,GAAG,IAAI3Y,OAAJ,CAAY,CAAZ,CAAvB;AACA,QAAI4Y,gBAAgB,GAAG,IAAI5Y,OAAJ,CAAY,CAAZ,CAAvB;AACA,QAAImL,gBAAgB,GAAG,KAAK+I,aAAL,CAAmB/I,gBAA1C;;AAEA,QAAI4H,SAAS,CAACzC,SAAV,CAAoBlB,QAApB,CAA6BjE,gBAA7B,CAAJ,EAAoD;AAClDsN,MAAAA,gBAAgB,GAAG1F,SAAS,CAAC8F,iBAA7B;AACAH,MAAAA,gBAAgB,GAAG3F,SAAS,CAAC+F,iBAA7B;AACD,KAHD,MAGO;AACLL,MAAAA,gBAAgB,GAAG,KAAKvE,aAAL,CAAmB5I,gBAAnB,CAAoC1K,GAApC,CACjBmS,SAAS,CAAC8F,iBADO,CAAnB;AAGAH,MAAAA,gBAAgB,GAAG,KAAKxE,aAAL,CAAmB3I,gBAAnB,CAAoC3K,GAApC,CACjBmS,SAAS,CAAC+F,iBADO,CAAnB;AAGD;;AAED,QAAI9F,SAAS,CAAC1C,SAAV,CAAoBlB,QAApB,CAA6BjE,gBAA7B,CAAJ,EAAoD;AAClDwN,MAAAA,gBAAgB,GAAG,KAAKzE,aAAL,CAAmB5I,gBAAnB,CAAoC1K,GAApC,CACjBoS,SAAS,CAAC6F,iBADO,CAAnB;AAGAD,MAAAA,gBAAgB,GAAG,KAAK1E,aAAL,CAAmB3I,gBAAnB,CAAoC3K,GAApC,CACjBoS,SAAS,CAAC8F,iBADO,CAAnB;AAGD,KAPD,MAOO;AACLH,MAAAA,gBAAgB,GAAG3F,SAAS,CAAC6F,iBAA7B;AACAD,MAAAA,gBAAgB,GAAG5F,SAAS,CAAC8F,iBAA7B;AACD;;AAED,WAAO;AACLzG,MAAAA,OAAO,EAAE,KAAK6B,aAAL,CAAmB5I,gBAAnB,CACN1K,GADM,CACF6X,gBADE,EAEN7X,GAFM,CAEF+X,gBAFE,EAGN/X,GAHM,CAGFmW,YAAY,CAACxC,oBAHX,EAIN/R,GAJM,CAIFuU,YAAY,CAACxG,OAJX,EAKNpO,GALM,CAKF4U,YAAY,CAACtC,SALX,CADJ;AAOLnC,MAAAA,OAAO,EAAE,KAAK4B,aAAL,CAAmB3I,gBAAnB,CACN3K,GADM,CACF8X,gBADE,EAEN9X,GAFM,CAEFgY,gBAFE,EAGNhY,GAHM,CAGFmW,YAAY,CAACvC,oBAHX,EAINhS,GAJM,CAIFuU,YAAY,CAACxG,OAJX,EAKNpO,GALM,CAKF4U,YAAY,CAACrC,SALX;AAPJ,KAAP;AAcD;AAED;;;;;AAv6BF;;AAAA,SA46BEqE,QA56BF,GA46BE,kBACE9M,QADF;AAcE,KAAU,KAAK4I,QAAf,2CAAArT,SAAS,QAAgB,yBAAhB,CAAT,GAAAA,SAAS,OAAT;AACA,QAAMkW,GAAG,GAAGrH,gBAAgB,CAC1B,KAAK9C,KADqB,EAE1B,KAAK2G,aAAL,CAAmB/I,gBAFO,EAG1B,KAAK+I,aAAL,CAAmBlJ,GAHO,EAI1B,KAAKkJ,aAAL,CAAmB7I,cAJO,EAK1BY,QAL0B,CAA5B;AAOA,QAAI+M,aAAa,GAAG,KAAK9E,aAAL,CAAmB/I,gBAAnB,CAAoC1K,GAApC,CAAwC,CAAxC,CAApB;AACA,QAAIwY,aAAa,GAAG,IAAIjZ,OAAJ,CAAY,CAAZ,EAAeW,GAAf,CAAmBqY,aAAnB,CAApB;AACA,QAAIE,iBAAiB,GAAGxB,GAAG,CAACpG,SAAJ,CAAc3Q,GAAd,CAAkB+W,GAAG,CAAC9G,UAAtB,CAAxB;AACA,QAAIuI,iBAAiB,GAAGzB,GAAG,CAAC9G,UAAJ,CAAejQ,GAAf,CAAmB+W,GAAG,CAACpG,SAAvB,CAAxB;AACA,QAAI8H,OAAO,GAAGF,iBAAiB,CAC5BtY,GADW,CACPoY,aADO,EAEXrY,GAFW,CAEPqY,aAFO,EAGXtX,GAHW,EAAd;AAIA,QAAI2X,OAAO,GAAGF,iBAAiB,CAC5BvY,GADW,CACPqY,aADO,EAEXtY,GAFW,CAEPsY,aAFO,EAGXvX,GAHW,EAAd;AAKA,QAAI4X,WAAW,GAAG5B,GAAG,CAAClG,UAAJ,CAAe/Q,GAAf,CAAmB,CAAnB,CAAlB;AACA,QAAI8Y,WAAW,GAAG,IAAIvZ,OAAJ,CAAY,CAAZ,EAAeW,GAAf,CAAmB2Y,WAAnB,CAAlB;AAEA,WAAO;AACLhI,MAAAA,SAAS,EAAEoG,GAAG,CAACpG,SADV;AAELV,MAAAA,UAAU,EAAE8G,GAAG,CAAC9G,UAFX;AAGLD,MAAAA,OAAO,EAAE+G,GAAG,CAAC/G,OAHR;AAIL2I,MAAAA,WAAW,EAAXA,WAJK;AAKLC,MAAAA,WAAW,EAAXA,WALK;AAML9H,MAAAA,YAAY,EAAEiG,GAAG,CAACjG,YANb;AAOL2H,MAAAA,OAAO,EAAPA,OAPK;AAQLC,MAAAA,OAAO,EAAPA,OARK;AASLH,MAAAA,iBAAiB,EAAjBA,iBATK;AAULC,MAAAA,iBAAiB,EAAjBA;AAVK,KAAP;AAYD;AAED;;;;;AAh+BF;;AAAA,SAq+BEK,QAr+BF,GAq+BE,kBACEvN,QADF;AAcE,KAAU,KAAK4I,QAAf,2CAAArT,SAAS,QAAgB,yBAAhB,CAAT,GAAAA,SAAS,OAAT;AACA,QAAMkW,GAAG,GAAG/F,gBAAgB,CAC1B,KAAKpE,KADqB,EAE1B,KAAK2G,aAAL,CAAmB/I,gBAFO,EAG1B,KAAK+I,aAAL,CAAmBlJ,GAHO,EAI1B,KAAKkJ,aAAL,CAAmB7I,cAJO,EAK1BY,QAL0B,CAA5B;AAOA,QAAI+M,aAAa,GAAG,KAAK9E,aAAL,CAAmB/I,gBAAnB,CAAoC1K,GAApC,CAAwC,CAAxC,CAApB;AACA,QAAIwY,aAAa,GAAG,IAAIjZ,OAAJ,CAAY,CAAZ,EAAeW,GAAf,CAAmBqY,aAAnB,CAApB;AACA,QAAIE,iBAAiB,GAAGxB,GAAG,CAAC9G,UAAJ,CAAejQ,GAAf,CAAmB+W,GAAG,CAACpG,SAAvB,CAAxB;AACA,QAAI6H,iBAAiB,GAAGzB,GAAG,CAACpG,SAAJ,CAAc3Q,GAAd,CAAkB+W,GAAG,CAAC9G,UAAtB,CAAxB;AACA,QAAIwI,OAAO,GAAGF,iBAAiB,CAC5BtY,GADW,CACPoY,aADO,EAEXrY,GAFW,CAEPqY,aAFO,EAGXtX,GAHW,EAAd;AAIA,QAAI2X,OAAO,GAAGF,iBAAiB,CAC5BvY,GADW,CACPqY,aADO,EAEXtY,GAFW,CAEPsY,aAFO,EAGXvX,GAHW,EAAd;AAIA,QAAI4X,WAAW,GAAG5B,GAAG,CAAClG,UAAJ,CAAe/Q,GAAf,CAAmB,CAAnB,CAAlB;AACA,QAAI8Y,WAAW,GAAG,IAAIvZ,OAAJ,CAAY,CAAZ,EAAeW,GAAf,CAAmB2Y,WAAnB,CAAlB;AAEA,WAAO;AACLhI,MAAAA,SAAS,EAAEoG,GAAG,CAACpG,SADV;AAELV,MAAAA,UAAU,EAAE8G,GAAG,CAAC9G,UAFX;AAGLD,MAAAA,OAAO,EAAE+G,GAAG,CAAC/G,OAHR;AAILc,MAAAA,YAAY,EAAEiG,GAAG,CAACjG,YAJb;AAKL2H,MAAAA,OAAO,EAAPA,OALK;AAMLC,MAAAA,OAAO,EAAPA,OANK;AAOLH,MAAAA,iBAAiB,EAAjBA,iBAPK;AAQLC,MAAAA,iBAAiB,EAAjBA,iBARK;AASLG,MAAAA,WAAW,EAAXA,WATK;AAULC,MAAAA,WAAW,EAAXA;AAVK,KAAP;AAYD;AAED;;;;;AAxhCF;;AAAA,SA6hCEnJ,qBA7hCF,GA6hCE,iCAAsBP,KAAtB;AACE,KAAU,KAAKgF,QAAf,2CAAArT,SAAS,QAAgB,yBAAhB,CAAT,GAAAA,SAAS,OAAT;AACA,WAAO4O,qBAAqB,CAACP,KAAD,EAAQ,KAAKqE,aAAL,CAAmBhJ,SAA3B,CAA5B;AACD;AAED;AAliCF;;AAAA,SAmiCE8L,eAniCF,GAmiCE,yBAAgB1C,UAAhB;AACE,KAAU,KAAKO,QAAf,2CAAArT,SAAS,QAAgB,yBAAhB,CAAT,GAAAA,SAAS,OAAT;AACA,WAAO,KAAK2M,SAAL,CAAeiK,GAAf,CAAmB9D,UAAU,CAAC7N,QAAX,EAAnB,CAAP;AACD;AAED;AAxiCF;;AAAA,SAyiCEkQ,cAziCF,GAyiCE;AACE,KAAU,KAAK9B,QAAf,2CAAArT,SAAS,QAAgB,yBAAhB,CAAT,GAAAA,SAAS,OAAT;;AACA,yDAAuB,KAAKiS,aAA5B,wCAA2C;AAAA;AAAA,UAAjCgG,GAAiC;AAAA,UAA5BvU,GAA4B;;AACzC,UAAIA,GAAG,GAAG2I,2BAAV,EAAuC;AACrC,eAAO4L,GAAP;AACD;AACF;;AACD,WAAO,IAAP;AACD;AAED;AAnjCF;;AAAA,SAojCEnK,GApjCF,GAojCE;AACE,QAAInJ,KAAK,GAAG,KAAKA,KAAL,KAAe,IAAf,GAAsB,KAAKA,KAAL,CAAWzC,SAAX,CAAqB+C,QAArB,EAAtB,GAAwD,MAApE;AACAkO,IAAAA,OAAO,CAACrF,GAAR,CACEoK,IAAI,CAACC,SAAL,CACE;AACE7S,MAAAA,SAAS,EAAE,KAAKA,SAAL,CAAehF,QAAf,EADb;AAEEuH,MAAAA,YAAY,EAAE,KAAKA,YAAL,CAAkBvH,QAAlB,EAFhB;AAGEqE,MAAAA,KAAK,EAAEA,KAHT;AAIEuC,MAAAA,SAAS,EAAE,KAAKA,SAAL,CAAe5G,QAAf,EAJb;AAKEgT,MAAAA,WAAW,EAAE,KAAKA,WALpB;AAME8E,MAAAA,YAAY,EAAE,KAAK1F,aAAL,CAAmB/I,gBAAnB,CAAoC1K,GAApC,CAAwC,CAAxC,EAA2CqB,QAA3C,EANhB;AAOEoS,MAAAA,aAAa,EAAE;AACbhH,QAAAA,WAAW,EAAE,KAAKgH,aAAL,CAAmBhH,WADnB;AAEbkG,QAAAA,OAAO,EAAE,KAAKc,aAAL,CAAmBd,OAFf;AAGbvL,QAAAA,aAAa,EAAE,KAAKqM,aAAL,CAAmBrM,aAHrB;AAIbiD,QAAAA,KAAK,EAAE,KAAKoJ,aAAL,CAAmBpJ,KAJb;AAKbH,QAAAA,OAAO,EAAE,KAAKuJ,aAAL,CAAmBvJ,OAAnB,CAA2B7I,QAA3B,EALI;AAMb8I,QAAAA,aAAa,EAAE,KAAKsJ,aAAL,CAAmBtJ,aAAnB,CAAiC9I,QAAjC,EANF;AAOb+I,QAAAA,aAAa,EAAE,KAAKqJ,aAAL,CAAmBrJ,aAAnB,CAAiC/I,QAAjC,EAPF;AAQbyH,QAAAA,UAAU,EAAE,KAAK2K,aAAL,CAAmB3K,UAAnB,CAA8BzH,QAA9B,EARC;AASb0H,QAAAA,UAAU,EAAE,KAAK0K,aAAL,CAAmB1K,UAAnB,CAA8B1H,QAA9B,EATC;AAUbwR,QAAAA,UAAU,EAAE,KAAKY,aAAL,CAAmBZ,UAAnB,CAA8BxR,QAA9B,EAVC;AAWbyR,QAAAA,UAAU,EAAE,KAAKW,aAAL,CAAmBX,UAAnB,CAA8BzR,QAA9B,EAXC;AAYb+H,QAAAA,QAAQ,EAAE,KAAKqK,aAAL,CAAmBrK,QAAnB,CAA4B/H,QAA5B,EAZG;AAab6G,QAAAA,YAAY,EAAE,KAAKuL,aAAL,CAAmBvL,YAAnB,CAAgC7G,QAAhC,EAbD;AAcbiJ,QAAAA,SAAS,EAAE,KAAKmJ,aAAL,CAAmBnJ,SAdjB;AAebC,QAAAA,GAAG,EAAE,KAAKkJ,aAAL,CAAmBlJ,GAfX;AAgBbC,QAAAA,UAAU,EAAE,KAAKiJ,aAAL,CAAmBjJ,UAhBlB;AAiBbC,QAAAA,SAAS,EAAE,KAAKgJ,aAAL,CAAmBhJ,SAjBjB;AAkBbC,QAAAA,gBAAgB,EAAE,KAAK+I,aAAL,CAAmB/I,gBAlBxB;AAmBbE,QAAAA,cAAc,EAAE,KAAK6I,aAAL,CAAmB7I,cAnBtB;AAoBbC,QAAAA,gBAAgB,EAAE,KAAK4I,aAAL,CAAmB5I,gBApBxB;AAqBbC,QAAAA,gBAAgB,EAAE,KAAK2I,aAAL,CAAmB3I,gBArBxB;AAsBbC,QAAAA,WAAW,EAAE,KAAK0I,aAAL,CAAmB1I,WAtBnB;AAuBbC,QAAAA,WAAW,EAAE,KAAKyI,aAAL,CAAmBzI;AAvBnB,OAPjB;AAgCE0C,MAAAA,SAAS,EAAE0L,MAAM,CAACC,WAAP,CAAmB,KAAK3L,SAAxB,CAhCb;AAiCEsF,MAAAA,aAAa,EAAEoG,MAAM,CAACC,WAAP,CAAmB,KAAKrG,aAAxB,CAjCjB;AAkCElG,MAAAA,KAAK,EAAE,KAAKA;AAlCd,KADF,EAqCE,IArCF,EAsCE,CAtCF,CADF;AA0CD,GAhmCH;;AAAA;AAAA;;;;"}