"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var t=require("@solana/spl-token"),e=require("@solana/web3.js"),n=require("@project-serum/serum"),o=require("@saberhq/stableswap-sdk"),i=require("jsbi"),r=require("@project-serum/anchor"),s=require("@project-serum/anchor/dist/cjs/utils/pubkey"),a=require("bn.js"),u=require("@solana/buffer-layout"),c=require("@jup-ag/math"),m=require("decimal.js"),d=require("cross-fetch"),l=require("@mercurial-finance/optimist"),p=require("@jup-ag/crema-sdk"),h=require("@jup-ag/lifinity-sdk"),f=require("@jup-ag/whirlpool-sdk"),g=require("@jup-ag/cykura-sdk"),A=require("@jup-ag/cykura-sdk-core"),k=require("@project-serum/anchor/dist/cjs/utils/bytes");function w(t){return t&&"object"==typeof t&&"default"in t?t:{default:t}}function S(t){if(t&&t.__esModule)return t;var e=Object.create(null);return t&&Object.keys(t).forEach((function(n){if("default"!==n){var o=Object.getOwnPropertyDescriptor(t,n);Object.defineProperty(e,n,o.get?o:{enumerable:!0,get:function(){return t[n]}})}})),e.default=t,e}require("promise-retry");var y=w(i),M=S(r),T=w(a),P=w(m),v=w(d),b=[{wrapper:"2B5Qedoo95Pjpv9xVPw82bbmcGDGCNHroKpzQE2CNHRZ",underlying:"CASHVDm2wsJXfhj6VWxb7GiMdoLc17Du7paH4bNr5woT",underlyingDecimals:6,wrapperUnderlyingTokens:"3YCGgStAV9H7TdPYdBnRP8yoH4Zqdmyt7xo6KB4Wa8xt",mint:"C9xqJe3gMTUDKidZsZ6jJ7tL9zSLimDUKVpgUbLZnNbi",decimals:9},{wrapper:"2ffwMLE4dxSv59eYXhfhfuS81kz6gzf6DZjdBxRHZz9A",underlying:"AGFEad2et2ZJif9jaGpdMixQqvW5i81aBdvKe7PHNfz3",underlyingDecimals:6,wrapperUnderlyingTokens:"H5tnZcfHCzHueNnfd6foeBBUUW4g7qXKt6rKzT7wg6oP",mint:"FTT9rBBrYwcHam4qLvkzzzhrsihYMbZ3k6wJbdoahxAt",decimals:9},{wrapper:"3A85wiQg2REhBVxVS1CjDaS333TBNM2g37BbdNGSMheg",underlying:"CDJWUqTcYTVAKXAVXoQZFes5JUFc7owSeq7eMQcDSbo5",underlyingDecimals:8,wrapperUnderlyingTokens:"764FaQrrREvNTpaH2yXyrPZgVBaXA7AXM8vyCaevXitD",mint:"BtX7AfzEJLnU8KQR1AgHrhGH5s2AHUTbfjhUQP8BhPvi",decimals:10},{wrapper:"7hWjnVC6FNkmmgjq88LEnRycrKvxVB1MsJ6FQcrvxe4n",underlying:"9n4nbM75f5Ui33ZbPYXn59EwSgE8CGsHtAeTH5YFeJ9E",underlyingDecimals:6,wrapperUnderlyingTokens:"B22gDMgN2tNWmvyzhb5tamJKanWcUUUw2zN3h3qjgQg8",mint:"9999j2A8sXUtHtDoQdk528oVzhaKBsXyRGZ67FKGoi7H",decimals:9},{wrapper:"8zooyPZrq2mth917VrHLtNTk6GvAhc2KgdB4DGBXYyke",underlying:"AUrMpCDYYcPuHhyNX8gEEqbmDPFUpBpHrNW3vPeCFn5Z",underlyingDecimals:9,wrapperUnderlyingTokens:"7ZZyhVde6ZmnVMuFnrg3mRPHhvfBixLdEo7RnwxTtpF7",mint:"EY3s4nXTzHDiiysmjvj7zWP6yAX3n4xHmXkJWD1w1tGP",decimals:15},{wrapper:"93qsLbASEG8DmtSB2MEVaa25KvEm2afh5rzbaAJHLi5A",underlying:"7vfCXTUXx5WJV5JADk17DUJ4ksgau7utNKj4b963voxs",underlyingDecimals:8,wrapperUnderlyingTokens:"4fUL9yLbFZEuG32SaCjWqJXwDTBFNnipteBWxMvvFoC8",mint:"KNVfdSJyq1pRQk9AKKv1g5uyGuk6wpm4WG16Bjuwdma",decimals:9},{wrapper:"ACvLVgR3UKdDB3b1QapsbJsPXaUrBPdJGDfiFnMYMXoz",underlying:"F6v4wfAdJB8D8p77bMXZgYt8TDKsYxLYxH5AFhUkYx9W",underlyingDecimals:6,wrapperUnderlyingTokens:"AvqMJWHsZscPWTAUcj8dZi2ch6XQEHMpiCMprfFovaU",mint:"LUNGEjUXyP48nrC1GYY5o4eTAkwm4RdX8BxFUxWJBLB",decimals:9},{wrapper:"AnKLLfpMcceM6YXtJ9nGxYekVXqfWy8WNsMZXoQTCVQk",underlying:"EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v",underlyingDecimals:6,wrapperUnderlyingTokens:"77XHXCWYQ76E9Q3uCuz1geTaxsqJZf9RfX5ZY7yyLDYt",mint:"JEFFSQ3s8T3wKsvp4tnRAsUBW7Cqgnf8ukBZC4C8XBm1",decimals:9},{wrapper:"CGxMr5UrTjApBjU656N9NBAsGby4fWs1KgVtueQ8WKt6",underlying:"AGFEad2et2ZJif9jaGpdMixQqvW5i81aBdvKe7PHNfz3",underlyingDecimals:6,wrapperUnderlyingTokens:"7dVPR6jx3hKyNfuHPo3WtWdUpH4eh4Up4rfFhLHZqwy3",mint:"FTT8cGNp3rfTC6c44uPTuEFLqmsVDhjd2BhH65v2uppr",decimals:8},{wrapper:"D231Uoh24bXtUtWN51ZbFAFSBmGT3zuuEAHZNuCmtRjN",underlying:"CDJWUqTcYTVAKXAVXoQZFes5JUFc7owSeq7eMQcDSbo5",underlyingDecimals:8,wrapperUnderlyingTokens:"C39Wq6X98TLcrnYCMkcHQhwUurkQMUdibUCpf2fVBDsm",mint:"FACTQhZBfRzC7A76antnpAoZtiwYmUfdAN8wz7e8rxC5",decimals:9},{wrapper:"EhQqUmkUXXnxmV7yA6PDrQWvLgSd9HkrwdDKk1B5m6Tc",underlying:"CbNYA9n3927uXUukee2Hf4tm3xxkffJPPZvGazc2EAH1",underlyingDecimals:8,wrapperUnderlyingTokens:"8YC5eCS99umbK9K9LnHnTMMjnr7EWg1gam5maNB6uf9d",mint:"EU9aLffrTckFCs16da6CppHy63fAxMPF9ih1erQTuuRt",decimals:9},{wrapper:"EwWpia5t9Twiwdi8ghK8e8JHaf6ShNU9jmoYpvdZhBwC",underlying:"9vMJfxuKxXBoEa7rM12mYLMwTacLMLDJqHozw96WQL8i",underlyingDecimals:6,wrapperUnderlyingTokens:"9YB1zRL4ETuQFG8ZK1yD4GHBVDmH81EzwuSj75zdnKhK",mint:"UST8SCn7jrqsq51odVLqcmvnC658HkqrKrPL3w2hHQ7",decimals:8},{wrapper:"F9TsAsh5RirU3LqyTJECLQEGXnF4RQT7ckvexCP1KNTu",underlying:"Es9vMFrzaCERmJfrF4H2FYD4KCoNkY11McCe8BenwNYB",underlyingDecimals:6,wrapperUnderlyingTokens:"BSTjdztBrsptuxfz9JHS31Wc9CknpLeL1wqZjeVs1Ths",mint:"AEUT5uFm1D575FVCoQd5Yq891FJEqkncZUbBFoFcAhTV",decimals:9},{wrapper:"FCgoT8RpsopdM5QT6AB98NUfUnDnu7y865MFpRx93JrS",underlying:"EzfgjvkSwthhgHaceR3LnKXUoRkP6NUhfghdaHAj1tUv",underlyingDecimals:8,wrapperUnderlyingTokens:"5yugfArBAUZJJBUCRWPuiLyi6CWp1f67H9xgg3hcgSkx",mint:"FTT9GrHBVHvDeUTgLU8FxVJouGqg9uiWGmmjETdm32Sx",decimals:9},{wrapper:"FDGtFWVhEb1zxnaW2FzogeGDxLoAV7Cu9XdNYPEVwqt",underlying:"8wv2KAykQstNAj2oW6AHANGBiFKVFhvMiyyzzjhkmGvE",underlyingDecimals:6,wrapperUnderlyingTokens:"4R6PmC8BJcPDBsEMGpXpLCnFFkUZhEgZy6pMNtc2LqA4",mint:"KUANeD8EQvwpT1W7QZDtDqctLEh2FfSTy5pThE9CogT",decimals:9},{wrapper:"FPuYMuodknZuQKHA8Wp4PBbp52Qu8nK2oAuwedp2WfM3",underlying:"9vMJfxuKxXBoEa7rM12mYLMwTacLMLDJqHozw96WQL8i",underlyingDecimals:6,wrapperUnderlyingTokens:"GxpyQZi5VkZDSq5TUycMau11sCkQkVCa8xYhBgiPMsyK",mint:"UST98bfV6EASdTFQrRwCBczpehdMFwYCUdLT5tEbhpW",decimals:9},{wrapper:"Ffxi5TSpFV9NeV5KyNDCC7fWnFoFd2bDcL1eViSAE2M2",underlying:"CASHVDm2wsJXfhj6VWxb7GiMdoLc17Du7paH4bNr5woT",underlyingDecimals:6,wrapperUnderlyingTokens:"5s2et753hMXV945U3p5uz6RQqMkZGCPEjKjNPdUcCLLF",mint:"CASHedBw9NfhsLBXq1WNVfueVznx255j8LLTScto3S6s",decimals:8},{wrapper:"G4gRGymKo7MGzGZup12JS39YVCvy8YMM6KY9AmcKi5iw",underlying:"EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v",underlyingDecimals:6,wrapperUnderlyingTokens:"AQhP39mE4o6BYNwnwYqnz7ZobkPBSLpCg8WvEESq1viZ",mint:"88881Hu2jGMfCs9tMu5Rr7Ah7WBNBuXqde4nR5ZmKYYy",decimals:8},{wrapper:"GiLSv94Wwyd6suH57Fu6HjEKsMxhNGfEwKn9vT22me1p",underlying:"Es9vMFrzaCERmJfrF4H2FYD4KCoNkY11McCe8BenwNYB",underlyingDecimals:6,wrapperUnderlyingTokens:"3cjAWoyDcco8UVCN17keNUNHoyz37ctgDa7G6zkeb81Y",mint:"T8KdT8hDzNhbGx5sjpEUxepnbDB1TZoCa7vtC5JjsMw",decimals:8},{wrapper:"GpkFF2nPfjUcsavgDGscxaUEQ2hYJ563AXXtU8ohiZ7c",underlying:"9n4nbM75f5Ui33ZbPYXn59EwSgE8CGsHtAeTH5YFeJ9E",underlyingDecimals:6,wrapperUnderlyingTokens:"6hYDFhZ5ddfzoqaAbzRHm8mzG2MQzYQV9295sQHsvNBV",mint:"SBTCB6pWqeDo6zGi9WVRMLCsKsN6JiR1RMUqvLtgSRv",decimals:8},{wrapper:"fvSvtHNFuDHrAN82YEyBApRs3U6vUGCLzKGMuPmCaF8",underlying:"2FPyTwcZLUg1MDrwsyoP4D6s1tM7hAkHYRjkNb5w6Pxk",underlyingDecimals:6,wrapperUnderlyingTokens:"4JWyJ4ZYsQ8uiYue2tTEqcHcFXrDuaQ1rsyjNFfrZm65",mint:"SL819j8K9FuFPL84UepVcFkEZqDUUvVzwDmJjCHySYj",decimals:8}];const B={version:"0.1.0",name:"jupiter",instructions:[{name:"mercurialExchange",accounts:[{name:"swapProgram",isMut:!1,isSigner:!1},{name:"swapState",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"poolAuthority",isMut:!1,isSigner:!1},{name:"userTransferAuthority",isMut:!1,isSigner:!0},{name:"sourceTokenAccount",isMut:!0,isSigner:!1},{name:"destinationTokenAccount",isMut:!0,isSigner:!1}],args:[{name:"inAmount",type:{option:"u64"}},{name:"minimumOutAmount",type:"u64"},{name:"platformFeeBps",type:"u8"}]},{name:"saberExchange",accounts:[{name:"swapProgram",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"swap",isMut:!1,isSigner:!1},{name:"swapAuthority",isMut:!1,isSigner:!1},{name:"userAuthority",isMut:!1,isSigner:!1},{name:"clock",isMut:!1,isSigner:!1},{name:"inputUserAccount",isMut:!0,isSigner:!1},{name:"inputTokenAccount",isMut:!0,isSigner:!1},{name:"outputUserAccount",isMut:!0,isSigner:!1},{name:"outputTokenAccount",isMut:!0,isSigner:!1},{name:"feesTokenAccount",isMut:!0,isSigner:!1}],args:[{name:"inAmount",type:{option:"u64"}},{name:"minimumOutAmount",type:"u64"},{name:"platformFeeBps",type:"u8"}]},{name:"saberSwap",accounts:[{name:"swapProgram",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"swap",isMut:!1,isSigner:!1},{name:"swapAuthority",isMut:!1,isSigner:!1},{name:"userAuthority",isMut:!1,isSigner:!1},{name:"inputUserAccount",isMut:!0,isSigner:!1},{name:"inputTokenAccount",isMut:!0,isSigner:!1},{name:"outputUserAccount",isMut:!0,isSigner:!1},{name:"outputTokenAccount",isMut:!0,isSigner:!1},{name:"feesTokenAccount",isMut:!0,isSigner:!1}],args:[{name:"inAmount",type:{option:"u64"}},{name:"minimumOutAmount",type:"u64"},{name:"platformFeeBps",type:"u8"}]},{name:"saberAddDecimalsDeposit",accounts:[{name:"addDecimalsProgram",isMut:!1,isSigner:!1},{name:"wrapper",isMut:!1,isSigner:!1},{name:"wrapperMint",isMut:!0,isSigner:!1},{name:"wrapperUnderlyingTokens",isMut:!0,isSigner:!1},{name:"owner",isMut:!1,isSigner:!0},{name:"userUnderlyingTokens",isMut:!0,isSigner:!1},{name:"userWrappedTokens",isMut:!0,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1}],args:[{name:"inAmount",type:{option:"u64"}},{name:"minimumOutAmount",type:"u64"},{name:"platformFeeBps",type:"u8"}]},{name:"saberAddDecimalsWithdraw",accounts:[{name:"addDecimalsProgram",isMut:!1,isSigner:!1},{name:"wrapper",isMut:!1,isSigner:!1},{name:"wrapperMint",isMut:!0,isSigner:!1},{name:"wrapperUnderlyingTokens",isMut:!0,isSigner:!1},{name:"owner",isMut:!1,isSigner:!0},{name:"userUnderlyingTokens",isMut:!0,isSigner:!1},{name:"userWrappedTokens",isMut:!0,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1}],args:[{name:"inAmount",type:{option:"u64"}},{name:"minimumOutAmount",type:"u64"},{name:"platformFeeBps",type:"u8"}]},{name:"senchaExchange",accounts:[{name:"swapProgram",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"swap",isMut:!0,isSigner:!1},{name:"userAuthority",isMut:!1,isSigner:!1},{name:"inputUserAccount",isMut:!0,isSigner:!1},{name:"inputTokenAccount",isMut:!0,isSigner:!1},{name:"inputFeesAccount",isMut:!0,isSigner:!1},{name:"outputUserAccount",isMut:!0,isSigner:!1},{name:"outputTokenAccount",isMut:!0,isSigner:!1},{name:"outputFeesAccount",isMut:!0,isSigner:!1}],args:[{name:"inAmount",type:{option:"u64"}},{name:"minimumOutAmount",type:"u64"},{name:"platformFeeBps",type:"u8"}]},{name:"serumSwap",accounts:[{name:"market",accounts:[{name:"market",isMut:!0,isSigner:!1},{name:"openOrders",isMut:!0,isSigner:!1},{name:"requestQueue",isMut:!0,isSigner:!1},{name:"eventQueue",isMut:!0,isSigner:!1},{name:"bids",isMut:!0,isSigner:!1},{name:"asks",isMut:!0,isSigner:!1},{name:"coinVault",isMut:!0,isSigner:!1},{name:"pcVault",isMut:!0,isSigner:!1},{name:"vaultSigner",isMut:!1,isSigner:!1}]},{name:"authority",isMut:!1,isSigner:!0},{name:"orderPayerTokenAccount",isMut:!0,isSigner:!1},{name:"coinWallet",isMut:!0,isSigner:!1},{name:"pcWallet",isMut:!0,isSigner:!1},{name:"dexProgram",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"rent",isMut:!1,isSigner:!1}],args:[{name:"side",type:{defined:"Side"}},{name:"inAmount",type:{option:"u64"}},{name:"minimumOutAmount",type:"u64"},{name:"platformFeeBps",type:"u8"}]},{name:"tokenSwap",accounts:[{name:"tokenSwapProgram",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"swap",isMut:!1,isSigner:!1},{name:"authority",isMut:!1,isSigner:!1},{name:"userTransferAuthority",isMut:!1,isSigner:!0},{name:"source",isMut:!0,isSigner:!1},{name:"swapSource",isMut:!0,isSigner:!1},{name:"swapDestination",isMut:!0,isSigner:!1},{name:"destination",isMut:!0,isSigner:!1},{name:"poolMint",isMut:!0,isSigner:!1},{name:"poolFee",isMut:!0,isSigner:!1}],args:[{name:"inAmount",type:{option:"u64"}},{name:"minimumOutAmount",type:"u64"},{name:"platformFeeBps",type:"u8"}]},{name:"stepTokenSwap",accounts:[{name:"tokenSwapProgram",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"swap",isMut:!1,isSigner:!1},{name:"authority",isMut:!1,isSigner:!1},{name:"userTransferAuthority",isMut:!1,isSigner:!0},{name:"source",isMut:!0,isSigner:!1},{name:"swapSource",isMut:!0,isSigner:!1},{name:"swapDestination",isMut:!0,isSigner:!1},{name:"destination",isMut:!0,isSigner:!1},{name:"poolMint",isMut:!0,isSigner:!1},{name:"poolFee",isMut:!0,isSigner:!1}],args:[{name:"inAmount",type:{option:"u64"}},{name:"minimumOutAmount",type:"u64"},{name:"platformFeeBps",type:"u8"}]},{name:"cropperTokenSwap",accounts:[{name:"tokenSwapProgram",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"swap",isMut:!1,isSigner:!1},{name:"swapState",isMut:!1,isSigner:!1},{name:"authority",isMut:!1,isSigner:!1},{name:"userTransferAuthority",isMut:!1,isSigner:!0},{name:"source",isMut:!0,isSigner:!1},{name:"swapSource",isMut:!0,isSigner:!1},{name:"swapDestination",isMut:!0,isSigner:!1},{name:"destination",isMut:!0,isSigner:!1},{name:"poolMint",isMut:!0,isSigner:!1},{name:"poolFee",isMut:!0,isSigner:!1}],args:[{name:"inAmount",type:{option:"u64"}},{name:"minimumOutAmount",type:"u64"},{name:"platformFeeBps",type:"u8"}]},{name:"raydiumSwap",accounts:[{name:"swapProgram",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"ammId",isMut:!0,isSigner:!1},{name:"ammAuthority",isMut:!1,isSigner:!1},{name:"ammOpenOrders",isMut:!0,isSigner:!1},{name:"ammTargetOrders",isMut:!0,isSigner:!1},{name:"poolCoinTokenAccount",isMut:!0,isSigner:!1},{name:"poolPcTokenAccount",isMut:!0,isSigner:!1},{name:"serumProgramId",isMut:!1,isSigner:!1},{name:"serumMarket",isMut:!0,isSigner:!1},{name:"serumBids",isMut:!0,isSigner:!1},{name:"serumAsks",isMut:!0,isSigner:!1},{name:"serumEventQueue",isMut:!0,isSigner:!1},{name:"serumCoinVaultAccount",isMut:!0,isSigner:!1},{name:"serumPcVaultAccount",isMut:!0,isSigner:!1},{name:"serumVaultSigner",isMut:!1,isSigner:!1},{name:"userSourceTokenAccount",isMut:!0,isSigner:!1},{name:"userDestinationTokenAccount",isMut:!0,isSigner:!1},{name:"userSourceOwner",isMut:!1,isSigner:!0}],args:[{name:"inAmount",type:{option:"u64"}},{name:"minimumOutAmount",type:"u64"},{name:"platformFeeBps",type:"u8"}]},{name:"raydiumSwapV2",accounts:[{name:"swapProgram",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"ammId",isMut:!0,isSigner:!1},{name:"ammAuthority",isMut:!1,isSigner:!1},{name:"ammOpenOrders",isMut:!0,isSigner:!1},{name:"poolCoinTokenAccount",isMut:!0,isSigner:!1},{name:"poolPcTokenAccount",isMut:!0,isSigner:!1},{name:"serumProgramId",isMut:!1,isSigner:!1},{name:"serumMarket",isMut:!0,isSigner:!1},{name:"serumBids",isMut:!0,isSigner:!1},{name:"serumAsks",isMut:!0,isSigner:!1},{name:"serumEventQueue",isMut:!0,isSigner:!1},{name:"serumCoinVaultAccount",isMut:!0,isSigner:!1},{name:"serumPcVaultAccount",isMut:!0,isSigner:!1},{name:"serumVaultSigner",isMut:!1,isSigner:!1},{name:"userSourceTokenAccount",isMut:!0,isSigner:!1},{name:"userDestinationTokenAccount",isMut:!0,isSigner:!1},{name:"userSourceOwner",isMut:!1,isSigner:!0}],args:[{name:"inAmount",type:{option:"u64"}},{name:"minimumOutAmount",type:"u64"},{name:"platformFeeBps",type:"u8"}]},{name:"aldrinSwap",accounts:[{name:"swapProgram",isMut:!1,isSigner:!1},{name:"pool",isMut:!1,isSigner:!1},{name:"poolSigner",isMut:!1,isSigner:!1},{name:"poolMint",isMut:!0,isSigner:!1},{name:"baseTokenVault",isMut:!0,isSigner:!1},{name:"quoteTokenVault",isMut:!0,isSigner:!1},{name:"feePoolTokenAccount",isMut:!0,isSigner:!1},{name:"walletAuthority",isMut:!1,isSigner:!0},{name:"userBaseTokenAccount",isMut:!0,isSigner:!1},{name:"userQuoteTokenAccount",isMut:!0,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1}],args:[{name:"inAmount",type:{option:"u64"}},{name:"minimumOutAmount",type:"u64"},{name:"side",type:{defined:"Side"}},{name:"platformFeeBps",type:"u8"}]},{name:"aldrinV2Swap",accounts:[{name:"swapProgram",isMut:!1,isSigner:!1},{name:"pool",isMut:!1,isSigner:!1},{name:"poolSigner",isMut:!1,isSigner:!1},{name:"poolMint",isMut:!0,isSigner:!1},{name:"baseTokenVault",isMut:!0,isSigner:!1},{name:"quoteTokenVault",isMut:!0,isSigner:!1},{name:"feePoolTokenAccount",isMut:!0,isSigner:!1},{name:"walletAuthority",isMut:!1,isSigner:!0},{name:"userBaseTokenAccount",isMut:!0,isSigner:!1},{name:"userQuoteTokenAccount",isMut:!0,isSigner:!1},{name:"curve",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1}],args:[{name:"inAmount",type:{option:"u64"}},{name:"minimumOutAmount",type:"u64"},{name:"side",type:{defined:"Side"}},{name:"platformFeeBps",type:"u8"}]},{name:"cremaTokenSwap",accounts:[{name:"swapProgram",isMut:!1,isSigner:!1},{name:"pool",isMut:!0,isSigner:!1},{name:"poolSigner",isMut:!1,isSigner:!1},{name:"userSourceTokenAccount",isMut:!0,isSigner:!1},{name:"userDestinationTokenAccount",isMut:!0,isSigner:!1},{name:"poolSourceTokenAccount",isMut:!0,isSigner:!1},{name:"poolDestinationTokenAccount",isMut:!0,isSigner:!1},{name:"poolTicksAccount",isMut:!0,isSigner:!1},{name:"walletAuthority",isMut:!1,isSigner:!0},{name:"tokenProgram",isMut:!1,isSigner:!1}],args:[{name:"inAmount",type:{option:"u64"}},{name:"minimumOutAmount",type:"u64"},{name:"platformFeeBps",type:"u8"}]},{name:"lifinityTokenSwap",accounts:[{name:"swapProgram",isMut:!1,isSigner:!1},{name:"authority",isMut:!1,isSigner:!1},{name:"amm",isMut:!1,isSigner:!1},{name:"userTransferAuthority",isMut:!1,isSigner:!0},{name:"sourceInfo",isMut:!0,isSigner:!1},{name:"destinationInfo",isMut:!0,isSigner:!1},{name:"swapSource",isMut:!0,isSigner:!1},{name:"swapDestination",isMut:!0,isSigner:!1},{name:"poolMint",isMut:!0,isSigner:!1},{name:"feeAccount",isMut:!0,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"pythAccount",isMut:!1,isSigner:!1},{name:"pythPcAccount",isMut:!1,isSigner:!1},{name:"configAccount",isMut:!0,isSigner:!1}],args:[{name:"inAmount",type:{option:"u64"}},{name:"minimumOutAmount",type:"u64"},{name:"platformFeeBps",type:"u8"}]},{name:"cykuraSwap",accounts:[{name:"swapProgram",isMut:!1,isSigner:!1},{name:"signer",isMut:!1,isSigner:!0},{name:"factoryState",isMut:!1,isSigner:!1},{name:"poolState",isMut:!0,isSigner:!1},{name:"inputTokenAccount",isMut:!0,isSigner:!1},{name:"outputTokenAccount",isMut:!0,isSigner:!1},{name:"inputVault",isMut:!0,isSigner:!1},{name:"outputVault",isMut:!0,isSigner:!1},{name:"lastObservationState",isMut:!0,isSigner:!1},{name:"coreProgram",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1}],args:[{name:"inAmount",type:{option:"u64"}},{name:"minimumOutAmount",type:"u64"},{name:"platformFeeBps",type:"u8"}]},{name:"whirlpoolSwap",accounts:[{name:"swapProgram",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"tokenAuthority",isMut:!1,isSigner:!0},{name:"whirlpool",isMut:!0,isSigner:!1},{name:"tokenOwnerAccountA",isMut:!0,isSigner:!1},{name:"tokenVaultA",isMut:!0,isSigner:!1},{name:"tokenOwnerAccountB",isMut:!0,isSigner:!1},{name:"tokenVaultB",isMut:!0,isSigner:!1},{name:"tickArray0",isMut:!0,isSigner:!1},{name:"tickArray1",isMut:!0,isSigner:!1},{name:"tickArray2",isMut:!0,isSigner:!1},{name:"oracle",isMut:!1,isSigner:!1}],args:[{name:"inAmount",type:{option:"u64"}},{name:"minimumOutAmount",type:"u64"},{name:"aToB",type:"bool"},{name:"platformFeeBps",type:"u8"}]},{name:"riskCheckAndFee",accounts:[{name:"tokenLedger",isMut:!0,isSigner:!1},{name:"userDestinationTokenAccount",isMut:!0,isSigner:!1},{name:"userTransferAuthority",isMut:!1,isSigner:!0},{name:"tokenProgram",isMut:!1,isSigner:!1}],args:[{name:"minimumOutAmount",type:"u64"},{name:"platformFeeBps",type:"u8"}]},{name:"initializeTokenLedger",accounts:[{name:"tokenLedger",isMut:!0,isSigner:!0},{name:"payer",isMut:!0,isSigner:!0},{name:"systemProgram",isMut:!1,isSigner:!1}],args:[]},{name:"setTokenLedger",accounts:[{name:"tokenLedger",isMut:!0,isSigner:!1},{name:"tokenAccount",isMut:!1,isSigner:!1}],args:[]},{name:"createOpenOrders",accounts:[{name:"openOrders",isMut:!0,isSigner:!1},{name:"payer",isMut:!0,isSigner:!0},{name:"dexProgram",isMut:!1,isSigner:!1},{name:"systemProgram",isMut:!1,isSigner:!1},{name:"rent",isMut:!1,isSigner:!1},{name:"market",isMut:!1,isSigner:!1}],args:[]}],accounts:[{name:"tokenLedger",type:{kind:"struct",fields:[{name:"tokenAccount",type:"publicKey"},{name:"amount",type:"u64"}]}}],types:[{name:"Swap",type:{kind:"struct",fields:[{name:"tokens",type:"u64"},{name:"minTokens",type:"u64"},{name:"side",type:{defined:"Side"}}]}},{name:"Swap",type:{kind:"struct",fields:[{name:"tokens",type:"u64"},{name:"minTokens",type:"u64"},{name:"side",type:{defined:"Side"}}]}},{name:"Swap",type:{kind:"struct",fields:[{name:"amountIn",type:"u64"},{name:"minimumAmountOut",type:"u64"}]}},{name:"Swap",type:{kind:"struct",fields:[{name:"amount",type:"u64"},{name:"otherAmountThreshold",type:"u64"},{name:"sqrtPriceLimit",type:"u128"},{name:"amountSpecifiedIsInput",type:"bool"},{name:"aToB",type:"bool"}]}},{name:"SwapInstrution",type:{kind:"enum",variants:[{name:"Swap",fields:[{defined:"Swap"}]}]}},{name:"Side",type:{kind:"enum",variants:[{name:"Bid"},{name:"Ask"}]}},{name:"Direction",type:{kind:"enum",variants:[{name:"LeftToRight"},{name:"RightToLeft"}]}}],errors:[{code:6e3,name:"SlippageToleranceExceeded",msg:"Slippage tolerance exceeded"},{code:6001,name:"InvalidTokenLedger",msg:"Invalid token ledger"},{code:6002,name:"MissingTokenLedger",msg:"Missing token ledger"},{code:6003,name:"MissingMercurialExchangeTokenAccount",msg:"Missing mercurial exchange token account"},{code:6004,name:"LedgerTokenAccountDoesNotMatch",msg:"Ledger token account does not match"},{code:6005,name:"MissingPlatformFeeAccount",msg:"Missing platform fee account"},{code:6006,name:"InvalidCalculation",msg:"Invalid calculation"}]},I=new e.PublicKey("So11111111111111111111111111111111111111112"),F=new e.PublicKey("9xQeWvG816bUx9EPjHmaT23yvVM2ZWbrrpZb9PusVFin"),D=new e.PublicKey("DESVgJVGajEgKGXhb6XmqDHGz3VjdgP7rEVESBgxmroY"),N={devnet:"https://api.jup.ag/api/markets/cache/devnet","mainnet-beta":"https://cache.jup.ag/markets?v=3",testnet:"https://api.jup.ag/api/markets/cache/devnet"},O=new e.PublicKey("675kPX9MHTjS2zt1qfr1NYHuzeLXfQM9H24wFSUt1Mp8"),E=new e.PublicKey("AMM55ShdkoGRB5jVYPjWziwk8m5MpwyDgsMWHaMSQWH6"),R=new e.PublicKey("CURVGoZn8zycx6FXwwevgBTB2gVvdbGTEpvMJDbgs2t4"),K=new e.PublicKey("DecZY86MU5Gj7kppfUCEmd4LbXXuyZH1yHaP2NTqdiZB"),q=new e.PublicKey("CTMAxxk34HjKWxQ3QLZK1HpaLXmBveao3ESePXbiyfzh"),C=new e.PublicKey("SCHAtsf8mbjyjiv4LkhLKutTf6JnZAbdJKFkXQNMFHZ"),L=new e.PublicKey("EewxydAPCCVuNEyrVN68PuSYdQ7wKn27V9Gjeoi8dy3S"),U=new e.PublicKey("6MLxLqiXaaSUpkgMnWDTuejNZEz3kE7k2woyHGVFw319"),x=new e.PublicKey("BUX7s2ef2htTGb2KKoPHWkmzxPj4nTWMWRgs5CSbQxf9"),_=new e.PublicKey("MERLuDFBMmsHnsBPZw2sDQZHvXFMwp8EdjudcU2HKky"),V=new e.PublicKey("whirLbMiicVdio4qvUfM5KAg6Ct8VwpYzGff3uctyCc"),W=new e.PublicKey("cysPXAjehMpVKUapzbMCCnpFxUFFryEWEaLgnb9NrR8"),G=new e.PublicKey("DBsMwKfeoUHhxMi9x6wd2AsT12UwUCssjNbUzu1aKgqj"),z=["StepAscQoEioFxxWGnh2sLBDFp9d8rvKz2Yp39iDpyT","DubwWZNWiNGMMeeQHPnMATNj77YZPZSAz2WVR5WjLJqz"],j=Object.freeze({TransactionNotConfirmed:{code:7e3,name:"TransactionNotConfirmed",msg:"Transaction was not confirmed"},BalancesNotExtractedProperly:{code:7001,name:"BalancesNotExtractedProperly",msg:"Balances cannot be extracted properly"},...B.errors.reduce(((t,e)=>({...t,[e.name]:e})),{})});class Q extends u.Layout{constructor(t){const e=u.blob(32);super(e.span,t),this.layout=void 0,this.layout=e}getSpan(t,e){return this.layout.getSpan(t,e)}decode(t,n){return new e.PublicKey(this.layout.decode(t,n))}encode(t,e,n){return this.layout.encode(t.toBuffer(),e,n)}}const H=t=>new Q(t);class Y extends u.Layout{constructor(t=8,e){const n=u.blob(t);super(n.span,e),this.layout=void 0,this.layout=n}getSpan(t,e){return this.layout.getSpan(t,e)}decode(e,n){return new t.u64(this.layout.decode(e,n),10,"le")}encode(t,e,n){return this.layout.encode(t.toArrayLike(Buffer,"le",this.layout.span),e,n)}}const Z=t=>new Y(8,t),X=t=>new Y(16,t),J=u.struct([u.u8("version"),u.u8("isInitialized"),u.u8("nonce"),H("ammId"),H("serumProgramId"),H("serumMarket"),H("tokenProgramId"),H("tokenAAccount"),H("tokenBAccount"),H("poolMint"),H("mintA"),H("mintB")]),$=u.struct([u.u8("isInitialized"),H("stateOwner"),H("feeOwner"),Z("initialSupply"),Z("returnFeeNumerator"),Z("fixedFeeNumerator"),Z("feeDenominator"),u.u8("curveType"),u.blob(32,"curveParameters")]),tt=new e.PublicKey("3hsU1VgsBgBgz5jWiqdw9RfGU6TpWdCmdah1oi4kF3Tq"),et=(t,e)=>{const n=e.owner,o=J.decode(e.data),[i]=s.findProgramAddressSync([t.toBuffer()],n);return{programId:n,authority:i,version:o.version,isInitialized:Boolean(o.isInitialized),nonce:o.nonce,ammId:o.ammId,serumProgramId:o.serumProgramId,tokenProgramId:o.tokenProgramId,tokenAAccount:o.tokenAAccount,tokenBAccount:o.tokenBAccount,serumMarket:o.serumMarket,poolMint:o.poolMint,mintA:o.mintA,mintB:o.mintB}},nt={Bid:{bid:{}},Ask:{ask:{}}},ot=new e.PublicKey("JUP2jxvXaqu7NQY1GmNF4m1vodw12LVXYxbFL2uJvfo"),it=new r.Program(B,ot,{}),rt=[new e.PublicKey("7h51TX1pNvSaNyjg4koKroJqoe7atKB7xWUfir7ZqX81"),new e.PublicKey("HgeLVK1nJ1kNdWSUNCKj6DfGqfhwgx67dfGPRcBSdE2d"),new e.PublicKey("8ME9HwwchNknEVrcCSKYAQCa1YAYi3LZrEXJrY4ZNkkg"),new e.PublicKey("Edg9J3CMky9AVJq2WrSar2JR38jFkg4S7vAW7Xsix8oV"),new e.PublicKey("B5mW68TkDewnKvWNc2trkmmdSRxcCjZz3Yd9BWxQTSRU"),new e.PublicKey("7E3TDrnS2zEp8uVri8EtPU8MyQ3qjLTc6cCGJAnAM48p")],st=rt[Math.floor(Math.random()*rt.length)];function at(e,n,o,i){return{swapProgram:_,swapState:e.ammId,tokenProgram:t.TOKEN_PROGRAM_ID,poolAuthority:e.authority,userTransferAuthority:i,sourceTokenAccount:n,destinationTokenAccount:o}}function ut(e,n,o,i){const[r]=s.findProgramAddressSync([new Uint8Array(Buffer.from("amm authority".replace(" "," "),"utf-8"))],O);if(!e.serumMarketKeys)throw new Error("RaydiumAmm is missing serumMarketKeys");return{swapProgram:O,tokenProgram:t.TOKEN_PROGRAM_ID,ammId:e.ammId,ammAuthority:r,ammOpenOrders:e.ammOpenOrders,poolCoinTokenAccount:e.poolCoinTokenAccount,poolPcTokenAccount:e.poolPcTokenAccount,serumProgramId:e.serumProgramId,serumMarket:e.serumMarket,serumBids:e.serumMarketKeys.serumBids,serumAsks:e.serumMarketKeys.serumAsks,serumEventQueue:e.serumMarketKeys.serumEventQueue,serumCoinVaultAccount:e.serumMarketKeys.serumCoinVaultAccount,serumPcVaultAccount:e.serumMarketKeys.serumPcVaultAccount,serumVaultSigner:e.serumMarketKeys.serumVaultSigner,userSourceTokenAccount:n,userDestinationTokenAccount:o,userSourceOwner:i}}function ct(n,o,i,r,a,u){const c=s.createProgramAddressSync([n.address.toBuffer(),n.decoded.vaultSignerNonce.toArrayLike(Buffer,"le",8)],n.programId);return{market:{market:n.address,openOrders:o,requestQueue:n.decoded.requestQueue,eventQueue:n.decoded.eventQueue,bids:n.bidsAddress,asks:n.asksAddress,coinVault:n.decoded.baseVault,pcVault:n.decoded.quoteVault,vaultSigner:c},authority:u,orderPayerTokenAccount:i,coinWallet:r,pcWallet:a,dexProgram:n.programId,tokenProgram:t.TOKEN_PROGRAM_ID,rent:e.SYSVAR_RENT_PUBKEY}}function mt({swapLayout:t,userSourceTokenAccount:e,userDestinationTokenAccount:n,userTransferAuthority:o,inAmount:i,minimumOutAmount:r,tokenLedger:s,platformFee:u}){var c;const m=[];for(const e of t.tokenAccounts)m.push({pubkey:e,isSigner:!1,isWritable:!0});return m.push(...It(i,s,null==u?void 0:u.feeAccount)),it.instruction.mercurialExchange(i?new a.BN(i):i,new a.BN(r),null!==(c=null==u?void 0:u.feeBps)&&void 0!==c?c:0,{accounts:at(t,e,n,o),remainingAccounts:m})}function dt({market:t,sourceMint:e,openOrdersAddress:n,userSourceTokenAccount:o,userDestinationTokenAccount:i,userTransferAuthority:r,inAmount:s,minimumOutAmount:u,tokenLedger:c,platformFee:m,referrer:d}){var l;const{side:p,coinWallet:h,pcWallet:f}=e.equals(t.baseMintAddress)?{side:nt.Ask,coinWallet:o,pcWallet:i}:{side:nt.Bid,coinWallet:i,pcWallet:o};let g=It(s,c,null==m?void 0:m.feeAccount);return d&&g.push({pubkey:d,isSigner:!1,isWritable:!0}),it.instruction.serumSwap(p,s?new a.BN(s):s,new a.BN(u),null!==(l=null==m?void 0:m.feeBps)&&void 0!==l?l:0,{accounts:ct(t,n,o,h,f,r),remainingAccounts:g})}function lt({tokenSwapState:e,sourceMint:n,userSourceTokenAccount:o,userDestinationTokenAccount:i,userTransferAuthority:r,inAmount:s,minimumOutAmount:u,tokenLedger:c,platformFee:m,isStep:d}){var l;const[p,h]=n.equals(e.mintA)?[e.tokenAccountA,e.tokenAccountB]:[e.tokenAccountB,e.tokenAccountA];return(d?it.instruction.stepTokenSwap:it.instruction.tokenSwap)(s?new a.BN(s):s,new a.BN(u),null!==(l=null==m?void 0:m.feeBps)&&void 0!==l?l:0,{accounts:{tokenSwapProgram:e.programId,tokenProgram:t.TOKEN_PROGRAM_ID,swap:e.address,authority:e.authority,userTransferAuthority:r,source:o,swapSource:p,swapDestination:h,destination:i,poolMint:e.poolToken,poolFee:e.feeAccount},remainingAccounts:It(s,c,null==m?void 0:m.feeAccount)})}function pt({poolState:e,sourceMint:n,userSourceTokenAccount:o,userDestinationTokenAccount:i,userTransferAuthority:r,inAmount:s,minimumOutAmount:u,tokenLedger:c,platformFee:m}){var d;const[l,p]=n.equals(e.token0Mint)?[e.token0Reserves,e.token1Reserves]:[e.token1Reserves,e.token0Reserves],[h,f]=n.equals(e.token0Mint)?[e.token0Fees,e.token1Fees]:[e.token1Fees,e.token0Fees];return it.instruction.senchaExchange(s?new a.BN(s):s,new a.BN(u),null!==(d=null==m?void 0:m.feeBps)&&void 0!==d?d:0,{accounts:{swapProgram:e.programId,tokenProgram:t.TOKEN_PROGRAM_ID,swap:e.ammId,userAuthority:r,inputUserAccount:o,inputTokenAccount:l,inputFeesAccount:h,outputUserAccount:i,outputTokenAccount:p,outputFeesAccount:f},remainingAccounts:It(s,c,null==m?void 0:m.feeAccount)})}function ht({poolState:e,feeAccount:n,sourceMint:o,userSourceTokenAccount:i,userDestinationTokenAccount:r,userTransferAuthority:s,inAmount:u,minimumOutAmount:c,tokenLedger:m,platformFee:d}){var l;const[p,h]=o.equals(e.mintA)?[e.tokenAAccount,e.tokenBAccount]:[e.tokenBAccount,e.tokenAAccount];return it.instruction.cropperTokenSwap(u?new a.BN(u):u,new a.BN(c),null!==(l=null==d?void 0:d.feeBps)&&void 0!==l?l:0,{accounts:{tokenSwapProgram:e.programId,tokenProgram:t.TOKEN_PROGRAM_ID,swap:e.ammId,swapState:tt,authority:e.authority,userTransferAuthority:s,source:i,swapSource:p,swapDestination:h,destination:r,poolMint:e.poolMint,poolFee:n},remainingAccounts:It(u,m,null==d?void 0:d.feeAccount)})}function ft({raydiumAmm:t,userSourceTokenAccount:e,userDestinationTokenAccount:n,userTransferAuthority:o,inAmount:i,minimumOutAmount:r,tokenLedger:s,platformFee:u}){var c;return it.instruction.raydiumSwapV2(i?new a.BN(i):i,new a.BN(r),null!==(c=null==u?void 0:u.feeBps)&&void 0!==c?c:0,{accounts:ut(t,e,n,o),remainingAccounts:It(i,s,null==u?void 0:u.feeAccount)})}function gt({poolState:e,sourceMint:n,userSourceTokenAccount:o,userDestinationTokenAccount:i,userTransferAuthority:r,inAmount:s,minimumOutAmount:u,tokenLedger:c,platformFee:m}){var d;const[l,p,h]=n.equals(e.baseTokenMint)?[nt.Ask,o,i]:[nt.Bid,i,o];return it.instruction.aldrinSwap(s?new a.BN(s):s,new a.BN(u),l,null!==(d=null==m?void 0:m.feeBps)&&void 0!==d?d:0,{accounts:{swapProgram:E,pool:e.address,poolSigner:e.poolSigner,poolMint:e.poolMint,baseTokenVault:e.baseTokenVault,quoteTokenVault:e.quoteTokenVault,feePoolTokenAccount:e.feePoolTokenAccount,walletAuthority:r,userBaseTokenAccount:p,userQuoteTokenAccount:h,tokenProgram:t.TOKEN_PROGRAM_ID},remainingAccounts:It(s,c,null==m?void 0:m.feeAccount)})}function At({poolState:e,sourceMint:n,userSourceTokenAccount:o,userDestinationTokenAccount:i,curve:r,userTransferAuthority:s,inAmount:u,minimumOutAmount:c,tokenLedger:m,platformFee:d}){var l;const[p,h,f]=n.equals(e.baseTokenMint)?[nt.Ask,o,i]:[nt.Bid,i,o];return it.instruction.aldrinV2Swap(u?new a.BN(u):u,new a.BN(c),p,null!==(l=null==d?void 0:d.feeBps)&&void 0!==l?l:0,{accounts:{swapProgram:R,pool:e.address,poolSigner:e.poolSigner,poolMint:e.poolMint,baseTokenVault:e.baseTokenVault,quoteTokenVault:e.quoteTokenVault,feePoolTokenAccount:e.feePoolTokenAccount,walletAuthority:s,userBaseTokenAccount:h,userQuoteTokenAccount:f,curve:r,tokenProgram:t.TOKEN_PROGRAM_ID},remainingAccounts:It(u,m,null==d?void 0:d.feeAccount)})}function kt({poolState:e,sourceMint:n,userSourceTokenAccount:o,userDestinationTokenAccount:i,userTransferAuthority:r,inAmount:s,minimumOutAmount:u,tokenLedger:c,platformFee:m}){var d;const[l,p]=n.equals(e.mintA)?[e.tokenAAccount,e.tokenBAccount]:[e.tokenBAccount,e.tokenAAccount];return it.instruction.cremaTokenSwap(s?new a.BN(s):s,new a.BN(u),null!==(d=null==m?void 0:m.feeBps)&&void 0!==d?d:0,{accounts:{swapProgram:e.programId,pool:e.ammId,poolSigner:e.authority,userSourceTokenAccount:o,userDestinationTokenAccount:i,poolSourceTokenAccount:l,poolDestinationTokenAccount:p,poolTicksAccount:e.ticksKey,walletAuthority:r,tokenProgram:t.TOKEN_PROGRAM_ID},remainingAccounts:It(s,c,null==m?void 0:m.feeAccount)})}function wt(e,n,o,i,r){var s;const u=[];return null!=r&&r.feeAccount&&u.push({pubkey:r.feeAccount,isSigner:!1,isWritable:!0}),it.instruction.riskCheckAndFee(new a.BN(o),null!==(s=null==r?void 0:r.feeBps)&&void 0!==s?s:0,{accounts:{tokenLedger:i,userDestinationTokenAccount:e,userTransferAuthority:n,tokenProgram:t.TOKEN_PROGRAM_ID},remainingAccounts:u})}function St(t,e){return it.instruction.setTokenLedger({accounts:{tokenLedger:t,tokenAccount:e}})}function yt(e,n,o,i,r){const s=n.equals(e.state.tokenA.mint)?e.state.tokenB.adminFeeAccount:e.state.tokenA.adminFeeAccount,[a,u]=n.equals(e.state.tokenA.mint)?[e.state.tokenA.reserve,e.state.tokenB.reserve]:[e.state.tokenB.reserve,e.state.tokenA.reserve];return{swapProgram:e.config.swapProgramID,tokenProgram:t.TOKEN_PROGRAM_ID,swap:e.config.swapAccount,swapAuthority:e.config.authority,userAuthority:r,inputUserAccount:o,inputTokenAccount:a,outputUserAccount:i,outputTokenAccount:u,feesTokenAccount:s}}function Mt({stableSwap:t,sourceMint:e,userSourceTokenAccount:n,userDestinationTokenAccount:o,userTransferAuthority:i,inAmount:r,minimumOutAmount:s,tokenLedger:u,platformFee:c}){var m;const d=It(r,u,null==c?void 0:c.feeAccount);return it.instruction.saberSwap(r?new a.BN(r):r,new a.BN(s),null!==(m=null==c?void 0:c.feeBps)&&void 0!==m?m:0,{accounts:yt(t,e,n,o,i),remainingAccounts:d})}function Tt({addDecimals:e,userSourceTokenAccount:n,userDestinationTokenAccount:o,userTransferAuthority:i,inAmount:r,minimumOutAmount:s,tokenLedger:u,platformFee:c}){var m;const d=It(r,u,null==c?void 0:c.feeAccount);return it.instruction.saberAddDecimalsDeposit(r?new a.BN(r):r,new a.BN(s),null!==(m=null==c?void 0:c.feeBps)&&void 0!==m?m:0,{accounts:{addDecimalsProgram:K,wrapper:e.wrapper,wrapperMint:e.mint,wrapperUnderlyingTokens:e.wrapperUnderlyingTokens,owner:i,userUnderlyingTokens:n,userWrappedTokens:o,tokenProgram:t.TOKEN_PROGRAM_ID},remainingAccounts:d})}function Pt({addDecimals:e,userSourceTokenAccount:n,userDestinationTokenAccount:o,userTransferAuthority:i,inAmount:r,minimumOutAmount:s,tokenLedger:u,platformFee:c}){var m;const d=It(r,u,null==c?void 0:c.feeAccount);return it.instruction.saberAddDecimalsWithdraw(r?new a.BN(r):r,new a.BN(s),null!==(m=null==c?void 0:c.feeBps)&&void 0!==m?m:0,{accounts:{addDecimalsProgram:K,wrapper:e.wrapper,wrapperMint:e.mint,wrapperUnderlyingTokens:e.wrapperUnderlyingTokens,owner:i,userUnderlyingTokens:o,userWrappedTokens:n,tokenProgram:t.TOKEN_PROGRAM_ID},remainingAccounts:d})}function vt({swapState:e,sourceMint:n,userSourceTokenAccount:o,userDestinationTokenAccount:i,userTransferAuthority:r,inAmount:s,minimumOutAmount:u,tokenLedger:c,platformFee:m}){var d;const[l,p]=n.equals(e.tokenAMint)?[e.poolCoinTokenAccount,e.poolPcTokenAccount]:[e.poolPcTokenAccount,e.poolCoinTokenAccount];return it.instruction.lifinityTokenSwap(s?new a.BN(s):s,new a.BN(u),null!==(d=null==m?void 0:m.feeBps)&&void 0!==d?d:0,{accounts:{swapProgram:e.programId,authority:e.authority,amm:e.amm,userTransferAuthority:r,sourceInfo:o,destinationInfo:i,swapSource:l,swapDestination:p,poolMint:e.poolMint,feeAccount:e.feeAccount,tokenProgram:t.TOKEN_PROGRAM_ID,pythAccount:e.pythAccount,pythPcAccount:e.pythPcAccount,configAccount:e.configAccount},remainingAccounts:It(s,c,null==m?void 0:m.feeAccount)})}function bt({additionalArgs:e,userSourceTokenAccount:n,userDestinationTokenAccount:o,userTransferAuthority:i,inAmount:r,minimumOutAmount:s,tokenLedger:u,platformFee:c}){var m;const d=It(r,u,null==c?void 0:c.feeAccount);return it.instruction.cykuraSwap(r?new a.BN(r):r,new a.BN(s),null!==(m=null==c?void 0:c.feeBps)&&void 0!==m?m:0,{accounts:{swapProgram:W,signer:i,factoryState:G,poolState:e.poolAddress,inputTokenAccount:n,outputTokenAccount:o,inputVault:e.inputVault,outputVault:e.outputVault,lastObservationState:e.lastObservationState,coreProgram:W,tokenProgram:t.TOKEN_PROGRAM_ID},remainingAccounts:d.concat([...e.swapAccountMetas,{pubkey:e.nextObservationState,isSigner:!1,isWritable:!0}])})}function Bt({additionalArgs:e,userSourceTokenAccount:n,userDestinationTokenAccount:o,userTransferAuthority:i,inAmount:r,minimumOutAmount:s,tokenLedger:u,platformFee:c}){var m;const[d,l]=e.aToB?[n,o]:[o,n];return it.instruction.whirlpoolSwap(r?new a.BN(r):r,new a.BN(s),e.aToB,null!==(m=null==c?void 0:c.feeBps)&&void 0!==m?m:0,{accounts:{swapProgram:V,tokenProgram:t.TOKEN_PROGRAM_ID,tokenAuthority:i,whirlpool:e.whirlpool,tokenOwnerAccountA:d,tokenVaultA:e.tokenVaultA,tokenOwnerAccountB:l,tokenVaultB:e.tokenVaultB,tickArray0:e.tickArray0,tickArray1:e.tickArray1,tickArray2:e.tickArray2,oracle:e.oracle},remainingAccounts:It(r,u,null==c?void 0:c.feeAccount)})}function It(t,e,n){const o=[];return null===t&&o.push({pubkey:e,isSigner:!1,isWritable:!0}),n&&o.push({pubkey:n,isSigner:!1,isWritable:!0}),o}function Ft(){return b.map((t=>{const n={wrapper:new e.PublicKey(t.wrapper),underlying:new e.PublicKey(t.underlying),underlyingDecimals:t.underlyingDecimals,wrapperUnderlyingTokens:new e.PublicKey(t.wrapperUnderlyingTokens),mint:new e.PublicKey(t.mint),decimals:t.decimals};return new Nt(new Dt(n))}))}class Dt{constructor(t){this.addDecimals=void 0,this.addDecimals=t}get multiplier(){return 10**(this.addDecimals.decimals-this.addDecimals.underlyingDecimals)}getOutputAmount(t,e){if(this.addDecimals.mint.equals(e))return this.calculateWithdrawOutputAmount(t);if(this.addDecimals.underlying.equals(e))return this.calculateDepositOutputAmount(t);throw new Error(`unknown input token: ${e.toString()}`)}calculateDepositOutputAmount(t){return y.default.multiply(y.default.BigInt(t),y.default.BigInt(this.multiplier))}calculateWithdrawOutputAmount(t){return y.default.divide(y.default.BigInt(t),y.default.BigInt(this.multiplier))}}class Nt{constructor(t){this.wrappedToken=void 0,this.id=void 0,this.label="Saber (Decimals)",this.shouldPrefetch=!1,this.wrappedToken=t,this.id=this.wrappedToken.addDecimals.wrapper.toBase58()}getAccountsForUpdate(){return new Array}update(t){}getQuote({sourceMint:t,amount:e}){return{notEnoughLiquidity:!1,inAmount:e,outAmount:y.default.toNumber(this.wrappedToken.getOutputAmount(e,t)),feeAmount:0,feeMint:t.toBase58(),feePct:0,priceImpactPct:0}}createSwapInstructions(t){return this.wrappedToken.addDecimals.underlying.equals(t.sourceMint)?[Tt({addDecimals:this.wrappedToken.addDecimals,...t})]:[Pt({addDecimals:this.wrappedToken.addDecimals,...t})]}get reserveTokenMints(){return[this.wrappedToken.addDecimals.underlying,this.wrappedToken.addDecimals.mint]}}function Ot(t){return t.reduce(((e,n)=>(t.forEach((t=>{n!==t&&e.push([n,t])})),e)),new Array)}async function Et(t,n,o=100){return(await Promise.all((i=n,r=o,Array.apply(0,new Array(Math.ceil(i.length/r))).map(((t,e)=>i.slice(e*r,(e+1)*r)))).map((n=>{const o=t._buildArgs([n],t.commitment,"base64");return t._rpcRequest("getMultipleAccounts",o).then((t=>{const n=t.result.value;return n.forEach((t=>{if(t){const n=t;n.data=Buffer.from(t.data[0],t.data[1]),n.owner=new e.PublicKey(n.owner)}})),n})).catch((t=>(console.error("Failed to fetch account infos",t),n.map((()=>null)))))})))).flat();var i,r}const Rt=(t,e)=>e.map((e=>{const n=t.get(e.toString());if(!n)throw new Error(`Account info ${e.toBase58()} missing`);return n})),Kt=t=>t.map((t=>y.default.BigInt(t.amount))),qt=u.struct([u.nu64("status"),u.nu64("nonce"),u.nu64("orderNum"),u.nu64("depth"),u.nu64("coinDecimals"),u.nu64("pcDecimals"),u.nu64("state"),u.nu64("resetFlag"),u.nu64("minSize"),u.nu64("volMaxCutRatio"),u.nu64("amountWaveRatio"),u.nu64("coinLotSize"),u.nu64("pcLotSize"),u.nu64("minPriceMultiplier"),u.nu64("maxPriceMultiplier"),u.nu64("systemDecimalsValue"),u.nu64("minSeparateNumerator"),u.nu64("minSeparateDenominator"),u.nu64("tradeFeeNumerator"),u.nu64("tradeFeeDenominator"),u.nu64("pnlNumerator"),u.nu64("pnlDenominator"),u.nu64("swapFeeNumerator"),u.nu64("swapFeeDenominator"),u.nu64("needTakePnlCoin"),u.nu64("needTakePnlPc"),u.nu64("totalPnlPc"),u.nu64("totalPnlCoin"),X("poolTotalDepositPc"),X("poolTotalDepositCoin"),X("swapCoinInAmount"),X("swapPcOutAmount"),u.nu64("swapCoin2PcFee"),X("swapPcInAmount"),X("swapCoinOutAmount"),u.nu64("swapPc2CoinFee"),H("poolCoinTokenAccount"),H("poolPcTokenAccount"),H("coinMintAddress"),H("pcMintAddress"),H("lpMintAddress"),H("ammOpenOrders"),H("serumMarket"),H("serumProgramId"),H("ammTargetOrders"),H("poolWithdrawQueue"),H("poolTempLpTokenAccount"),H("ammOwner"),H("pnlOwner")]);class Ct{constructor(t,n,o){this.ammId=void 0,this.id=void 0,this.label="Raydium",this.shouldPrefetch=!1,this.coinMint=void 0,this.pcMint=void 0,this.status=void 0,this.serumProgramId=void 0,this.serumMarket=void 0,this.ammOpenOrders=void 0,this.ammTargetOrders=void 0,this.poolCoinTokenAccount=void 0,this.poolPcTokenAccount=void 0,this.serumMarketKeys=void 0,this.coinReserve=void 0,this.pcReserve=void 0,this.feePct=void 0,this.calculator=void 0,this.ammId=t,this.id=t.toBase58();const i=qt.decode(n.data);this.status=i.status,this.coinMint=new e.PublicKey(i.coinMintAddress),this.pcMint=new e.PublicKey(i.pcMintAddress),this.poolCoinTokenAccount=new e.PublicKey(i.poolCoinTokenAccount),this.poolPcTokenAccount=new e.PublicKey(i.poolPcTokenAccount),this.serumProgramId=new e.PublicKey(i.serumProgramId),this.serumMarket=new e.PublicKey(i.serumMarket),this.ammOpenOrders=new e.PublicKey(i.ammOpenOrders),this.ammTargetOrders=new e.PublicKey(i.ammTargetOrders),this.serumMarketKeys=Object.keys(o).reduce(((t,n)=>{if(!o[n])throw new Error(`Could not find ${n} in params`);return t[n]=new e.PublicKey(o[n]),t}),{});const r=i.swapFeeNumerator,s=i.swapFeeDenominator;this.feePct=new P.default(r.toString()).div(s.toString()),this.calculator=new c.TokenSwapConstantProduct(new c.Fraction(y.default.BigInt(r),y.default.BigInt(s)),c.ZERO_FRACTION)}static decodeSerumMarketKeysString(t,e,o){const i=n.Market.getLayout(t).decode(o.data),r=s.createProgramAddressSync([e.toBuffer(),i.vaultSignerNonce.toArrayLike(Buffer,"le",8)],t);return{serumBids:i.bids.toBase58(),serumAsks:i.asks.toBase58(),serumEventQueue:i.eventQueue.toBase58(),serumCoinVaultAccount:i.baseVault.toBase58(),serumPcVaultAccount:i.quoteVault.toBase58(),serumVaultSigner:r.toBase58()}}getAccountsForUpdate(){return[this.ammId,this.poolCoinTokenAccount,this.poolPcTokenAccount,this.ammOpenOrders]}update(e){const[o,i,r,s]=Rt(e,this.getAccountsForUpdate()),[a,u]=[Ct.tokenAmountAccessor(i),Ct.tokenAmountAccessor(r)],c=n.OpenOrders.fromAccountInfo(this.ammOpenOrders,s,s.owner),m=qt.decode(o.data);this.coinReserve=a.add(c.baseTokenTotal).sub(new t.u64(String(m.needTakePnlCoin))),this.pcReserve=u.add(c.quoteTokenTotal).sub(new t.u64(String(m.needTakePnlPc)))}static tokenAmountAccessor(e){return t.u64.fromBuffer(e.data.slice(64,72))}getQuote({sourceMint:t,amount:e}){const{coinReserve:n,pcReserve:o}=this;if(!n||!o)throw new Error("Pool token accounts balances not refreshed or empty");const i=this.coinMint.equals(t)?1:0,r=this.calculator.exchange([y.default.BigInt(n),y.default.BigInt(o)],y.default.BigInt(e),i);return{notEnoughLiquidity:!1,inAmount:e,outAmount:y.default.toNumber(r.expectedOutputAmount),feeAmount:y.default.toNumber(r.fees),feeMint:t.toBase58(),feePct:this.feePct.toNumber(),priceImpactPct:r.priceImpact.toNumber()}}createSwapInstructions(t){return[ft({raydiumAmm:this,...t})]}get reserveTokenMints(){return[this.coinMint,this.pcMint]}}const Lt=["77quYg4MGneUdjgXCunt9GgM1usmrxKY31twEy3WHwcS","5cLrMai1DsLRYc1Nio9qMTicsWtvzjzZfJPXyAoF4t1Z","EERNEEnBqdGzBS8dd46wwNY5F2kwnaCQ3vsq2fNKGogZ","8sFf9TW3KzxLiBXcDcjAxqabEsRroo4EiRr3UG1xbJ9m","2iDSTGhjJEiRxNaLF27CY6daMYPs5hgYrP2REHd5YD62"];function*Ut(t){const e=t.isBids;for(const{key:n,quantity:o}of t.slab.items(e)){const t=y.default.BigInt(n.ushrn(64).toString());yield[t,y.default.BigInt(o.toString())]}}function xt(t,e){const n=t._decoded.baseLotSize;return n.isZero()?new P.default(0):function(t,e){const n=new P.default(t.div(e).toString()),o=t.umod(e),i=o.gcd(e);return n.add(new P.default(o.div(i).toString()).div(new P.default(e.div(i).toString())))}(e.mul(t._decoded.quoteLotSize).mul(t._baseSplTokenMultiplier),n.mul(t._quoteSplTokenMultiplier))}class _t{constructor(t){this.market=void 0,this.id=void 0,this.label="Serum",this.shouldPrefetch=!1,this._orderbooks=void 0,this.market=t,this.id=t.address.toBase58()}get orderbooks(){return this._orderbooks}getAccountsForUpdate(){return[this.market.asksAddress,this.market.bidsAddress]}update(t){const[e,o]=Rt(t,this.getAccountsForUpdate()),i=n.Orderbook.decode(this.market,e.data),r=n.Orderbook.decode(this.market,o.data);this._orderbooks={asks:i,bids:r}}getQuote({sourceMint:t,destinationMint:e,amount:n}){if(!this.orderbooks)throw new Error("Failed to find orderbooks");const o=function({market:t,asks:e,bids:n,fromAmount:o,fromMint:i,toMint:r}){const s=Lt.includes(t.address.toBase58())?1e-4:4e-4;return i.equals(t.quoteMintAddress)&&r.equals(t.baseMintAddress)?function(t,e,n,o){let i=y.default.BigInt(0),r=y.default.BigInt(0),s=y.default.BigInt(0),a=y.default.BigInt(0),u=y.default.BigInt(0);const m=t.quoteSizeLotsToNumber(new T.default(1));let d=m?y.default.BigInt(Math.floor(n/(1+o)/m)):c.ZERO;const l=y.default.BigInt(t.baseSizeLotsToNumber(new T.default(1)).toString());for(let[t,n]of Ut(e)){y.default.equal(r,c.ZERO)&&(r=t),s=t;const e=y.default.multiply(n,l),o=y.default.multiply(n,t);if(u=y.default.add(u,e),y.default.greaterThanOrEqual(o,d)){const e=y.default.divide(d,t);a=y.default.add(a,y.default.multiply(t,e)),i=y.default.add(i,y.default.multiply(l,e)),d=c.ZERO;break}a=y.default.add(a,y.default.multiply(t,n)),i=y.default.add(i,e),d=y.default.subtract(d,o)}const p=new P.default(r.toString()),h=new P.default(s.toString()).sub(p).div(p).toNumber(),f=xt(t,new T.default(r.toString())),g=xt(t,new T.default(a.toString()));return{side:"buy",notEnoughLiquidity:y.default.lessThanOrEqual(u,i),minimum:{in:new P.default(f.toString()).mul(l.toString()).mul(1+o).ceil().toNumber(),out:y.default.toNumber(l)},inAmount:new P.default(g.toString()).mul(l.toString()).mul(1+o).ceil().toNumber(),outAmount:y.default.toNumber(i),feeAmount:new P.default(a.toString()).mul(o).toNumber(),priceImpactPct:h,feePct:o}}(t,e,o,s):function(t,e,n,o){let i=y.default.BigInt(0),r=y.default.BigInt(0),s=y.default.BigInt(0),a=y.default.BigInt(0),u=y.default.BigInt(n),m=y.default.BigInt(0);const d=y.default.BigInt(t.baseSizeLotsToNumber(new T.default(1))),l=y.default.BigInt(t.quoteSizeLotsToNumber(new T.default(1)));for(const[t,n]of Ut(e)){y.default.equal(r,c.ZERO)&&(r=t),s=t;const e=y.default.multiply(d,n),o=y.default.multiply(n,y.default.multiply(t,l));if(a=y.default.add(a,e),y.default.greaterThanOrEqual(e,u)){const e=y.default.divide(u,d),n=y.default.multiply(e,t);i=y.default.add(i,y.default.multiply(n,l)),u=y.default.subtract(u,n),m=y.default.add(m,y.default.multiply(e,d));break}i=y.default.add(i,o),u=y.default.subtract(u,e),m=y.default.add(m,e)}let p=new P.default(i.toString()).mul(1-o).floor().toNumber();const h=xt(t,new T.default(r.toString())),f=xt(t,new T.default(s.toString())),g=h.minus(f).div(h).toNumber();return{side:"sell",notEnoughLiquidity:y.default.greaterThan(y.default.BigInt(n),a),minimum:{in:y.default.toNumber(d),out:h.mul(y.default.toNumber(d)).mul(1-o).floor().toNumber()},inAmount:y.default.toNumber(m),outAmount:p,feeAmount:new P.default(y.default.toNumber(i)).mul(o).round().toNumber(),priceImpactPct:g,feePct:o}}(t,n,o,s)}({market:this.market,asks:this.orderbooks.asks,bids:this.orderbooks.bids,fromMint:t,toMint:e,fromAmount:n});return{notEnoughLiquidity:o.notEnoughLiquidity,minInAmount:o.minimum.in,minOutAmount:o.minimum.out,inAmount:o.inAmount,outAmount:o.outAmount,feeAmount:o.feeAmount,feeMint:this.market.quoteMintAddress.toBase58(),feePct:o.feePct,priceImpactPct:o.priceImpactPct}}createSwapInstructions(t){var e;if(!t.openOrdersAddress)throw new Error("Missing open orders");return[dt({market:this.market,openOrdersAddress:t.openOrdersAddress,referrer:null==t||null===(e=t.quoteMintToReferrer)||void 0===e?void 0:e.get(this.market.quoteMintAddress.toBase58()),...t})]}get reserveTokenMints(){return[this.market.baseMintAddress,this.market.quoteMintAddress]}}_t.getL2=Ut;class Vt{constructor(t,e,n){this.firstAmm=void 0,this.secondAmm=void 0,this.reserveTokenMints=void 0,this.shouldSplitSetup=void 0,this.market=void 0,this.shouldPrefetch=!1,this.portion1=0,this.portion2=0,this.firstAmm=t,this.secondAmm=e,this.reserveTokenMints=n,this.shouldSplitSetup=function(t,e){return t instanceof Ct||e instanceof Ct||t instanceof _t&&e instanceof _t}(t,e),this.market=t instanceof _t?t.market:e instanceof _t?e.market:null}static create(t,e){if(!function(t,e){return!(t instanceof _t&&e instanceof Ct||t instanceof Ct&&e instanceof _t||t instanceof _t&&e instanceof _t)}(t,e))return;const n=Ot(t.reserveTokenMints),o=Ot(e.reserveTokenMints);for(const i of n)for(const n of o)if(i.every(((t,e)=>t.equals(n[e]))))return new Vt(t,e,i)}get id(){return`${this.firstAmm.id}-${this.secondAmm.id}`}get label(){return[{label:this.firstAmm.label,portion:this.portion1},{label:this.secondAmm.label,portion:this.portion2}].sort(((t,e)=>e.portion-t.portion)).map((({label:t,portion:e})=>`${t} (${e}%)`)).join(" + ")}getAccountsForUpdate(){return[]}update(t){}getQuote(t){var e,n,o,i;const r=t.sourceMint.toBase58(),s=t.amount;let a={outAmount:0,portion:0,firstQuote:void 0,secondQuote:void 0};for(let e=100;e-=5;e>0){const n=Math.floor(s*e/100),o=s-n,i=this.firstAmm.getQuote({...t,amount:n}),r=this.secondAmm.getQuote({...t,amount:o}),u=i.outAmount+r.outAmount;if(u<a.outAmount)break;a={outAmount:u,portion:e,firstQuote:i,secondQuote:r}}if(!a.firstQuote||!a.secondQuote)throw new Error("Unreachable: There was no better solution than getting 0 outAmount");const{outAmount:u,portion:c,firstQuote:m,secondQuote:d}=a,l=c,p=100-l;this.portion1=l,this.portion2=p;let h={amount:m.feeAmount,mint:m.feeMint},f={amount:d.feeAmount,mint:d.feeMint};h.mint!==f.mint&&(h.mint!==r&&(h={amount:Math.floor(h.amount*s*l/100/a.outAmount),mint:r}),f.mint!==r&&(f={amount:Math.floor(f.amount*s*p/100/a.outAmount),mint:r}));const g=m.minInAmount||d.minInAmount?(null!==(e=m.minInAmount)&&void 0!==e?e:0)+(null!==(n=d.minInAmount)&&void 0!==n?n:0):void 0,A=m.minOutAmount||d.minOutAmount?(null!==(o=m.minOutAmount)&&void 0!==o?o:0)+(null!==(i=d.minOutAmount)&&void 0!==i?i:0):void 0;return{notEnoughLiquidity:!1,inAmount:t.amount,outAmount:u,minInAmount:g,minOutAmount:A,feeAmount:h.amount+f.amount,feeMint:h.mint,feePct:(l*m.feePct+p*d.feePct)/100,priceImpactPct:(l*m.priceImpactPct+p*d.priceImpactPct)/100}}createSwapInstructions(t){const e=t.inAmount;if(null===e)throw new Error("Split trade cannot be used with a null inAmount");const n=Math.floor(e*this.portion1/100),o=e-n;return[...this.firstAmm.createSwapInstructions({...t,inAmount:n,minimumOutAmount:0,platformFee:void 0}),...this.secondAmm.createSwapInstructions({...t,inAmount:o,minimumOutAmount:0,platformFee:void 0}),wt(t.userDestinationTokenAccount,t.userTransferAuthority,t.minimumOutAmount,t.tokenLedger,t.platformFee)]}}const Wt=(t,e)=>!(t.id===e.id||t instanceof Nt&&e instanceof Nt||t instanceof Vt||e instanceof Vt);class Gt{constructor(t){this.stableSwap=void 0,this.id=void 0,this.label="Saber",this.shouldPrefetch=!1,this.tokenAccounts=[],this.calculator=void 0,this.stableSwap=t,this.id=t.config.swapAccount.toBase58(),this.calculator=new c.Stable(c.TWO,y.default.BigInt(this.stableSwap.state.targetAmpFactor.toString()),[c.ONE,c.ONE],new c.Fraction(this.stableSwap.state.fees.trade.numerator,this.stableSwap.state.fees.trade.denominator))}getAccountsForUpdate(){return[this.stableSwap.state.tokenA.reserve,this.stableSwap.state.tokenB.reserve]}update(t){let e=Rt(t,this.getAccountsForUpdate());this.tokenAccounts=e.map((t=>{const e=l.deserializeAccount(t.data);if(!e)throw new Error("Invalid token account data");return e}))}getQuote({sourceMint:t,destinationMint:e,amount:n}){if(0===this.tokenAccounts.length)throw new Error("Unable to fetch accounts for specified tokens.");const o=new P.default(this.stableSwap.state.fees.trade.asFraction.toFixed(4)),[i,r]=this.tokenAccounts[0].mint.equals(t)?[0,1]:[1,0],s=this.calculator.exchange(Kt(this.tokenAccounts),y.default.BigInt(n),i,r);return{notEnoughLiquidity:!1,inAmount:n,outAmount:y.default.toNumber(s.expectedOutputAmount),feeAmount:y.default.toNumber(s.fees),feeMint:e.toBase58(),feePct:o.toNumber(),priceImpactPct:s.priceImpact.toNumber()}}createSwapInstructions(t){return[Mt({stableSwap:this.stableSwap,...t})]}get reserveTokenMints(){return[this.stableSwap.state.tokenA.mint,this.stableSwap.state.tokenB.mint]}}const zt=new t.u64(0);class jt{constructor(t,e){this.numerator=void 0,this.denominator=void 0,this.toString=()=>`${this.numerator.toString()}/${this.denominator.toString()}`,this.numerator=t,this.denominator=e}static fromDecimal(t){return jt.fromFraction(t.toDecimalPlaces(1).mul(10).toNumber(),1e3)}static fromFraction(e,n){const o="number"==typeof e?new t.u64(e.toString()):e,i="number"==typeof n?new t.u64(n.toString()):n;return new jt(o,i)}toDecimal(){return this.denominator.eq(zt)?new P.default(0):new P.default(this.numerator.toString()).div(new P.default(this.denominator.toString()))}add(e){const n=this.denominator.gcd(e.denominator),o=this.denominator.div(n).mul(e.denominator),i=o.div(this.denominator),r=o.div(e.denominator),s=this.numerator.mul(i),a=e.numerator.mul(r),u=s.add(a);return new jt(new t.u64(u.toString()),new t.u64(o.toString()))}}const Qt=u.struct([Z("tradeFeeNumerator"),Z("tradeFeeDenominator"),Z("ownerTradeFeeNumerator"),Z("ownerTradeFeeDenominator"),Z("ownerWithdrawFeeNumerator"),Z("ownerWithdrawFeeDenominator")],"fees"),Ht=[u.blob(8,"padding"),H("lpTokenFreezeVault"),H("poolMint"),H("baseTokenVault"),H("baseTokenMint"),H("quoteTokenVault"),H("quoteTokenMint"),H("poolSigner"),u.u8("poolSignerNonce"),H("authority"),H("initializerAccount"),H("feeBaseAccount"),H("feeQuoteAccount"),H("feePoolTokenAccount"),Qt],Yt=u.struct(Ht),Zt=u.struct([...Ht,u.u8("curveType"),H("curve")]),Xt=u.struct([u.blob(8,"padding"),Z("amp")]);function Jt(t,e){const n=!!e.owner.equals(R),o=(n?Zt:Yt).decode(e.data),i="curveType"in o?{curveType:o.curveType,curve:o.curve}:{};return{isV2:n,address:t,poolMint:o.poolMint,baseTokenVault:o.baseTokenVault,baseTokenMint:o.baseTokenMint,quoteTokenVault:o.quoteTokenVault,quoteTokenMint:o.quoteTokenMint,poolSigner:o.poolSigner,feeBaseAccount:o.feeBaseAccount,feeQuoteAccount:o.feeQuoteAccount,feePoolTokenAccount:o.feePoolTokenAccount,fees:{traderFee:jt.fromFraction(o.fees.tradeFeeNumerator,o.fees.tradeFeeDenominator),ownerFee:jt.fromFraction(o.fees.ownerTradeFeeNumerator,o.fees.ownerTradeFeeDenominator)},...i}}class $t{constructor(t,e,n){if(this.params=void 0,this.id=void 0,this.label="Aldrin",this.shouldPrefetch=!1,this.poolState=void 0,this.tokenAccounts=[],this.calculator=void 0,this.params=n,this.poolState=Jt(t,e),this.id=t.toBase58(),1===this.poolState.curveType){const{amp:t}=this.params;if(!t)throw new Error("Amp is required for a stable curve");this.calculator=new c.TokenSwapStable(y.default.BigInt(t),new c.Fraction(y.default.BigInt(this.poolState.fees.traderFee.numerator.toString()),y.default.BigInt(this.poolState.fees.traderFee.denominator.toString())),new c.Fraction(y.default.BigInt(this.poolState.fees.ownerFee.numerator.toString()),y.default.BigInt(this.poolState.fees.ownerFee.denominator.toString())))}else this.calculator=new c.TokenSwapConstantProduct(new c.Fraction(y.default.BigInt(this.poolState.fees.traderFee.numerator.toString()),y.default.BigInt(this.poolState.fees.traderFee.denominator.toString())),new c.Fraction(y.default.BigInt(this.poolState.fees.ownerFee.numerator.toString()),y.default.BigInt(this.poolState.fees.ownerFee.denominator.toString())))}static decodeStableCurveAmp(t){const{amp:e}=Xt.decode(t.data);return 2*e.toNumber()}getAccountsForUpdate(){return[this.poolState.quoteTokenVault,this.poolState.baseTokenVault]}update(t){const e=Rt(t,this.getAccountsForUpdate());this.tokenAccounts=e.map((t=>{const e=l.deserializeAccount(t.data);if(!e)throw new Error("Invalid token account");return e}))}getQuote({sourceMint:t,amount:e}){if(0===this.tokenAccounts.length)throw new Error("Unable to fetch accounts for specified tokens.");let n=new P.default(this.poolState.fees.traderFee.numerator.toString()).div(this.poolState.fees.traderFee.denominator.toString()).add(new P.default(this.poolState.fees.ownerFee.numerator.toString()).div(this.poolState.fees.ownerFee.denominator.toString()));const o=this.tokenAccounts[0].mint.equals(t)?1:0;let i=this.calculator.exchange(Kt(this.tokenAccounts),y.default.BigInt(e),o);return{notEnoughLiquidity:!1,inAmount:e,outAmount:y.default.toNumber(i.expectedOutputAmount),feeAmount:y.default.toNumber(i.fees),feeMint:t.toBase58(),feePct:n.toNumber(),priceImpactPct:i.priceImpact.toNumber()}}createSwapInstructions(t){if(this.poolState.isV2){if(!this.poolState.curve)throw new Error("Unable to fetch curve account.");return[At({poolState:this.poolState,curve:this.poolState.curve,...t})]}return[gt({poolState:this.poolState,...t})]}get reserveTokenMints(){return[this.poolState.baseTokenMint,this.poolState.quoteTokenMint]}}$t.accountInfoToAldrinPoolState=Jt;const te=new e.PublicKey("SSwpMgqNDsyV7mAgN9ady4bDVu5ySjmmXejXvy2vLt1"),ee=new Map([["9W959DqEETiGZocYWCQPaJ6sBmUzgfxXfqGeTEdp3aQP","Orca"],[te.toBase58(),"Step"],["PSwapMdSai8tjrEXcxFeQth87xC4rRsa4VA5mhGhXkP","Penguin"],["SSwapUtytfBdBn1b9NUGG6foMVPtcWgpRU32HToDUZr","Saros"]]),ne=u.struct([u.u8("version"),u.u8("isInitialized"),u.u8("bumpSeed"),H("tokenProgramId"),H("tokenAccountA"),H("tokenAccountB"),H("tokenPool"),H("mintA"),H("mintB"),H("feeAccount"),Z("tradeFeeNumerator"),Z("tradeFeeDenominator"),Z("ownerTradeFeeNumerator"),Z("ownerTradeFeeDenominator"),Z("ownerWithdrawFeeNumerator"),Z("ownerWithdrawFeeDenominator"),Z("hostFeeNumerator"),Z("hostFeeDenominator"),u.u8("curveType"),u.blob(32,"curveParameters")]),oe=u.struct([u.u8("version"),u.u8("isInitialized"),u.u8("bumpSeed"),H("tokenProgramId"),H("tokenAccountA"),H("tokenAccountB"),H("tokenPool"),H("mintA"),H("mintB"),H("feeAccount"),Z("tradeFeeNumerator"),Z("tradeFeeDenominator"),Z("ownerTradeFeeNumerator"),Z("ownerTradeFeeDenominator"),Z("ownerWithdrawFeeNumerator"),Z("ownerWithdrawFeeDenominator"),u.u8("curveType"),u.blob(32,"curveParameters"),u.u8("poolNonce")]);var ie;!function(t){t[t.ConstantProduct=0]="ConstantProduct",t[t.Stable=2]="Stable"}(ie||(ie={}));class re{constructor(t,n,o){if(this.label=void 0,this.id=void 0,this.shouldPrefetch=!1,this.tokenSwapState=void 0,this.curveType=void 0,this.tokenAccounts=[],this.calculator=void 0,this.label=o,this.id=t.toBase58(),this.tokenSwapState=function(t,n){const o=n.owner,i=o.equals(te)?oe.decode(n.data):ne.decode(n.data);if(!i.isInitialized)throw new Error("Invalid token swap state");const[r]=s.findProgramAddressSync([t.toBuffer()],o),a=new e.PublicKey(i.tokenPool),u=new e.PublicKey(i.feeAccount),c=new e.PublicKey(i.tokenAccountA),m=new e.PublicKey(i.tokenAccountB),d=new e.PublicKey(i.mintA),l=new e.PublicKey(i.mintB);return{address:t,programId:o,tokenProgramId:new e.PublicKey(i.tokenProgramId),poolToken:a,feeAccount:u,authority:r,tokenAccountA:c,tokenAccountB:m,mintA:d,mintB:l,tradeFeeNumerator:i.tradeFeeNumerator,tradeFeeDenominator:i.tradeFeeDenominator,ownerTradeFeeNumerator:i.ownerTradeFeeNumerator,ownerTradeFeeDenominator:i.ownerTradeFeeDenominator,ownerWithdrawFeeNumerator:i.ownerWithdrawFeeNumerator,ownerWithdrawFeeDenominator:i.ownerWithdrawFeeDenominator,curveType:i.curveType,curveParameters:i.curveParameters,poolNonce:"poolNonce"in i?i.poolNonce:void 0}}(t,n),this.curveType=this.tokenSwapState.curveType,!(this.curveType in ie))throw new Error(`curveType ${this.tokenSwapState.curveType} is not supported`);this.calculator=this.tokenSwapState.curveType===ie.ConstantProduct?new c.TokenSwapConstantProduct(new c.Fraction(y.default.BigInt(this.tokenSwapState.tradeFeeNumerator.toString()),y.default.BigInt(this.tokenSwapState.tradeFeeDenominator.toString())),new c.Fraction(y.default.BigInt(this.tokenSwapState.ownerTradeFeeNumerator.toString()),y.default.BigInt(this.tokenSwapState.ownerTradeFeeDenominator.toString()))):new c.TokenSwapStable(y.default.BigInt(this.tokenSwapState.curveParameters[0]),new c.Fraction(y.default.BigInt(this.tokenSwapState.tradeFeeNumerator.toString()),y.default.BigInt(this.tokenSwapState.tradeFeeDenominator.toString())),new c.Fraction(y.default.BigInt(this.tokenSwapState.ownerTradeFeeNumerator.toString()),y.default.BigInt(this.tokenSwapState.ownerTradeFeeDenominator.toString())))}getAccountsForUpdate(){return[this.tokenSwapState.tokenAccountA,this.tokenSwapState.tokenAccountB]}update(t){const e=Rt(t,this.getAccountsForUpdate());this.tokenAccounts=e.map((t=>{const e=l.deserializeAccount(t.data);if(!e)throw new Error("Invalid token account");return e}))}getQuote({sourceMint:t,amount:e}){if(0===this.tokenAccounts.length)throw new Error("Unable to fetch accounts for specified tokens.");let n=new P.default(this.tokenSwapState.tradeFeeNumerator.toString()).div(this.tokenSwapState.tradeFeeDenominator.toString()).add(new P.default(this.tokenSwapState.ownerTradeFeeNumerator.toString()).div(this.tokenSwapState.ownerTradeFeeDenominator.toString()));const o=this.tokenAccounts[0].mint.equals(t)?1:0;let i=this.calculator.exchange(Kt(this.tokenAccounts),y.default.BigInt(Math.floor(e)),o);return{notEnoughLiquidity:!1,inAmount:e,outAmount:y.default.toNumber(i.expectedOutputAmount),feeAmount:y.default.toNumber(i.fees),feeMint:t.toBase58(),feePct:n.toNumber(),priceImpactPct:i.priceImpact.toNumber()}}createSwapInstructions(t){return[lt({tokenSwapState:this.tokenSwapState,...t,isStep:this.tokenSwapState.programId.equals(te)})]}get reserveTokenMints(){return[this.tokenSwapState.mintA,this.tokenSwapState.mintB]}}const se=Math.pow(10,10),ae=u.struct([u.u8("version"),u.u8("isInitialized"),u.u8("nonce"),Z("amplificationCoefficient"),Z("feeNumerator"),Z("adminFeeNumerator"),u.u32("tokenAccountsLength"),Z("precisionFactor"),Z("precisionMultiplierA"),Z("precisionMultiplierB"),Z("precisionMultiplierC"),Z("precisionMultiplierD"),H("tokenAccountA"),H("tokenAccountB"),H("tokenAccountC"),H("tokenAccountD")]),ue=(t,e)=>{const n=e.owner,o=ae.decode(e.data),i=o.tokenAccountsLength,[r]=s.findProgramAddressSync([t.toBuffer()],n),a=[o.precisionMultiplierA.toNumber(),o.precisionMultiplierB.toNumber(),o.precisionMultiplierC.toNumber(),o.precisionMultiplierD.toNumber()].slice(0,i),u=[o.tokenAccountA,o.tokenAccountB,o.tokenAccountC,o.tokenAccountD].slice(0,i);return{programId:n,authority:r,isInitialized:Boolean(o.isInitialized),nonce:o.nonce,ammId:t,amplificationCoefficient:o.amplificationCoefficient.toNumber(),feeNumerator:o.feeNumerator.toNumber(),tokenAccountsLength:i,precisionFactor:o.precisionFactor.toNumber(),precisionMultipliers:a,tokenAccounts:u}};class ce{constructor(t,e,n){this.params=void 0,this.id=void 0,this.label="Mercurial",this.shouldPrefetch=!1,this.swapLayout=void 0,this.tokenAccounts=[],this.calculator=void 0,this.params=n,this.id=t.toBase58(),this.swapLayout=ue(t,e),this.calculator=new c.Stable(y.default.BigInt(this.swapLayout.tokenAccountsLength),y.default.BigInt(this.swapLayout.amplificationCoefficient),this.swapLayout.precisionMultipliers.map((t=>y.default.BigInt(t))),new c.Fraction(y.default.BigInt(this.swapLayout.feeNumerator),y.default.BigInt(se)))}getAccountsForUpdate(){return this.swapLayout.tokenAccounts}update(t){let e=Rt(t,this.getAccountsForUpdate());this.tokenAccounts=e.map((t=>l.deserializeAccount(t.data))).filter((t=>null!==t))}getQuote({sourceMint:t,destinationMint:e,amount:n}){if(0===this.tokenAccounts.length)throw new Error("Unable to fetch accounts for specified tokens.");const o=this.tokenAccounts.findIndex((e=>e.mint.equals(t))),i=this.tokenAccounts.findIndex((t=>t.mint.equals(e))),r=this.calculator.exchange(Kt(this.tokenAccounts),y.default.BigInt(n),o,i),s=this.swapLayout.feeNumerator/se;return{notEnoughLiquidity:!1,inAmount:n,outAmount:y.default.toNumber(r.expectedOutputAmount),feeAmount:y.default.toNumber(r.fees),feeMint:e.toBase58(),feePct:s,priceImpactPct:r.priceImpact.toNumber()}}createSwapInstructions(t){return[mt({swapLayout:this.swapLayout,...t})]}get reserveTokenMints(){return this.params.tokenMints.map((t=>new e.PublicKey(t)))}}ce.decodeSwapLayout=ue;class me{static async getStateFromStateAccount(t){const e=await t.getAccountInfo(tt);if(!e)throw new Error("State account not found");return(t=>{const e=$.decode(t.data);return{isInitialized:Boolean(e.isInitialized),stateOwner:e.stateOwner,feeOwner:e.feeOwner,initialSupply:e.initialSupply,returnFeeNumerator:e.returnFeeNumerator.toNumber(),fixedFeeNumerator:e.fixedFeeNumerator.toNumber(),feeDenominator:e.feeDenominator.toNumber(),curveType:e.curveType,curveParameters:e.curveParameters}})(e)}constructor(t,n,o){this.params=void 0,this.id=void 0,this.label="Cropper",this.shouldPrefetch=!1,this.poolState=void 0,this.tokenAccounts=[],this.calculator=void 0,this.feePct=void 0,this.params=o,this.id=t.toBase58(),this.poolState=et(t,n),this.feePct=new P.default(this.params.fixedFeeNumerator).div(this.params.feeDenominator).add(new P.default(this.params.returnFeeNumerator).div(this.params.feeDenominator)),this.params.tokenAFeeAccount=new e.PublicKey(this.params.tokenAFeeAccount),this.params.tokenBFeeAccount=new e.PublicKey(this.params.tokenBFeeAccount),this.calculator=new c.TokenSwapConstantProduct(new c.Fraction(y.default.BigInt(this.params.fixedFeeNumerator),y.default.BigInt(this.params.feeDenominator)),new c.Fraction(y.default.BigInt(this.params.returnFeeNumerator),y.default.BigInt(this.params.feeDenominator)))}getAccountsForUpdate(){return[this.poolState.tokenAAccount,this.poolState.tokenBAccount]}update(t){const e=Rt(t,this.getAccountsForUpdate());this.tokenAccounts=e.map((t=>{const e=l.deserializeAccount(t.data);if(!e)throw new Error("Invalid token account");return e}))}getQuote({sourceMint:t,amount:e}){if(0===this.tokenAccounts.length)throw new Error("Unable to fetch accounts for specified tokens.");const n=this.tokenAccounts[0].mint.equals(t)?1:0,o=this.calculator.exchange(Kt(this.tokenAccounts),y.default.BigInt(e),n);return{notEnoughLiquidity:!1,inAmount:e,outAmount:y.default.toNumber(o.expectedOutputAmount),feeAmount:y.default.toNumber(o.fees),feeMint:t.toBase58(),feePct:this.feePct.toNumber(),priceImpactPct:o.priceImpact.toNumber()}}createSwapInstructions(t){const e=t.sourceMint.equals(this.poolState.mintA)?this.params.tokenAFeeAccount:this.params.tokenBFeeAccount;return[ht({poolState:this.poolState,feeAccount:e,...t})]}get reserveTokenMints(){return[this.poolState.mintA,this.poolState.mintB]}}me.decodePoolState=et;const de=(t,e)=>{const n=e.owner,o=p.TokenSwapAccountLayout.decode(e.data),[i]=s.findProgramAddressSync([t.toBuffer()],n);return{programId:n,authority:i,version:o.version,isInitialized:Boolean(o.isInitialized),nonce:o.nonce,ammId:t,tokenProgramId:o.tokenProgramId,tokenAAccount:o.swapTokenA,tokenBAccount:o.swapTokenB,ticksKey:o.ticksKey,mintA:o.tokenAMint,mintB:o.tokenBMint,fee:o.fee,currentSqrtPrice:o.currentSqrtPrice,currentLiquity:o.currentLiquity}};class le{constructor(t,e){this.id=void 0,this.label="Crema",this.shouldPrefetch=!1,this.ticks=void 0,this.poolState=void 0,this.poolState=de(t,e),this.id=t.toBase58()}getAccountsForUpdate(){return[this.poolState.ammId,this.poolState.ticksKey]}update(t){const[e,n]=Rt(t,this.getAccountsForUpdate());this.poolState=de(this.poolState.ammId,e);const o=p.parseTicksAccount(this.poolState.ticksKey,n);if(!o)throw new Error(`Ticks account invalid: ${this.poolState.ticksKey.toBase58()}`);this.ticks=o.data.ticks}getQuote({sourceMint:t,amount:e}){if(!this.ticks)throw new Error("Unable to fetch accounts for ticks.");if(0===e)return{notEnoughLiquidity:!1,inAmount:e,outAmount:0,feeAmount:0,feeMint:t.toBase58(),feePct:this.poolState.fee.toNumber(),priceImpactPct:0};const n=this.poolState.mintA.equals(t)?this.preSwapA(new P.default(e)):this.preSwapB(new P.default(e));return{notEnoughLiquidity:!1,inAmount:e,outAmount:n.amountOut.toNumber(),feeAmount:n.feeUsed.toNumber(),feeMint:t.toBase58(),feePct:this.poolState.fee.toNumber(),priceImpactPct:n.impact.toNumber()}}preSwapA(t){if(!this.ticks)throw new Error("Unable to fetch accounts for ticks.");let e=p.calculateSwapA2B(this.ticks,this.poolState.currentSqrtPrice,this.poolState.fee,this.poolState.currentLiquity,t),n=this.poolState.currentSqrtPrice.pow(2),o=e.amountOut.div(e.amountUsed).sub(n).div(n).abs();return{...e,impact:o}}preSwapB(t){if(!this.ticks)throw new Error("Unable to fetch accounts for ticks.");let e=p.calculateSwapB2A(this.ticks,this.poolState.currentSqrtPrice,this.poolState.fee,this.poolState.currentLiquity,t),n=this.poolState.currentSqrtPrice.pow(2),o=new P.default(1).div(n),i=e.amountOut.div(e.amountUsed).sub(o).div(o).abs();return{...e,impact:i}}createSwapInstructions(t){return[kt({poolState:this.poolState,...t})]}get reserveTokenMints(){return[this.poolState.mintA,this.poolState.mintB]}}const pe=u.struct([u.blob(8,"discriminator"),H("factory"),u.u8("bump"),Z("index"),H("admin"),H("token0Reserves"),H("token0Mint"),H("token0Fees"),H("token1Reserves"),H("token1Mint"),H("token1Fees"),u.u8("isPaused"),H("poolMint"),Z("tradeFeeKbps"),Z("withdrawFeeKbps"),Z("adminTradeFeeKbps"),Z("adminWithdrawFeeKbps")]);class he{constructor(t,e){this.id=void 0,this.label="Sencha",this.shouldPrefetch=!1,this.poolState=void 0,this.calculator=void 0,this.tokenAccounts=[],this.id=t.toBase58(),this.poolState=((t,e)=>{const n=e.owner,o=pe.decode(e.data);return{programId:n,isPaused:Boolean(o.isPaused),bump:o.bump,ammId:t,token0Reserves:o.token0Reserves,token1Reserves:o.token1Reserves,token0Mint:o.token0Mint,token1Mint:o.token1Mint,token0Fees:o.token0Fees,token1Fees:o.token1Fees,poolMint:o.poolMint,tradeFeeKbps:o.tradeFeeKbps.toNumber()}})(t,e),this.calculator=new c.TokenSwapConstantProduct(new c.Fraction(y.default.BigInt(this.poolState.tradeFeeKbps),y.default.BigInt(1e7)),new c.Fraction(c.ZERO,c.ZERO),!1)}get isPaused(){return this.poolState.isPaused}getAccountsForUpdate(){return[this.poolState.token0Reserves,this.poolState.token1Reserves]}update(t){const e=Rt(t,this.getAccountsForUpdate());this.tokenAccounts=e.map((t=>{const e=l.deserializeAccount(t.data);if(!e)throw new Error("Invalid token account");return e}))}getQuote({sourceMint:t,amount:e}){if(0===this.tokenAccounts.length)throw new Error("Unable to fetch accounts for specified tokens.");const n=this.tokenAccounts[0].mint.equals(t)?1:0;let o=this.calculator.exchange(Kt(this.tokenAccounts),y.default.BigInt(e),n),i=this.poolState.tradeFeeKbps/1e7;return{notEnoughLiquidity:!1,inAmount:e,outAmount:y.default.toNumber(o.expectedOutputAmount),feeAmount:y.default.toNumber(o.fees),feeMint:t.toBase58(),feePct:i,priceImpactPct:o.priceImpact.toNumber()}}createSwapInstructions(t){return[pt({poolState:this.poolState,...t})]}get reserveTokenMints(){return[this.poolState.token0Mint,this.poolState.token1Mint]}}class fe{constructor(t,e){var n;this.ammAccountInfo=void 0,this.id=void 0,this.label="Lifinity",this.shouldPrefetch=!1,this.swapState=void 0,this.poolInfo=void 0,this.accountInfos=[],this.ammAccountInfo=e,this.id=t.toBase58(),this.swapState=((t,e)=>{const n=e.owner,o=h.LIFINITY_AMM_LAYOUT.decode(e.data),[i]=s.findProgramAddressSync([t.toBuffer()],n);return{programId:n,authority:i,amm:t,tokenAMint:o.tokenAMint,tokenBMint:o.tokenBMint,poolMint:o.poolMint,feeAccount:o.poolFeeAccount,pythAccount:o.pythAccount,pythPcAccount:o.pythPcAccount,configAccount:o.configAccount,poolCoinTokenAccount:o.tokenAAccount,poolCoinMint:o.tokenAMint,poolPcTokenAccount:o.tokenBAccount,poolPcMint:o.tokenBMint}})(t,e),this.poolInfo={amm:(n=this.swapState).amm.toBase58(),configAccount:n.configAccount.toBase58(),feeAccount:n.feeAccount.toBase58(),pythAccount:n.pythAccount.toBase58(),pythPcAccount:n.pythPcAccount.toBase58(),poolCoinMint:n.poolCoinMint.toBase58(),poolCoinTokenAccount:n.poolCoinTokenAccount.toBase58(),poolMint:n.poolMint.toBase58(),poolCoinDecimal:0,poolPcDecimal:0,poolPcTokenAccount:n.poolPcTokenAccount.toBase58(),poolPcMint:n.poolPcMint.toBase58()}}getAccountsForUpdate(){return[this.swapState.poolCoinTokenAccount,this.swapState.poolPcTokenAccount,this.swapState.configAccount,this.swapState.pythAccount,this.swapState.pythPcAccount]}update(t){this.getAccountsForUpdate().forEach(((e,n)=>{const o=t.get(e.toBase58());o&&(this.accountInfos[n]={publicKey:e,account:o})}))}getQuote({sourceMint:t,amount:e}){if(this.accountInfos.length!==this.getAccountsForUpdate().length)throw new Error("Accounts not loaded");const n=this.swapState.poolCoinMint.equals(t)?h.TradeDirection.AtoB:h.TradeDirection.BtoA,{amm:o,pyth:i,pythPc:r,fees:s,coinBalance:a,pcBalance:u,config:c}=h.getParsedData([{publicKey:this.swapState.amm,account:this.ammAccountInfo},...this.accountInfos],this.poolInfo);if(!i.status.equals(1)||r&&!r.status.equals(1))throw new Error("Pyth accounts are outdated");const m=new P.default(e),d=h.getCurveAmount(m,i.publishSlot.toNumber(),o,s,a,u,c,i,r,n);return{notEnoughLiquidity:!1,inAmount:e,outAmount:d.amountSwapped.toNumber(),feeAmount:d.fee.toNumber(),feeMint:t.toBase58(),feePct:d.feePercent.toNumber(),priceImpactPct:d.priceImpact.toNumber()}}createSwapInstructions(t){return[vt({swapState:this.swapState,...t})]}get reserveTokenMints(){return[this.swapState.poolCoinMint,this.swapState.poolPcMint]}}function ge(t,e){const n=f.parseWhirlpool(e);if(!n)throw new Error(`Failed to parse whilpool ${t.toBase58()}`);return n}class Ae{constructor(t,e){this.address=void 0,this.id=void 0,this.label="Orca (Whirlpool)",this.shouldPrefetch=!0,this.whirlpoolData=void 0,this.tickArrays=new Map,this.tickPks=void 0,this.oracle=void 0,this.feePct=void 0,this.address=t,this.id=t.toBase58(),this.whirlpoolData=ge(t,e.data),this.oracle=s.findProgramAddressSync([Buffer.from("oracle"),t.toBuffer()],V)[0],this.feePct=new P.default(this.whirlpoolData.feeRate).div(1e6).toNumber(),this.tickPks=f.getTickArrayPks(t,this.whirlpoolData)}getAccountsForUpdate(){return[this.address,...this.tickPks]}update(t){const e=t.get(this.address.toBase58());if(!e)throw new Error(`Missing ${this.address.toBase58()}`);this.whirlpoolData=ge(this.address,e.data),this.tickPks=f.getTickArrayPks(this.address,this.whirlpoolData),this.tickArrays.clear();for(const e of this.tickPks){const n=e.toBase58(),o=t.get(n);if(!o)continue;const i=f.parseTickArray(o.data);if(!i)throw new Error(`Could not parse tick array ${n}`);this.tickArrays.set(n,i)}}getQuote({sourceMint:t,amount:e}){const n=f.getSwapQuote({poolAddress:this.address,whirlpool:this.whirlpoolData,tickArrays:this.tickArrays,tokenMint:t,tokenAmount:new T.default(e.toString()),isInput:!0}),o=Number(n.amountIn.toString()),i=Math.floor(this.feePct*o),r=n.aToB?new P.default(n.amountOut.toString()).div(n.amountIn.toString()):new P.default(n.amountIn.toString()).div(n.amountOut.toString()),s=(a=this.whirlpoolData.sqrtPrice,new P.default(a.toString()).mul(P.default.pow(2,-64))).pow(2);var a;const u=s.minus(r).div(s).abs().toNumber();return{notEnoughLiquidity:!1,inAmount:o,outAmount:Number(n.amountOut.toString()),feeAmount:i,feeMint:t.toBase58(),feePct:this.feePct,priceImpactPct:Number(u)}}createSwapInstructions(t){const e=t.sourceMint.equals(this.whirlpoolData.tokenMintA),[n,o,i]=f.getTickArrayPublicKeysForSwap(this.whirlpoolData.tickCurrentIndex,this.whirlpoolData.sqrtPrice,this.whirlpoolData.tickSpacing,this.address,this.tickArrays,V,e);return[Bt({additionalArgs:{aToB:e,whirlpool:this.address,tickArray0:n,tickArray1:o,tickArray2:i,oracle:this.oracle,...this.whirlpoolData},...t})]}get reserveTokenMints(){return[this.whirlpoolData.tokenMintA,this.whirlpoolData.tokenMintB]}}class ke{constructor(t,e){this.program=void 0,this.pool=void 0,this.bitmapCache=void 0,this.tickCache=void 0,this.accountsToFetch={bitmaps:[],ticks:[]},this.program=t,this.pool=e,this.bitmapCache=new Map,this.tickCache=new Map}async eagerLoadCache(t,e){const n=y.default.toNumber(y.default.divide(y.default.BigInt(t),y.default.BigInt(e))),{wordPos:o}=g.tickPosition(n);try{const t=[],{wordPos:n}=g.tickPosition(Math.floor(g.TickMath.MIN_TICK/e)),{wordPos:s}=g.tickPosition(Math.floor(g.TickMath.MAX_TICK/e)),a=Math.max(o-10,n),u=Math.min(o+10,s);for(let e=a;e<u;e++)t.push(this.getBitmapAddressSync(e));const c=await this.program.account.tickBitmapState.fetchMultiple(t),m=[];for(let n=0;n<u-a;n++){var i;const o=n+a,s=null===(i=c[n])||void 0===i?void 0:i.word,u=s?g.generateBitmapWord(s):new r.BN(0);if(this.bitmapCache.set(o,{address:t[n],word:u}),u&&!u.eqn(0))for(let t=0;t<256;t++)if(u.shrn(t).and(new r.BN(1)).eqn(1)){const n=this.getTickAddressSync(((o<<8)+t)*e);m.push(n)}}const d=await this.program.account.tickState.fetchMultiple(m);for(const t in m){const e=d[t];if(!e)continue;const{tick:n,liquidityNet:o}=e;this.tickCache.set(n,{address:m[t],liquidityNet:y.default.BigInt(o)})}}catch(t){console.log(t)}}lazyLoadAccountsToCache(t,e){const n=y.default.toNumber(y.default.divide(y.default.BigInt(t),y.default.BigInt(e))),{wordPos:o}=g.tickPosition(n),i=[],s=[],{wordPos:a}=g.tickPosition(Math.floor(g.TickMath.MIN_TICK/e)),{wordPos:u}=g.tickPosition(Math.floor(g.TickMath.MAX_TICK/e)),c=Math.max(o-10,a),m=Math.min(o+10,u);for(let t=c;t<m;t++){i.push(this.getBitmapAddressSync(t));const e=this.bitmapCache.get(t);s.push(e)}const d=[];for(let t=0;t<m-c;t++){var l,p;const n=t+c,o=null!==(l=null===(p=s[t])||void 0===p?void 0:p.word)&&void 0!==l?l:new r.BN(0);if(this.bitmapCache.set(n,{address:i[t],word:o}),o&&!o.eqn(0))for(let t=0;t<256;t++)if(o.shrn(t).and(new r.BN(1)).eqn(1)){const o=this.getTickAddressSync(((n<<8)+t)*e);d.push(o)}}return this.accountsToFetch={bitmaps:i,ticks:d},[...i,...d]}getTick(t){let e=this.tickCache.get(t);if(!e)throw new Error("Tick not cached");return{address:e.address,liquidityNet:e.liquidityNet}}async getTickAddress(t){return this.getTickAddressSync(t)}getTickAddressSync(t){return s.findProgramAddressSync([g.TICK_SEED,this.pool.token0.toBuffer(),this.pool.token1.toBuffer(),g.u32ToSeed(this.pool.fee),g.u32ToSeed(t)],this.program.programId)[0]}async getBitmapAddress(t){return this.getBitmapAddressSync(t)}getBitmapAddressSync(t){return s.findProgramAddressSync([g.BITMAP_SEED,this.pool.token0.toBuffer(),this.pool.token1.toBuffer(),g.u32ToSeed(this.pool.fee),g.u16ToSeed(t)],this.program.programId)[0]}getBitmap(t){let e=this.bitmapCache.get(t);if(!e)throw new Error("Bitmap not cached");return e}nextInitializedTickWithinOneWord(t,e,n){let o=y.default.toNumber(y.default.divide(y.default.BigInt(t),y.default.BigInt(n)));t<0&&t%n!=0&&(o-=1),e||(o+=1);const{wordPos:i,bitPos:r}=g.tickPosition(o),s=this.getBitmap(i),{next:a,initialized:u}=g.nextInitializedBit(s.word,r,e);return[g.buildTick(i,a,n),u,i,r,s.address]}updateCachedAccountInfos(t){for(const e of this.accountsToFetch.bitmaps){const n=t.get(e.toBase58());if(n){const t=this.program.coder.accounts.decode("tickBitmapState",n.data);this.bitmapCache.set(t.wordPos,{address:e,word:g.generateBitmapWord(t.word)})}}for(const e of this.accountsToFetch.ticks){const n=t.get(e.toBase58());if(n){const t=this.program.coder.accounts.decode("tickState",n.data);this.tickCache.set(t.tick,{address:e,liquidityNet:y.default.BigInt(t.liquidityNet)})}}}}const we=new M.Program(g.IDL,W,new M.Provider(null,null,{skipPreflight:!1}));class Se{constructor(e,n){let o;this.address=void 0,this.label="Cykura",this.id=void 0,this.shouldPrefetch=!0,this.poolState=void 0,this.pool=void 0,this.tickDataProvider=void 0,this.tokens=void 0,this.vaults=void 0,this.swapAccountMetas=[],this.feePct=void 0,this.address=e,this.id=e.toBase58(),o="data"in n?we.coder.accounts.decode("poolState",n.data):n,this.poolState=o;const{token0:i,token1:r,fee:a,sqrtPriceX32:u,liquidity:c,tick:m}=this.poolState;this.tickDataProvider=new ke(we,{token0:i,token1:r,fee:a}),this.tokens={token0:new A.Token(101,i,0,"",""),token1:new A.Token(101,r,0,"","")},this.pool=new g.Pool(this.tokens.token0,this.tokens.token1,a,y.default.BigInt(u.toString()),y.default.BigInt(c.toString()),m,this.tickDataProvider),this.vaults={vault0:s.findProgramAddressSync([this.address.toBuffer(),t.TOKEN_PROGRAM_ID.toBuffer(),i.toBuffer()],t.ASSOCIATED_TOKEN_PROGRAM_ID)[0],vault1:s.findProgramAddressSync([this.address.toBuffer(),t.TOKEN_PROGRAM_ID.toBuffer(),r.toBuffer()],t.ASSOCIATED_TOKEN_PROGRAM_ID)[0]},this.feePct=this.poolState.fee/1e6}getAccountsForUpdate(){return[this.address,...this.tickDataProvider.lazyLoadAccountsToCache(this.pool.tickCurrent,this.pool.tickSpacing)]}update(t){const e=t.get(this.address.toBase58());if(!e)throw new Error(`Could not find poolAccountInfo ${this.address.toBase58()}`);this.poolState=we.coder.accounts.decode("poolState",e.data);const{fee:n,sqrtPriceX32:o,liquidity:i,tick:r}=this.poolState;this.pool=new g.Pool(this.tokens.token0,this.tokens.token1,n,y.default.BigInt(o.toString()),y.default.BigInt(i.toString()),r,this.tickDataProvider),this.tickDataProvider.updateCachedAccountInfos(t)}getQuote({sourceMint:t,amount:e}){const n=t.equals(this.poolState.token0)?this.tokens.token0:this.tokens.token1,[o,i,r]=this.pool.getOutputAmount(A.CurrencyAmount.fromRawAmount(n,y.default.BigInt(e)));this.swapAccountMetas=r;const s=c.toDecimal(y.default.subtract(this.pool.sqrtRatioX32,i.sqrtRatioX32)).div(this.pool.sqrtRatioX32.toString());return{notEnoughLiquidity:!1,inAmount:e,outAmount:y.default.toNumber(o.quotient),feeAmount:Math.floor(e*this.poolState.fee/1e6),feeMint:t.toBase58(),feePct:this.feePct,priceImpactPct:s.toNumber()}}createSwapInstructions(t){const[e,n]=t.sourceMint.equals(this.poolState.token0)?[this.vaults.vault0,this.vaults.vault1]:[this.vaults.vault1,this.vaults.vault0],o=s.findProgramAddressSync([g.OBSERVATION_SEED,this.poolState.token0.toBuffer(),this.poolState.token1.toBuffer(),g.u32ToSeed(this.poolState.fee),g.u16ToSeed(this.poolState.observationIndex)],W)[0],i=s.findProgramAddressSync([g.OBSERVATION_SEED,this.poolState.token0.toBuffer(),this.poolState.token1.toBuffer(),g.u32ToSeed(this.poolState.fee),g.u16ToSeed((this.poolState.observationIndex+1)%this.poolState.observationCardinalityNext)],W)[0],r={poolAddress:this.address,inputVault:e,outputVault:n,nextObservationState:i,lastObservationState:o,swapAccountMetas:this.swapAccountMetas};return[bt({...t,additionalArgs:r})]}get reserveTokenMints(){return[this.poolState.token0,this.poolState.token1]}}function ye(t){if(t.length>1){const[e,n]=t;if(e instanceof Ct&&n instanceof Ct)return!1}return!0}const Me=t=>{var e,n,o;return`${null===(e=t[0])||void 0===e?void 0:e.inputMint}-${null===(n=t[0])||void 0===n?void 0:n.outputMint}-${null===(o=t[1])||void 0===o?void 0:o.outputMint}-${t.map((t=>t.amm.id))}`},Te=({instructionCache:t,walletPublicKey:e,cacheKey:n})=>{var o;return null===(o=t.get(e))||void 0===o?void 0:o.get(n)};async function Pe(n,o,i,r,s){const a="string"==typeof r?new e.PublicKey(r):r,u=await t.Token.getAssociatedTokenAddress(t.ASSOCIATED_TOKEN_PROGRAM_ID,t.TOKEN_PROGRAM_ID,a,i,!0),c=[],m=[];return null===await n.getAccountInfo(u)&&m.push(t.Token.createAssociatedTokenAccountInstruction(t.ASSOCIATED_TOKEN_PROGRAM_ID,t.TOKEN_PROGRAM_ID,a,u,i,o)),a.equals(I)&&s&&c.push(t.Token.createCloseAccountInstruction(t.TOKEN_PROGRAM_ID,u,i,i,[])),{address:u,instructions:m,cleanupInstructions:c,signers:[]}}const ve=async(t,e,n,o)=>{const[i,r]=await Promise.all([(async()=>2===e.length?await Pe(t,n,n,e[0].outputMint,o):void 0)(),(async()=>await Pe(t,n,n,2===e.length?e[1].outputMint:e[0].outputMint,o))()]);return{userIntermediaryTokenAccountResult:i,userDestinationTokenAccountResult:r}};async function be(t,n,o,i){const r={instructions:[],cleanupInstructions:[],signers:[]},a=o.address.toString();if(i){let e=i.get(a);if(e){let n=null;if(n=await t.getAccountInfo(e,"confirmed"),n)return{...r,address:e}}}const[u,c]=function(t,n){const[o]=s.findProgramAddressSync([Buffer.from("open_orders"),t.publicKey.toBuffer(),n.toBuffer()],ot);return[o,it.instruction.createOpenOrders({accounts:{openOrders:o,payer:n,dexProgram:t.programId,systemProgram:e.SystemProgram.programId,rent:e.SYSVAR_RENT_PUBKEY,market:t.publicKey}})]}(o,n);return await t.getAccountInfo(u)||(r.instructions=[c]),null==i||i.set(o.address.toString(),u),{...r,address:u}}function Be(t){return t.reduce(((t,e)=>e+t),0)}const Ie=({intermediate:t,destination:e,openOrders:n,hasWrapUnwrapSOL:o,feeCalculator:i})=>{const r=n.filter((t=>t&&t.instructions.length>0)).map((()=>23352760)),s=[t,e].filter((t=>(null==t?void 0:t.instructions.length)&&0===t.cleanupInstructions.length)).map((()=>2039280)),a=([...null==n?void 0:n.map((t=>null==t?void 0:t.signers)),null==t?void 0:t.signers,e.signers].filter(Boolean).flat().length+1)*i.lamportsPerSignature;return{signatureFee:a,openOrdersDeposits:r,ataDeposits:s,totalFeeAndDeposits:Be([a,...r,...s]),minimumSOLForTransaction:Be([a,...r,...[t,e].filter((t=>{var e;return(null!==(e=null==t?void 0:t.instructions.length)&&void 0!==e?e:0)>0})).map((()=>2039280)),o?2039280:0])}},Fe={feeBps:0,feeAccounts:new Map};async function De(e,n){return(await e.getTokenAccountsByOwner(n,{programId:t.TOKEN_PROGRAM_ID})).value.reduce(((t,e)=>{const n=l.deserializeAccount(e.account.data);return n&&t.set(n.mint.toBase58(),e.pubkey),t}),new Map)}class Ne{constructor(t,e,n){this.connection=void 0,this.feePayer=void 0,this.instructions=void 0,this.owner=void 0,this.connection=t,this.feePayer=e,this.instructions=[],this.owner=n}addInstruction(t){return this.instructions.push(t),this}async build(t){t||(t=(await this.connection.getLatestBlockhash("confirmed")).blockhash);const n={recentBlockhash:t,feePayer:this.feePayer};let o=[],i=[],r=[];this.instructions.forEach((t=>{o=o.concat(t.instructions),i=i.concat(t.cleanupInstructions),r=r.concat(t.signers)}));const s=new e.Transaction(n);return o.concat(i).forEach((t=>s.add(t))),s.feePayer=this.feePayer,{transaction:s,signers:r,execute:this.owner.isKeyPair?()=>this.connection.sendTransaction(s,r):async()=>{throw new Error("Please use a Keypair for the owner parameter to enable the execute function")}}}}class Oe{constructor(t){this._owner=void 0,this._owner=t}get publicKey(){return Oe.isKeyPair(this._owner)?this._owner.publicKey:this._owner}get signer(){return Oe.isKeyPair(this._owner)?this._owner:void 0}get isKeyPair(){return Oe.isKeyPair(this._owner)}get isPublicKey(){return Oe.isPublicKey(this._owner)}static isKeyPair(t){return void 0!==t.secretKey}static isPublicKey(t){return!Oe.isKeyPair(t)}}const Ee=t=>new Promise((e=>setTimeout(e,t)));function Re(t,e,n){if(t)return function(t,e){var n,o,i,r;const s=null===(n=e.postTokenBalances)||void 0===n||null===(o=n.find((e=>e.accountIndex===t)))||void 0===o?void 0:o.uiTokenAmount.amount,a=null===(i=e.preTokenBalances)||void 0===i||null===(r=i.find((e=>e.accountIndex===t)))||void 0===r?void 0:r.uiTokenAmount.amount;if(s)return Math.abs(parseInt(s)-(void 0!==a?parseInt(a):0))}(e.message.accountKeys.findIndex((t=>t.equals(n))),t)}function Ke(t,e,n){let o=e.message.accountKeys.findIndex((t=>t.equals(n)));return-1!==o?Math.abs(t.postBalances[o]-t.preBalances[o]):0}function qe(){return(new Date).getTime()}const Ce={skipPreflight:!0,maxRetries:2};async function Le(t,e,n=12e4,o=500,i=2e3,r=40){const s=e.serialize(),a=await t.sendRawTransaction(s,Ce),u=qe();let c=qe(),m=0;for(;qe()-u<n;){const e=qe();m<r&&e-c>i&&(c=e,m+=1,await t.sendRawTransaction(s,Ce));const n=await t.getTransaction(a,{commitment:"confirmed"});if(n)return{txid:a,transactionResponse:n};await Ee(o)}return{txid:a,transactionResponse:null}}function Ue(t){const e=t.signature;if(!e)throw new Error("Transaction has no signature");return k.bs58.encode(e)}const xe=function(t){if(!Array.isArray(t))throw new TypeError(`Argument must be an array: ${t}`)},_e=function(t,e){return t*e.length},Ve={},We=function(t,e){return String(e)};function Ge({inputMint:t,outputMint:e}){return`${t}-${e}`}function ze({ammId:t,amount:e}){return`${t}-${e}`}function je({inputRouteSegment:t,inputMint:n,outputMint:o,amount:i,getDepositAndFeeForRoute:r,platformFeeBps:s,slippage:a,filterTopNResult:u,onlyDirectRoutes:c}){const m=n.toBase58(),d=o.toBase58(),l=new Map,p=t.get(m),h=[];if(!p)throw new Error("inputMintInnerMap is undefined");const f=c?0:2,g=({inputMint:n,level:o=0,walked:r=[n]})=>{const s=t.get(n);s&&s.forEach(((a,c)=>{const m=Ge({inputMint:n,outputMint:c}),p=function({amms:t,inputMint:n,outputMint:o,amount:i,filterTopNResult:r=3}){const s=t.map((t=>{try{return{quote:t.getQuote({amount:i,sourceMint:new e.PublicKey(n),destinationMint:new e.PublicKey(o)}),id:t.id}}catch(t){return}})).sort(((t,e)=>((null==e?void 0:e.quote.outAmount)||0)-((null==t?void 0:t.quote.outAmount)||0))).filter(((t,e)=>t&&t.quote.inAmount&&e<r));return new Map(s.map((t=>[ze({ammId:t.id,amount:i}),t.quote])))}({amms:a,inputMint:n,outputMint:c,amount:i,filterTopNResult:u}),A=a.filter((t=>p.has(ze({ammId:t.id,amount:i}))));if(c===d&&function(t,e){for(let n=0;n<t.length;n++)for(let o=n+1;o<t.length;o++)t[n].label!==t[o].label&&e(t[n],t[o])}(A.slice(),((t,e)=>{const n=Vt.create(t,e);n&&A.push(n)})),s.set(c,A),l.set(m,p),c!==d&&p.size&&!r.includes(c)&&o<f-1)g({inputMint:c,amount:p.values().next().value.outAmount,level:o+1,walked:r.concat(c)});else if(c===d){const n=r.concat(c),o=n.map((t=>new e.PublicKey(t))),i=n.reduce(((e,o,i)=>{var r;return i<n.length-1&&e.push(null===(r=t.get(n[i]))||void 0===r?void 0:r.get(n[i+1])),e}),[]);(function(t){if(function(t){if(!Array.isArray(t))throw new TypeError("Argument must be an array of arrays");t.forEach(xe),function({length:t}){if(t>=100)throw new TypeError(`Too many arrays (${t}): please use the 'big-cartesian' library instead of 'fast-cartesian'`)}(t),function(t){const e=t.reduce(_e,1);if(e>=4294967296){const t=Number.isFinite(e)?` (${e.toExponential(0)})`:"";throw new TypeError(`Too many combinations${t}: please use the 'big-cartesian' library instead of 'fast-cartesian'`)}}(t)}(t),0===t.length)return[];const e=[];return function(t){const e=Ve[t];if(void 0!==e)return e;const n=function(t){const e=Array.from({length:t},We),n=e.map((t=>`for (const value${t} of arrays[${t}]) {`)).join("\n"),o=e.map((t=>`value${t}`)).join(", "),i="}\n".repeat(t);return new Function("arrays","result",`${n}\nresult.push([${o}])\n${i}`)}(t);return Ve[t]=n,n}(t.length)(t,e),e})(i).forEach((t=>{(1===t.length||Wt(t[0],t[1]))&&h.push({amms:t,mints:o})}))}}))};return g({inputMint:m,amount:i}),h.map((t=>{const{amms:e,mints:n}=t;let o=[],u=i,c=i;const m=ye(e),d=n,p=e.length;for(const[t,n]of e.entries())try{var h;const e=d[t],i=d[t+1],r=Ge({inputMint:e.toBase58(),outputMint:i.toBase58()}),f=(null===(h=l.get(r))||void 0===h?void 0:h.get(ze({ammId:n.id,amount:u})))||n.getQuote({sourceMint:e,destinationMint:i,amount:u}),g=p-1===t&&m?{amount:Math.floor(f.outAmount*s/1e4),mint:i.toBase58(),pct:s/100}:{amount:0,mint:i.toBase58(),pct:0},A=Math.max(0,f.outAmount-g.amount),k=Math.round(A*(1-a/100));o.push({amm:n,inputMint:e,outputMint:i,notEnoughLiquidity:f.notEnoughLiquidity,minInAmount:f.minInAmount,minOutAmount:f.minOutAmount,inAmount:f.inAmount,outAmount:A,priceImpactPct:f.priceImpactPct,lpFee:{amount:f.feeAmount,mint:f.feeMint,pct:f.feePct},platformFee:g}),u=A,c=k}catch(t){return}return{marketInfos:o,getDepositAndFee:()=>r({marketInfos:o}),inAmount:o[0].inAmount,outAmount:u,outAmountWithSlippage:c,priceImpactPct:1-o.reduce(((t,e)=>t*(1-e.priceImpactPct)),1)}})).filter((t=>void 0!==t)).sort(((t,e)=>e.outAmount-t.outAmount))}async function Qe({txid:t,transactionResponse:e}){var n;if(!e)throw new l.TransactionError("Transaction was not confirmed",t);if(null!=e&&null!==(n=e.meta)&&void 0!==n&&n.err){let{message:n,code:o}=await l.parseErrorForTransaction(e);throw 6e3===o&&(n="Slippage error"),new l.TransactionError(n||"",t,o)}return{txid:t,transactionResponse:e}}class He{constructor(n,o,i,r,s,a,u=0,c=!0,m,d,l){this.connection=void 0,this.cluster=void 0,this.tokenRouteSegments=void 0,this.feeCalculator=void 0,this.platformFeeAndAccounts=void 0,this.quoteMintToReferrer=void 0,this.routeCacheDuration=void 0,this.wrapUnwrapSOL=void 0,this.tokenLedger=void 0,this.intermediateTokens=void 0,this.shouldLoadSerumOpenOrders=void 0,this.serumOpenOrdersPromise=void 0,this.instructionCache=new Map,this.user=void 0,this.routeCache=new Map,this.getDepositAndFees=async({marketInfos:t,userPublicKey:e,serumOpenOrdersPromise:n=Promise.resolve(new Map)})=>(async({connection:t,userPublicKey:e,inputMint:n,marketInfos:o,feeCalculator:i,instructionCache:r,serumOpenOrdersPromise:s,wrapUnwrapSOL:a})=>{const u=Me(o),c=e.toBase58(),m=Te({instructionCache:r,walletPublicKey:c,cacheKey:u}),d=n.equals(I)&&a;if(m){const{destination:t,intermediate:e,openOrders:n}=m;return Ie({intermediate:e,destination:t,openOrders:n,hasWrapUnwrapSOL:d,feeCalculator:i})}const l=Promise.all(o.map((async n=>{const o=n.amm;if(o instanceof _t||o instanceof Vt){if(!o.market)return;return await be(t,e,o.market,await s)}}))),p=ve(t,o,e,a).then((({userIntermediaryTokenAccountResult:t,userDestinationTokenAccountResult:e})=>l.then((n=>({intermediate:t,destination:e,openOrders:n}))))),h=await p;return(({instructionCache:t,instructionResult:e,walletPublicKey:n,cacheKey:o})=>{const i=t.get(n)||new Map;i.set(o,e),t.set(n,i)})({cacheKey:u,instructionCache:r,instructionResult:h,walletPublicKey:c}),Ie({...h,hasWrapUnwrapSOL:d,feeCalculator:i})})({connection:this.connection,feeCalculator:this.feeCalculator,instructionCache:this.instructionCache,inputMint:t[0].inputMint,marketInfos:t,serumOpenOrdersPromise:n,userPublicKey:e,wrapUnwrapSOL:this.wrapUnwrapSOL}),this.getDepositAndFeesForUser=({marketInfos:t})=>{if(this.user&&this.serumOpenOrdersPromise){const e=new Oe(this.user);return this.getDepositAndFees({marketInfos:t,userPublicKey:e.publicKey,serumOpenOrdersPromise:this.serumOpenOrdersPromise})}return Promise.resolve(void 0)},this.exchange=async({routeInfo:n,userPublicKey:o,feeAccount:i,wrapUnwrapSOL:r,tokenLedger:s})=>{var a;const{connection:u,serumOpenOrdersPromise:c}=this,m=o||this.user;if(!m)throw new Error("user not found");const d=new Oe(m),l=n.marketInfos.length-1,p=n.marketInfos[0].inputMint,h=n.marketInfos[l].outputMint,f=null!=r?r:this.wrapUnwrapSOL,g=Me(n.marketInfos);let A=Te({instructionCache:this.instructionCache,walletPublicKey:d.publicKey.toBase58(),cacheKey:g});if(!A){const[t,e]=await Promise.all([ve(u,n.marketInfos,d.publicKey,f),Promise.all(n.marketInfos.map((async({amm:t})=>{if(t instanceof _t||t instanceof Vt){if(!t.market)return;return await be(u,d.publicKey,t.market,await c)}})))]);A={intermediate:t.userIntermediaryTokenAccountResult,destination:t.userDestinationTokenAccountResult,openOrders:e}}const k=p.equals(I)&&f?await async function(n,o,i){const r={instructions:[],cleanupInstructions:[],signers:[]};r.instructions=[];const s=await t.Token.getAssociatedTokenAddress(t.ASSOCIATED_TOKEN_PROGRAM_ID,t.TOKEN_PROGRAM_ID,I,o,!0);return null===await n.getAccountInfo(s)&&r.instructions.push(t.Token.createAssociatedTokenAccountInstruction(t.ASSOCIATED_TOKEN_PROGRAM_ID,t.TOKEN_PROGRAM_ID,I,s,o,o)),r.instructions.push(e.SystemProgram.transfer({fromPubkey:o,toPubkey:s,lamports:i})),r.instructions.push(t.Token.createSyncNativeInstruction(t.TOKEN_PROGRAM_ID,s)),r.cleanupInstructions=[t.Token.createCloseAccountInstruction(t.TOKEN_PROGRAM_ID,s,o,o,[])],{address:s,...r}}(u,d.publicKey,n.inAmount):{instructions:[],cleanupInstructions:[],signers:[],address:await t.Token.getAssociatedTokenAddress(t.ASSOCIATED_TOKEN_PROGRAM_ID,t.TOKEN_PROGRAM_ID,p,d.publicKey,!0)},w=(i=i||this.platformFeeAndAccounts.feeAccounts.get(h.toBase58()))?{feeBps:this.platformFeeAndAccounts.feeBps||Math.floor(100*n.marketInfos[l].platformFee.pct),feeAccount:i}:void 0,S=await async function({user:t,tokenLedger:e,openOrdersAddresses:n,userSourceTokenAccountAddress:o,userIntermediaryTokenAccountAddress:i,userDestinationTokenAccountAddress:r,routeInfo:s,platformFee:a,quoteMintToReferrer:u}){const c=s.outAmountWithSlippage,m=s.inAmount,d=s.marketInfos.length;if(2===d&&!i)throw new Error("Missing intermediary token account");const l=a&&function(t){if(t.length<2)return!1;const[e,n]=t.map((t=>t.amm));return e instanceof Ct&&n instanceof _t||e instanceof _t&&n instanceof Ct}(s.marketInfos)?void 0:u,p=[o,...i?[i]:[],r],h=ye(s.marketInfos.map((t=>t.amm))),f=[St(e,p[1])];for(const[o,i]of s.marketInfos.entries()){const r=i.amm,s=0===o?m:null,u=o===d-1?c:0,g=o===d-1&&h?a:void 0,[A,k]=p.slice(o);f.push(...r.createSwapInstructions({sourceMint:i.inputMint,destinationMint:i.outputMint,userSourceTokenAccount:A,userDestinationTokenAccount:k,userTransferAuthority:t.publicKey,inAmount:s,minimumOutAmount:u,tokenLedger:e,openOrdersAddress:n[o],platformFee:g,quoteMintToReferrer:l}))}const{signers:g,cleanupInstructions:A}={instructions:[],cleanupInstructions:[],signers:[]};return t.isKeyPair&&t.signer&&g.push(t.signer),{signers:g,cleanupInstructions:A,instructions:f}}({user:d,tokenLedger:s||this.tokenLedger,openOrdersAddresses:A.openOrders.map((t=>null==t?void 0:t.address)),userSourceTokenAccountAddress:k.address,userIntermediaryTokenAccountAddress:null===(a=A.intermediate)||void 0===a?void 0:a.address,userDestinationTokenAccountAddress:A.destination.address,routeInfo:n,platformFee:w,quoteMintToReferrer:this.quoteMintToReferrer}),y=function(t){if(1===t.length){const e=t[0].amm;if(e instanceof Vt&&e.shouldSplitSetup)return!0}else{const[e,n]=t.map((t=>t.amm));if(e instanceof Ct||n instanceof Ct)return!0;if(e instanceof _t&&n instanceof _t)return!0}return!1}(n.marketInfos),M=new Ne(u,d.publicKey,d),T=new Ne(u,d.publicKey,d),P=new Ne(u,d.publicKey,d);var v,b;y?(A.openOrders&&A.openOrders.forEach((t=>{t&&M.addInstruction(t)})),A.intermediate&&M.addInstruction({...A.intermediate,cleanupInstructions:[]}),M.addInstruction({...k,cleanupInstructions:[]}),P.addInstruction({instructions:[],cleanupInstructions:[],signers:[],cleanupInstructions:k.cleanupInstructions}).addInstruction({instructions:[],cleanupInstructions:[],signers:[],cleanupInstructions:null!==(v=null===(b=A.intermediate)||void 0===b?void 0:b.cleanupInstructions)&&void 0!==v?v:[]}),k.address.equals(A.destination.address)||(M.addInstruction({...A.destination,cleanupInstructions:[]}),P.addInstruction({instructions:[],cleanupInstructions:[],signers:[],cleanupInstructions:A.destination.cleanupInstructions}))):(A.openOrders&&A.openOrders.forEach((t=>{t&&T.addInstruction(t)})),A.intermediate&&T.addInstruction(A.intermediate),T.addInstruction(k),k.address.equals(A.destination.address)||T.addInstruction(A.destination)),T.addInstruction(S);const B=(await this.connection.getRecentBlockhash("finalized")).blockhash,{transaction:F}=await M.build(B),{transaction:D}=await T.build(B),{transaction:N}=await P.build(B),[O,E,R]=(()=>{if(F.instructions.length&&N.instructions.length)return[F,D,N];if(F.instructions.length){const[t,e]=[F,D];return[t,e,void 0]}if(N.instructions.length){const[t,e]=[D,N];return[void 0,t,e]}return[void 0,D,void 0]})(),K=A;return{transactions:{setupTransaction:O,swapTransaction:E,cleanupTransaction:R},execute:({wallet:t,onTransaction:e}={})=>this.executeInternal({wallet:t,onTransaction:e,inputMint:p,outputMint:h,sourceInstruction:k,setupInstructions:K,setupTransaction:O,swapTransaction:E,cleanupTransaction:R,wrapUnwrapSOL:f,owner:d})}},this.connection=n,this.cluster=o,this.tokenRouteSegments=i,this.feeCalculator=r,this.platformFeeAndAccounts=s,this.quoteMintToReferrer=a,this.routeCacheDuration=u,this.wrapUnwrapSOL=c,this.tokenLedger=m,this.intermediateTokens=d,this.shouldLoadSerumOpenOrders=l}static async load({connection:t,cluster:n,user:o,platformFeeAndAccounts:i=Fe,quoteMintToReferrer:r,routeCacheDuration:s=0,wrapUnwrapSOL:a=!0,marketUrl:u,restrictIntermediateTokens:c=!1,tokenLedger:m=st,shouldLoadSerumOpenOrders:d=!0}){const[l,{value:{feeCalculator:p}},h,f]=await Promise.all([He.fetchTokenRouteSegments(t,n,u),t.getRecentBlockhashAndContext("processed"),null!=r?r:De(t,new e.PublicKey(x)),c?He.getIntermediateTokens():void 0]),g=new He(t,n,l,p,i,h,s,a,m,f,d);return o&&g.setUserPublicKey(o),g}getAccountToAmmMap(){const t=new Map;return this.tokenRouteSegments.forEach((e=>{Array.from(e.values()).forEach((e=>{e.forEach((e=>{e.getAccountsForUpdate().forEach((n=>{t.set(n.toBase58(),e)}))}))}))})),t}async computeRoutes({inputMint:t,outputMint:e,inputAmount:n,slippage:o,feeBps:i=0,forceFetch:r,onlyDirectRoutes:s,filterTopNResult:a}){const u=t.toBase58(),c=e.toBase58(),m=i||(this.platformFeeAndAccounts.feeAccounts.get(c)?this.platformFeeAndAccounts.feeBps:0),d=(new Date).getTime(),l=[u,c].sort(((t,e)=>t.localeCompare(e))).join(""),p=this.routeCache.get(l),h=function({inputMint:t,outputMint:e,tokenRouteSegments:n,intermediateTokens:o}){const i=new Map,r=n.get(t),s=n.get(e);if(r&&s){const n=new Map,a=new Map;for(let[u,c]of r.entries()){if(u===e){n.set(u,c),a.set(t,c);continue}if(o&&!o.includes(u))continue;const r=s.get(u);r&&(i.set(u,new Map([[t,c],[e,r]])),n.set(u,c),a.set(u,r))}i.set(t,n),i.set(e,a)}return i}({inputMint:u,outputMint:c,tokenRouteSegments:this.tokenRouteSegments,intermediateTokens:this.intermediateTokens});let f=!1;if(-1===this.routeCacheDuration)f=!1;else if(0===this.routeCacheDuration)f=!0;else if(p){const{fetchTimestamp:t}=p;d-t>this.routeCacheDuration&&(f=!0)}else f=!0;(r||f)&&(await async function(t,e){const n=new Map,o=new Set,i=new Map;e.forEach((t=>{t.forEach((t=>{t.forEach((t=>{i.set(t.id,t),t.getAccountsForUpdate().forEach((t=>{o.add(t.toBase58())}))}))}))}));const r=Array.from(o);r.length>0&&((await Et(t,r)).forEach(((t,e)=>{t&&n.set(r[e],t)})),i.forEach((t=>{t.update(n)})))}(this.connection,h),this.routeCache.set(l,{fetchTimestamp:(new Date).getTime()}));try{return{routesInfos:je({inputRouteSegment:h,inputMint:t,outputMint:e,amount:n,getDepositAndFeeForRoute:this.getDepositAndFeesForUser,onlyDirectRoutes:s,slippage:o,platformFeeBps:m,filterTopNResult:a}),cached:!(r||f)}}catch(t){throw t}finally{this.routeCache.forEach((({fetchTimestamp:t},e)=>{t-d>this.routeCacheDuration&&this.routeCache.delete(e)}))}}setUserPublicKey(t){this.user=t;const e=new Oe(this.user);this.serumOpenOrdersPromise=this.shouldLoadSerumOpenOrders?He.findSerumOpenOrdersForOwner({connection:this.connection,cluster:this.cluster,userPublicKey:e.publicKey}):Promise.resolve(new Map)}static async fetchTokenRouteSegments(t,i,r){const a=await(async t=>await(await v.default(t)).json())(r||N[i]);return function(t){const e=new Map;return t.forEach((t=>{Ot(t.reserveTokenMints).forEach((([n,o])=>{!function(t,e,n,o){let i=o.get(t);i||(i=new Map([[e,[]]]),o.set(t,i));let r=i.get(e);r||(r=[],i.set(e,r)),r.push(n)}(n.toBase58(),o.toBase58(),t,e)}))})),e}(await async function(t,i){const r=(t=>t.map((t=>{const{data:[n,o],pubkey:i,...r}=t;return{...r,pubkey:new e.PublicKey(i),data:Buffer.from(n,o),owner:new e.PublicKey(r.owner)}})))(i),a=[];if(a.length){const e=await async function(t,e){const n=(await Et(t,e.map((t=>t.toBase58())))).map(((t,n)=>{const o=e[n];if(!t)throw new Error(`Failed to fetch pool ${o.toBase58()}`);return{pubkey:o,...t}}));return n}(t,a);r.push(...e)}const u=r.reduce(((t,i)=>{const r=function(t,i,r){const a=new e.PublicKey(i.owner);if(a.equals(F)||a.equals(D)){const t=n.Market.getLayout(a).decode(i.data);if(!t.accountFlags.initialized||!t.accountFlags.market)throw new Error("Invalid market");const e=new n.Market(t,0,0,{},a);return new _t(e)}if(a.equals(O)){const e=new Ct(t,i,r);if(1===e.status)return e}else{if(a.equals(_))return new ce(t,i,r);if(a.equals(o.SWAP_PROGRAM_ID)){const e=o.StableSwap.loadWithData(t,i.data,s.findProgramAddressSync([t.toBuffer()],o.SWAP_PROGRAM_ID)[0]);if(e.state.isPaused||!e.state.isInitialized)return;return new Gt(e)}if(a.equals(U))return new le(t,i);if(a.equals(E)||a.equals(R))return new $t(t,i,r);if([...ee.keys()].includes(a.toBase58())){var u;const e=null!==(u=ee.get(i.owner.toBase58()))&&void 0!==u?u:"Unknown";return new re(t,i,e)}if(a.equals(q))return new me(t,i,r);if(a.equals(C)){const e=new he(t,i);if(e.isPaused)return;return e}if(a.equals(L))return new fe(t,i);if(a.equals(V))return new Ae(t,i);if(a.equals(W))return new Se(t,i)}}(i.pubkey,i,i.params);return r&&t.push(r),t}),new Array);return await(async(t,e)=>{const n=t.map((t=>t.getAccountsForUpdate().map((t=>t.toBase58())))).flat(),o=new Map;(await Et(e,n)).forEach(((t,e)=>{t&&o.set(n[e],t)}));for(let e of t)e.update(o)})(u.filter((t=>t.shouldPrefetch)),t),u.push(...Ft()),u}(t,a))}getRouteMap(t){return function(t,e,n){const o=new Map;for(const[r,s]of t){const a=new Set;for(const[o,u]of s){var i;if(a.add(o),n)continue;const s=null!==(i=t.get(o))&&void 0!==i?i:[];for(const[t,n]of s)if(t!==r&&(!e||e.includes(o)))for(const e of u)for(const o of n)if(Wt(e,o)){a.add(t);break}}o.set(r,Array.from(a))}return o}(this.tokenRouteSegments,this.intermediateTokens,t)}async executeInternal({wallet:t,onTransaction:e,inputMint:n,outputMint:o,sourceInstruction:i,setupInstructions:r,setupTransaction:s,swapTransaction:a,cleanupTransaction:u,owner:c,wrapUnwrapSOL:m}){try{const p=[s,a,u].filter((t=>void 0!==t)),h=p.length;if(c.signer){const t=c.signer;p.forEach((e=>{e.sign(t)}))}else{if(!t)throw new Error("Signer wallet not found");h>1?await t.signAllTransactions(p):await t.signTransaction(p[0])}let f,g;s&&(null==e||e(Ue(s),h,"SETUP"),await Qe(await Le(this.connection,s))),null==e||e(Ue(a),h,"SWAP");try{const{txid:t,transactionResponse:s}=await Qe(await Le(this.connection,a)),[d,p]=function({txid:t,inputMint:e,outputMint:n,user:o,sourceAddress:i,destinationAddress:r,transactionResponse:s,hasWrappedSOL:a}){let u,c;if(s){let{meta:t,transaction:m}=s;t&&(u=e.equals(I)&&!a?Ke(t,m,o):Re(t,m,i),c=n.equals(I)&&!a?Ke(t,m,o):Re(t,m,r))}if(!u||!c)throw new l.TransactionError("Cannot find source or destination token account balance change",t,j.BalancesNotExtractedProperly.code);return[u,c]}({txid:t,inputMint:n,outputMint:o,user:c.publicKey,sourceAddress:i.address,destinationAddress:r.destination.address,transactionResponse:s,hasWrappedSOL:Boolean(u)||!m});g={txid:t,inputAddress:i.address,outputAddress:r.destination.address,inputAmount:d,outputAmount:p}}catch(t){f=t}finally{u&&(null==e||e(Ue(u),h,"CLEANUP"),await Le(this.connection,u))}if(f||!g)throw f||new Error("Swap failed");return g}catch(t){return{error:t}}finally{var d;((null==r?void 0:r.openOrders.some((t=>null==t?void 0:t.instructions.length)))||null!=r&&null!==(d=r.intermediate)&&void 0!==d&&d.instructions.length||null!=r&&r.destination.instructions.length)&&(({instructionCache:t,walletPublicKey:e})=>{var n;null===(n=t.get(e))||void 0===n||n.clear()})({instructionCache:this.instructionCache,walletPublicKey:c.publicKey.toBase58()}),this.routeCache.clear()}}static async getIntermediateTokens(){const t=await async function(){const t=await(await v.default("https://cache.jup.ag/top-tokens")).json();return new Set(t.filter(((t,e)=>e<60)))}();for(const e of z)t.add(e);return Ft().forEach((e=>{t.add(e.wrappedToken.addDecimals.mint.toBase58())})),Array.from(t)}}He.findSerumOpenOrdersForOwner=async({userPublicKey:t,cluster:e,connection:o})=>{const i=new Map;if(t){const r="mainnet-beta"===e?F:D;(await n.OpenOrders.findForOwner(o,t,r)).forEach((t=>{i.set(t.market.toString(),t.address)}))}return i},He.createInitializeTokenLedgerInstruction=function(t,n){return it.instruction.initializeTokenLedger({accounts:{tokenLedger:t,payer:n,systemProgram:e.SystemProgram.programId}})},exports.ALDRIN_SWAP_PROGRAM_ID=E,exports.ALDRIN_SWAP_V2_PROGRAM_ID=R,exports.AldrinAmm=$t,exports.CREMA_PROGRAM_ID=U,exports.CROPPER_PROGRAM_ID=q,exports.CYKURA_FACTORY_STATE_ADDRESS=G,exports.CYKURA_PROGRAM_ID=W,exports.CropperAmm=me,exports.CykuraAmm=Se,exports.DEVNET_SERUM_DEX_PROGRAM=D,exports.IS_DEV=!1,exports.JUPITER_ERRORS=j,exports.JUPITER_WALLET=x,exports.Jupiter=He,exports.LAMPORTS_PER_SIGNATURE=5e3,exports.LIFINITY_PROGRAM_ID=L,exports.MAINNET_SERUM_DEX_PROGRAM=F,exports.MARKETS_URL=N,exports.MERCURIAL_SWAP_PROGRAM_ID=_,exports.MercurialAmm=ce,exports.RAYDIUM_AMM_V4_PROGRAM_ID=O,exports.RaydiumAmm=Ct,exports.SABER_ADD_DECIMALS_PROGRAM_ID=K,exports.SENCHA_PROGRAM_ID=C,exports.SWAP_PROTOCOL_TOKENS=z,exports.SaberAddDecimalsAmm=Nt,exports.SaberAmm=Gt,exports.SenchaAmm=he,exports.SerumAmm=_t,exports.SplTokenSwapAmm=re,exports.SplitTradeAmm=Vt,exports.TOKEN_LIST_URL={devnet:"https://api.jup.ag/api/tokens/devnet",testnet:"https://api.jup.ag/api/markets/devnet","mainnet-beta":"https://cache.jup.ag/tokens"},exports.TransactionBuilder=Ne,exports.WHIRLPOOL_PROGRAM_ID=V,exports.WRAPPED_SOL_MINT=I,exports.WhirlpoolAmm=Ae,exports.getEmptyInstruction=()=>({instructions:[],cleanupInstructions:[],signers:[]}),exports.getPlatformFeeAccounts=De,exports.getRouteInfoUniqueId=function(t){return t.marketInfos.map((t=>`${t.amm.id}-${t.inputMint}`)).join("-")},exports.getSaberWrappedDecimalsAmms=Ft,exports.transactionSenderAndConfirmationWaiter=Le;
//# sourceMappingURL=core.cjs.production.min.js.map
