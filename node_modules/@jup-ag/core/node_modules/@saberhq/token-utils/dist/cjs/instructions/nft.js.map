{"version":3,"file":"nft.js","sourceRoot":"","sources":["../../../src/instructions/nft.ts"],"names":[],"mappings":";;;AACA,iDAA6E;AAG7E,wBAA+D;AAExD,MAAM,OAAO,GAAG,KAAK,EAC1B,QAAkB,EAClB,MAAc,EACd,QAAmB,QAAQ,CAAC,MAAM,CAAC,SAAS,EACd,EAAE;IAChC,2BAA2B;IAC3B,MAAM,iBAAiB,GAAG,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC;IACpD,mBAAmB;IACnB,MAAM,EAAE,GAAG,MAAM,IAAA,6BAA0B,EAAC;QAC1C,QAAQ;QACR,MAAM;QACN,QAAQ,EAAE,CAAC;QACX,aAAa,EAAE,iBAAiB;KACjC,CAAC,CAAC;IACH,4BAA4B;IAC5B,MAAM,EAAE,OAAO,EAAE,WAAW,EAAE,GAAG,MAAM,IAAA,iBAAc,EAAC;QACpD,QAAQ;QACR,IAAI,EAAE,MAAM,CAAC,SAAS;QACtB,KAAK,EAAE,KAAK;QACZ,KAAK,EAAE,QAAQ,CAAC,MAAM,CAAC,SAAS;KACjC,CAAC,CAAC;IACH,IAAI,WAAW,EAAE;QACf,EAAE,CAAC,YAAY,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;KACnC;IACD,sBAAsB;IACtB,EAAE,CAAC,YAAY,CAAC,IAAI,CAClB,iBAAQ,CAAC,uBAAuB,CAC9B,4BAAgB,EAChB,MAAM,CAAC,SAAS,EAChB,OAAO,EACP,iBAAiB,EACjB,EAAE,EACF,IAAI,eAAG,CAAC,CAAC,CAAC,CACX,CACF,CAAC;IACF,wCAAwC;IACxC,EAAE,CAAC,YAAY,CAAC,IAAI,CAClB,iBAAQ,CAAC,6BAA6B,CACpC,4BAAgB,EAChB,MAAM,CAAC,SAAS,EAChB,IAAI,EACJ,YAAY,EACZ,iBAAiB,EACjB,EAAE,CACH,CACF,CAAC;IAEF,OAAO,EAAE,CAAC;AACZ,CAAC,CAAC;AAhDW,QAAA,OAAO,WAgDlB","sourcesContent":["import type { Provider, TransactionEnvelope } from \"@saberhq/solana-contrib\";\nimport { Token as SPLToken, TOKEN_PROGRAM_ID, u64 } from \"@solana/spl-token\";\nimport type { PublicKey, Signer } from \"@solana/web3.js\";\n\nimport { createInitMintInstructions, getOrCreateATA } from \".\";\n\nexport const mintNFT = async (\n  provider: Provider,\n  mintKP: Signer,\n  owner: PublicKey = provider.wallet.publicKey\n): Promise<TransactionEnvelope> => {\n  // Temporary mint authority\n  const tempMintAuthority = provider.wallet.publicKey;\n  // Mint for the NFT\n  const tx = await createInitMintInstructions({\n    provider,\n    mintKP,\n    decimals: 0,\n    mintAuthority: tempMintAuthority,\n  });\n  // Token account for the NFT\n  const { address, instruction } = await getOrCreateATA({\n    provider,\n    mint: mintKP.publicKey,\n    owner: owner,\n    payer: provider.wallet.publicKey,\n  });\n  if (instruction) {\n    tx.instructions.push(instruction);\n  }\n  // Mint to owner's ATA\n  tx.instructions.push(\n    SPLToken.createMintToInstruction(\n      TOKEN_PROGRAM_ID,\n      mintKP.publicKey,\n      address,\n      tempMintAuthority,\n      [],\n      new u64(1)\n    )\n  );\n  // Set mint authority of the NFT to NULL\n  tx.instructions.push(\n    SPLToken.createSetAuthorityInstruction(\n      TOKEN_PROGRAM_ID,\n      mintKP.publicKey,\n      null,\n      \"MintTokens\",\n      tempMintAuthority,\n      []\n    )\n  );\n\n  return tx;\n};\n"]}