{"version":3,"file":"instructions.js","sourceRoot":"","sources":["../../../src/computeBudget/instructions.ts"],"names":[],"mappings":";;;AAAA,6CAAyD;AAEzD,mCAAiD;AACjD,uCAAuE;AAEvE;;;GAGG;AACI,MAAM,8BAA8B,GAAG,CAC5C,KAAa,EACb,aAAqB,EACG,EAAE;IAC1B,MAAM,IAAI,GAAG,MAAM,CAAC,KAAK,CAAC,4BAAkB,CAAC,IAAI,CAAC,CAAC;IACnD,4BAAkB,CAAC,MAAM,CAAC,EAAE,WAAW,EAAE,CAAC,EAAE,KAAK,EAAE,aAAa,EAAE,EAAE,IAAI,CAAC,CAAC;IAC1E,OAAO,IAAI,gCAAsB,CAAC;QAChC,IAAI;QACJ,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,8BAAsB;KAClC,CAAC,CAAC;AACL,CAAC,CAAC;AAXW,QAAA,8BAA8B,kCAWzC;AAEF;;;;GAIG;AACI,MAAM,2BAA2B,GAAG,CACzC,KAAa,EACW,EAAE;IAC1B,MAAM,IAAI,GAAG,MAAM,CAAC,KAAK,CAAC,gCAAsB,CAAC,IAAI,CAAC,CAAC;IACvD,gCAAsB,CAAC,MAAM,CAAC,EAAE,WAAW,EAAE,CAAC,EAAE,KAAK,EAAE,EAAE,IAAI,CAAC,CAAC;IAC/D,OAAO,IAAI,gCAAsB,CAAC;QAChC,IAAI;QACJ,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,8BAAsB;KAClC,CAAC,CAAC;AACL,CAAC,CAAC;AAVW,QAAA,2BAA2B,+BAUtC","sourcesContent":["import { TransactionInstruction } from \"@solana/web3.js\";\n\nimport { COMPUTE_BUDGET_PROGRAM } from \"./index\";\nimport { RequestHeapFrameLayout, RequestUnitsLayout } from \"./layouts\";\n\n/**\n * Request a specific maximum number of compute units the transaction is\n * allowed to consume and an additional fee to pay.\n */\nexport const requestComputeUnitsInstruction = (\n  units: number,\n  additionalFee: number\n): TransactionInstruction => {\n  const data = Buffer.alloc(RequestUnitsLayout.span);\n  RequestUnitsLayout.encode({ instruction: 0, units, additionalFee }, data);\n  return new TransactionInstruction({\n    data,\n    keys: [],\n    programId: COMPUTE_BUDGET_PROGRAM,\n  });\n};\n\n/**\n * Request a specific transaction-wide program heap region size in bytes.\n * The value requested must be a multiple of 1024. This new heap region\n * size applies to each program executed, including all calls to CPIs.\n */\nexport const requestHeapFrameInstruction = (\n  bytes: number\n): TransactionInstruction => {\n  const data = Buffer.alloc(RequestHeapFrameLayout.span);\n  RequestHeapFrameLayout.encode({ instruction: 1, bytes }, data);\n  return new TransactionInstruction({\n    data,\n    keys: [],\n    programId: COMPUTE_BUDGET_PROGRAM,\n  });\n};\n"]}