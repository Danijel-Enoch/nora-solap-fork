{"version":3,"file":"instructions.js","sourceRoot":"","sources":["../../../src/utils/instructions.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,sBAAsB,EAAE,MAAM,iBAAiB,CAAC;AAEzD,OAAO,EAAE,SAAS,EAAE,MAAM,aAAa,CAAC;AAExC;;GAEG;AACH,MAAM,CAAC,MAAM,eAAe,GAAG,IAAI,SAAS,CAC1C,6CAA6C,CAC9C,CAAC;AAEF;;;;;;;;GAQG;AACH,MAAM,CAAC,MAAM,qBAAqB,GAAG,CACnC,IAAY,EACZ,UAAgC,EAAE,EACV,EAAE;IAC1B,OAAO,IAAI,sBAAsB,CAAC;QAChC,SAAS,EAAE,eAAe;QAC1B,IAAI,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;YACxB,MAAM,EAAE,CAAC;YACT,QAAQ,EAAE,IAAI;YACd,UAAU,EAAE,KAAK;SAClB,CAAC,CAAC;QACH,IAAI,EAAE,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC;KAChC,CAAC,CAAC;AACL,CAAC,CAAC","sourcesContent":["import { TransactionInstruction } from \"@solana/web3.js\";\n\nimport { PublicKey } from \"./publicKey\";\n\n/**\n * ID of the memo program.\n */\nexport const MEMO_PROGRAM_ID = new PublicKey(\n  \"MemoSq4gqABAXKb96qnH8TysNcWxMyWCqXgDLGmfcHr\"\n);\n\n/**\n * Creates a memo program instruction.\n *\n * More info: https://spl.solana.com/memo\n *\n * @param text Text of the memo.\n * @param signers Optional signers to validate.\n * @returns\n */\nexport const createMemoInstruction = (\n  text: string,\n  signers: readonly PublicKey[] = []\n): TransactionInstruction => {\n  return new TransactionInstruction({\n    programId: MEMO_PROGRAM_ID,\n    keys: signers.map((s) => ({\n      pubkey: s,\n      isSigner: true,\n      isWritable: false,\n    })),\n    data: Buffer.from(text, \"utf8\"),\n  });\n};\n"]}