{"version":3,"file":"constants.js","sourceRoot":"","sources":["../../src/constants.ts"],"names":[],"mappings":"AAOA;;;;GAIG;AACH,MAAM,CAAC,MAAM,aAAa,GAAG,CAAC,OAAgB,EAAU,EAAE;IACxD,IAAI,OAAO,KAAK,cAAc,EAAE;QAC9B,OAAO,SAAS,CAAC;KAClB;IACD,OAAO,OAAO,CAAC;AACjB,CAAC,CAAC;AAgBF;;GAEG;AACH,MAAM,CAAC,MAAM,0BAA0B,GAAG;IACxC,cAAc,EAAE;QACd,IAAI,EAAE,cAAc;QACpB,QAAQ,EAAE,sCAAsC;KACjD;IACD,MAAM,EAAE;QACN,IAAI,EAAE,QAAQ;QACd,QAAQ,EAAE,gCAAgC;KAC3C;IACD,OAAO,EAAE;QACP,IAAI,EAAE,SAAS;QACf,QAAQ,EAAE,iCAAiC;KAC5C;IACD,QAAQ,EAAE;QACR,IAAI,EAAE,UAAU;QAChB,QAAQ,EAAE,uBAAuB;KAClC;CACO,CAAC","sourcesContent":["import type { Cluster, ConnectionConfig } from \"@solana/web3.js\";\n\n/**\n * A network: a Solana cluster or localnet.\n */\nexport type Network = Cluster | \"localnet\";\n\n/**\n * Formats the network as a string.\n * @param network\n * @returns\n */\nexport const formatNetwork = (network: Network): string => {\n  if (network === \"mainnet-beta\") {\n    return \"mainnet\";\n  }\n  return network;\n};\n\nexport type NetworkConfig = Readonly<\n  Omit<ConnectionConfig, \"wsEndpoint\"> & {\n    name: string;\n    /**\n     * HTTP endpoint to connect to for this network.\n     */\n    endpoint: string;\n    /**\n     * Websocket endpoint to connect to for this network.\n     */\n    endpointWs?: string;\n  }\n>;\n\n/**\n * Default configuration for all networks.\n */\nexport const DEFAULT_NETWORK_CONFIG_MAP = {\n  \"mainnet-beta\": {\n    name: \"Mainnet Beta\",\n    endpoint: \"https://solana-api.projectserum.com/\",\n  },\n  devnet: {\n    name: \"Devnet\",\n    endpoint: \"https://api.devnet.solana.com/\",\n  },\n  testnet: {\n    name: \"Testnet\",\n    endpoint: \"https://api.testnet.solana.com/\",\n  },\n  localnet: {\n    name: \"Localnet\",\n    endpoint: \"http://127.0.0.1:8899\",\n  },\n} as const;\n\nexport type NetworkConfigMap = { [N in Network]: NetworkConfig };\n"]}