{"version":3,"file":"layouts.js","sourceRoot":"","sources":["../../../src/instructions/layouts.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,YAAY,EAAE,MAAM,sBAAsB,CAAC;AACpD,OAAO,KAAK,YAAY,MAAM,uBAAuB,CAAC;AAGtD,OAAO,EAAE,UAAU,EAAE,MAAM,iBAAiB,CAAC;AAI7C,MAAM,CAAC,MAAM,sBAAsB,GAAG,YAAY,CAAC,MAAM,CAKtD;IACD,YAAY,CAAC,EAAE,CAAC,aAAa,CAAC;IAC9B,YAAY,CAAC,EAAE,CAAC,OAAO,CAAC;IACxB,YAAY,CAAC,WAAW,CAAC;IACzB,UAAU;CACX,CAAC,CAAC;AAEH,MAAM,CAAC,MAAM,YAAY,GAAG,YAAY,CAAC,MAAM,CAI5C;IACD,YAAY,CAAC,EAAE,CAAC,aAAa,CAAC;IAC9B,YAAY,CAAC,UAAU,CAAC;IACxB,YAAY,CAAC,kBAAkB,CAAC;CACjC,CAAC,CAAC;AAEH,MAAM,CAAC,MAAM,eAAe,GAAG,YAAY,CAAC,MAAM,CAK/C;IACD,YAAY,CAAC,EAAE,CAAC,aAAa,CAAC;IAC9B,YAAY,CAAC,cAAc,CAAC;IAC5B,YAAY,CAAC,cAAc,CAAC;IAC5B,YAAY,CAAC,wBAAwB,CAAC;CACvC,CAAC,CAAC;AAEH,MAAM,CAAC,MAAM,gBAAgB,GAAG,YAAY,CAAC,MAAM,CAKhD;IACD,YAAY,CAAC,EAAE,CAAC,aAAa,CAAC;IAC9B,YAAY,CAAC,iBAAiB,CAAC;IAC/B,YAAY,CAAC,eAAe,CAAC;IAC7B,YAAY,CAAC,eAAe,CAAC;CAC9B,CAAC,CAAC;AAEH,MAAM,CAAC,MAAM,mBAAmB,GAAG,YAAY,CAAC,MAAM,CAInD;IACD,YAAY,CAAC,EAAE,CAAC,aAAa,CAAC;IAC9B,YAAY,CAAC,iBAAiB,CAAC;IAC/B,YAAY,CAAC,oBAAoB,CAAC;CACnC,CAAC,CAAC;AAEH,MAAM,CAAC,MAAM,aAAa,GAAG,YAAY,CAAC,MAAM,CAI7C;IACD,YAAY,CAAC,EAAE,CAAC,aAAa,CAAC;IAC9B,YAAY,CAAC,WAAW,CAAC;IACzB,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC;CAChC,CAAC,CAAC;AAEH,MAAM,CAAC,MAAM,iBAAiB,GAAG,YAAY,CAAC,MAAM,CAEjD,CAAC,YAAY,CAAC,EAAE,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;AAErC,MAAM,CAAC,MAAM,aAAa,GAAG,YAAY,CAAC,MAAM,CAE7C,CAAC,YAAY,CAAC,EAAE,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;AAErC,MAAM,CAAC,MAAM,eAAe,GAAG,YAAY,CAAC,MAAM,CAE/C,CAAC,YAAY,CAAC,EAAE,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;AAErC,MAAM,CAAC,MAAM,qBAAqB,GAAG,YAAY,CAAC,MAAM,CAErD,CAAC,YAAY,CAAC,EAAE,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;AAErC,MAAM,CAAC,MAAM,qBAAqB,GAAG,YAAY,CAAC,MAAM,CAErD,CAAC,YAAY,CAAC,EAAE,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;AAErC,MAAM,CAAC,MAAM,sBAAsB,GAAG,YAAY,CAAC,MAAM,CAEtD,CAAC,YAAY,CAAC,EAAE,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;AAErC,MAAM,CAAC,MAAM,kBAAkB,GAAG,YAAY,CAAC,MAAM,CAGlD,CAAC,YAAY,CAAC,EAAE,CAAC,aAAa,CAAC,EAAE,UAAU,CAAC,CAAC,CAAC","sourcesContent":["import { Uint64Layout } from \"@saberhq/token-utils\";\nimport * as BufferLayout from \"@solana/buffer-layout\";\n\nimport type { RawFees } from \"../state/layout\";\nimport { FeesLayout } from \"../state/layout\";\nimport type { AdminInstruction } from \".\";\nimport type { StableSwapInstruction } from \"./swap\";\n\nexport const InitializeSwapIXLayout = BufferLayout.struct<{\n  instruction: StableSwapInstruction.INITIALIZE;\n  nonce: number;\n  ampFactor: Uint8Array;\n  fees: RawFees;\n}>([\n  BufferLayout.u8(\"instruction\"),\n  BufferLayout.u8(\"nonce\"),\n  Uint64Layout(\"ampFactor\"),\n  FeesLayout,\n]);\n\nexport const SwapIXLayout = BufferLayout.struct<{\n  instruction: StableSwapInstruction.SWAP;\n  amountIn: Uint8Array;\n  minimumAmountOut: Uint8Array;\n}>([\n  BufferLayout.u8(\"instruction\"),\n  Uint64Layout(\"amountIn\"),\n  Uint64Layout(\"minimumAmountOut\"),\n]);\n\nexport const DepositIXLayout = BufferLayout.struct<{\n  instruction: StableSwapInstruction.DEPOSIT;\n  tokenAmountA: Uint8Array;\n  tokenAmountB: Uint8Array;\n  minimumPoolTokenAmount: Uint8Array;\n}>([\n  BufferLayout.u8(\"instruction\"),\n  Uint64Layout(\"tokenAmountA\"),\n  Uint64Layout(\"tokenAmountB\"),\n  Uint64Layout(\"minimumPoolTokenAmount\"),\n]);\n\nexport const WithdrawIXLayout = BufferLayout.struct<{\n  instruction: StableSwapInstruction.WITHDRAW;\n  poolTokenAmount: Uint8Array;\n  minimumTokenA: Uint8Array;\n  minimumTokenB: Uint8Array;\n}>([\n  BufferLayout.u8(\"instruction\"),\n  Uint64Layout(\"poolTokenAmount\"),\n  Uint64Layout(\"minimumTokenA\"),\n  Uint64Layout(\"minimumTokenB\"),\n]);\n\nexport const WithdrawOneIXLayout = BufferLayout.struct<{\n  instruction: StableSwapInstruction.WITHDRAW_ONE;\n  poolTokenAmount: Uint8Array;\n  minimumTokenAmount: Uint8Array;\n}>([\n  BufferLayout.u8(\"instruction\"),\n  Uint64Layout(\"poolTokenAmount\"),\n  Uint64Layout(\"minimumTokenAmount\"),\n]);\n\nexport const RampAIXLayout = BufferLayout.struct<{\n  instruction: AdminInstruction.RAMP_A;\n  targetAmp: Uint8Array;\n  stopRampTS: number;\n}>([\n  BufferLayout.u8(\"instruction\"),\n  Uint64Layout(\"targetAmp\"),\n  BufferLayout.ns64(\"stopRampTS\"),\n]);\n\nexport const StopRampAIXLayout = BufferLayout.struct<{\n  instruction: AdminInstruction.STOP_RAMP_A;\n}>([BufferLayout.u8(\"instruction\")]);\n\nexport const PauseIXLayout = BufferLayout.struct<{\n  instruction: AdminInstruction.PAUSE;\n}>([BufferLayout.u8(\"instruction\")]);\n\nexport const UnpauseIXLayout = BufferLayout.struct<{\n  instruction: AdminInstruction.UNPAUSE;\n}>([BufferLayout.u8(\"instruction\")]);\n\nexport const SetFeeAccountIXLayout = BufferLayout.struct<{\n  instruction: AdminInstruction.SET_FEE_ACCOUNT;\n}>([BufferLayout.u8(\"instruction\")]);\n\nexport const ApplyNewAdminIXLayout = BufferLayout.struct<{\n  instruction: AdminInstruction.APPLY_NEW_ADMIN;\n}>([BufferLayout.u8(\"instruction\")]);\n\nexport const CommitNewAdminIXLayout = BufferLayout.struct<{\n  instruction: AdminInstruction.COMMIT_NEW_ADMIN;\n}>([BufferLayout.u8(\"instruction\")]);\n\nexport const SetNewFeesIXLayout = BufferLayout.struct<{\n  instruction: AdminInstruction.SET_NEW_FEES;\n  fees: RawFees;\n}>([BufferLayout.u8(\"instruction\"), FeesLayout]);\n"]}