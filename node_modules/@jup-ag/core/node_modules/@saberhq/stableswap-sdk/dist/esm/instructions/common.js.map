{"version":3,"file":"common.js","sourceRoot":"","sources":["../../../src/instructions/common.ts"],"names":[],"mappings":"AAIA,OAAO,EAAE,sBAAsB,EAAE,MAAM,iBAAiB,CAAC;AAEzD,MAAM,CAAC,MAAM,gBAAgB,GAAG,CAAC,EAC/B,MAAM,EAAE,EAAE,aAAa,EAAE,EACzB,IAAI,EACJ,IAAI,GAGL,EAA0B,EAAE;IAC3B,OAAO,IAAI,sBAAsB,CAAC;QAChC,IAAI;QACJ,SAAS,EAAE,aAAa;QACxB,IAAI;KACL,CAAC,CAAC;AACL,CAAC,CAAC","sourcesContent":["import type {\n  PublicKey,\n  TransactionInstructionCtorFields,\n} from \"@solana/web3.js\";\nimport { TransactionInstruction } from \"@solana/web3.js\";\n\nexport const buildInstruction = ({\n  config: { swapProgramID },\n  keys,\n  data,\n}: Pick<TransactionInstructionCtorFields, \"keys\" | \"data\"> & {\n  config: StableSwapConfig;\n}): TransactionInstruction => {\n  return new TransactionInstruction({\n    keys,\n    programId: swapProgramID,\n    data,\n  });\n};\n\nexport interface StableSwapConfig {\n  /**\n   * The public key identifying this instance of the Stable Swap.\n   */\n  readonly swapAccount: PublicKey;\n  /**\n   * Authority\n   */\n  readonly authority: PublicKey;\n  /**\n   * Program Identifier for the Swap program\n   */\n  readonly swapProgramID: PublicKey;\n  /**\n   * Program Identifier for the Token program\n   */\n  readonly tokenProgramID: PublicKey;\n}\n"]}